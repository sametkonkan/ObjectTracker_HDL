-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\alpha2_DIFFT.vhd
-- Created: 2024-12-03 00:37:46
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: alpha2_DIFFT
-- Source Path: ObjectTrackerHDL/ObjectTrackerHDL/Track/2-DCorrelation/2-DIFFT
-- Hierarchy Level: 3
-- Model version: 3.7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY alpha2_DIFFT IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        pixelIn_re                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
        pixelIn_im                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
        ctrlIn_valid                      :   IN    std_logic;
        pixelOut                          :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
        ctrlOut_hStart                    :   OUT   std_logic;
        ctrlOut_hEnd                      :   OUT   std_logic;
        ctrlOut_vStart                    :   OUT   std_logic;
        ctrlOut_vEnd                      :   OUT   std_logic;
        ctrlOut_valid                     :   OUT   std_logic
        );
END alpha2_DIFFT;


ARCHITECTURE rtl OF alpha2_DIFFT IS

  -- Component Declarations
  COMPONENT RowIFFT
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          dataIn_im                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          dataOut_im                      :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT CornerTurnMemory
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(63 DOWNTO 0);  -- ufix64
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT ColumnIFFT
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          dataIn_im                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En16
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT pixelBusGenerator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          validIn                         :   IN    std_logic;
          busOut_hStart                   :   OUT   std_logic;
          busOut_hEnd                     :   OUT   std_logic;
          busOut_vStart                   :   OUT   std_logic;
          busOut_vEnd                     :   OUT   std_logic;
          busOut_valid                    :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : RowIFFT
    USE ENTITY work.RowIFFT(rtl);

  FOR ALL : CornerTurnMemory
    USE ENTITY work.CornerTurnMemory(rtl);

  FOR ALL : ColumnIFFT
    USE ENTITY work.ColumnIFFT(rtl);

  FOR ALL : pixelBusGenerator
    USE ENTITY work.pixelBusGenerator(rtl);

  -- Signals
  SIGNAL valid                            : std_logic;
  SIGNAL RowIFFT_out1_re                  : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL RowIFFT_out1_im                  : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL validIn                          : std_logic;
  SIGNAL RowIFFT_out1_re_signed           : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL RowIFFT_out1_im_signed           : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL Data_Type_Conversion8_out1_re    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Type_Conversion8_out1_im    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Concat1_out1                 : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL dataOut                          : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL validOut                         : std_logic;
  SIGNAL dataOut_unsigned                 : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL Bit_Slice5_out1                  : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Slice4_out1                  : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Type_Conversion9_out1_re    : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL Data_Type_Conversion9_out1_im    : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL ColumnIFFT_out1_re               : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ColumnIFFT_out2                  : std_logic;
  SIGNAL pixelBusGenerator_out1_hStart    : std_logic;
  SIGNAL pixelBusGenerator_out1_hEnd      : std_logic;
  SIGNAL pixelBusGenerator_out1_vStart    : std_logic;
  SIGNAL pixelBusGenerator_out1_vEnd      : std_logic;
  SIGNAL pixelBusGenerator_out1_valid     : std_logic;

BEGIN
  u_RowIFFT : RowIFFT
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => pixelIn_re,  -- sfix24_En16
              dataIn_im => pixelIn_im,  -- sfix24_En16
              validIn => valid,
              dataOut_re => RowIFFT_out1_re,  -- sfix24_En16
              dataOut_im => RowIFFT_out1_im,  -- sfix24_En16
              validOut => validIn
              );

  u_CornerTurnMemory : CornerTurnMemory
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn => std_logic_vector(Bit_Concat1_out1),  -- ufix64
              validIn => validIn,
              dataOut => dataOut,  -- ufix64
              validOut => validOut
              );

  u_ColumnIFFT : ColumnIFFT
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => std_logic_vector(Data_Type_Conversion9_out1_re),  -- sfix24_En16
              dataIn_im => std_logic_vector(Data_Type_Conversion9_out1_im),  -- sfix24_En16
              validIn => validOut,
              dataOut_re => ColumnIFFT_out1_re,  -- sfix24_En16
              validOut => ColumnIFFT_out2
              );

  u_pixelBusGenerator : pixelBusGenerator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              validIn => ColumnIFFT_out2,
              busOut_hStart => pixelBusGenerator_out1_hStart,
              busOut_hEnd => pixelBusGenerator_out1_hEnd,
              busOut_vStart => pixelBusGenerator_out1_vStart,
              busOut_vEnd => pixelBusGenerator_out1_vEnd,
              busOut_valid => pixelBusGenerator_out1_valid
              );

  valid <= ctrlIn_valid;

  RowIFFT_out1_re_signed <= signed(RowIFFT_out1_re);

  RowIFFT_out1_im_signed <= signed(RowIFFT_out1_im);

  Data_Type_Conversion8_out1_re <= unsigned(resize(RowIFFT_out1_re_signed, 32));
  Data_Type_Conversion8_out1_im <= unsigned(resize(RowIFFT_out1_im_signed, 32));

  Bit_Concat1_out1 <= Data_Type_Conversion8_out1_re & Data_Type_Conversion8_out1_im;

  dataOut_unsigned <= unsigned(dataOut);

  Bit_Slice5_out1 <= dataOut_unsigned(63 DOWNTO 32);

  Bit_Slice4_out1 <= dataOut_unsigned(31 DOWNTO 0);

  Data_Type_Conversion9_out1_re <= signed(Bit_Slice5_out1(23 DOWNTO 0));
  Data_Type_Conversion9_out1_im <= signed(Bit_Slice4_out1(23 DOWNTO 0));

  pixelOut <= ColumnIFFT_out1_re;

  ctrlOut_hStart <= pixelBusGenerator_out1_hStart;

  ctrlOut_hEnd <= pixelBusGenerator_out1_hEnd;

  ctrlOut_vStart <= pixelBusGenerator_out1_vStart;

  ctrlOut_vEnd <= pixelBusGenerator_out1_vEnd;

  ctrlOut_valid <= pixelBusGenerator_out1_valid;

END rtl;

