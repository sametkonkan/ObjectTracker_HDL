-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\MATLAB_Function.vhd
-- Created: 2024-12-03 00:37:45
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: MATLAB_Function
-- Source Path: ObjectTrackerHDL/ObjectTrackerHDL/Overlay/VideoOverlay/MATLAB Function
-- Hierarchy Level: 3
-- Model version: 3.7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ObjectTrackerHDL_pkg.ALL;

ENTITY MATLAB_Function IS
  PORT( position                          :   IN    vector_of_std_logic_vector16(0 TO 3);  -- uint16 [4]
        rowCount                          :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        colCount                          :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        colorValue                        :   IN    vector_of_std_logic_vector8(0 TO 2);  -- uint8 [3]
        lineWidth                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Color                             :   OUT   vector_of_std_logic_vector8(0 TO 2);  -- uint8 [3]
        AddShape                          :   OUT   std_logic
        );
END MATLAB_Function;


ARCHITECTURE rtl OF MATLAB_Function IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL position_unsigned                : vector_of_unsigned16(0 TO 3);  -- uint16 [4]
  SIGNAL rowCount_signed                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL colCount_signed                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL colorValue_unsigned              : vector_of_unsigned8(0 TO 2);  -- uint8 [3]
  SIGNAL lineWidth_unsigned               : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Color_tmp                        : vector_of_unsigned8(0 TO 2);  -- uint8 [3]
  SIGNAL halfLineWidth                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocTopStart                : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocTopEnd                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocBottomStart             : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocBottomEnd               : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocLeftStart               : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocLeftEnd                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocRightStart              : signed(31 DOWNTO 0);  -- int32
  SIGNAL objectLocRightEnd                : signed(31 DOWNTO 0);  -- int32
  SIGNAL AddShapeHorLimit                 : std_logic;
  SIGNAL AddShapeVerLimit                 : std_logic;
  SIGNAL AddShapeHor                      : std_logic;
  SIGNAL AddShapeVer                      : std_logic;
  SIGNAL cast                             : signed(31 DOWNTO 0);  -- int32
  SIGNAL cast_1                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL cast_2                           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL sub_cast                         : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast                         : signed(31 DOWNTO 0);  -- int32
  SIGNAL sub_cast_1                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_1                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_2                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_3                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL sub_cast_2                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_4                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL sub_cast_3                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_5                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_6                       : signed(31 DOWNTO 0);  -- int32
  SIGNAL add_cast_7                       : signed(31 DOWNTO 0);  -- int32

BEGIN
  outputgen2: FOR k IN 0 TO 3 GENERATE
    position_unsigned(k) <= unsigned(position(k));
  END GENERATE;

  rowCount_signed <= signed(rowCount);

  colCount_signed <= signed(colCount);

  outputgen1: FOR k IN 0 TO 2 GENERATE
    colorValue_unsigned(k) <= unsigned(colorValue(k));
  END GENERATE;

  lineWidth_unsigned <= unsigned(lineWidth);

  cast <= signed(resize(lineWidth_unsigned, 32));
  cast_1 <= cast srl 1;
  cast_2 <= unsigned(cast_1(7 DOWNTO 0));
  halfLineWidth <= signed(resize(cast_2, 32));
  --[255 255 0]
  -- position must not be a column vector
  -- [x y width]
  sub_cast <= signed(resize(position_unsigned(0), 32));
  objectLocTopStart <= sub_cast - halfLineWidth;
  add_cast <= signed(resize(position_unsigned(0), 32));
  objectLocTopEnd <= add_cast + halfLineWidth;
  sub_cast_1 <= signed(resize(position_unsigned(0), 32));
  add_cast_1 <= signed(resize(position_unsigned(2), 32));
  objectLocBottomStart <= (sub_cast_1 - halfLineWidth) + add_cast_1;
  add_cast_2 <= signed(resize(position_unsigned(0), 32));
  add_cast_3 <= signed(resize(position_unsigned(2), 32));
  objectLocBottomEnd <= (add_cast_2 + halfLineWidth) + add_cast_3;
  sub_cast_2 <= signed(resize(position_unsigned(1), 32));
  objectLocLeftStart <= sub_cast_2 - halfLineWidth;
  add_cast_4 <= signed(resize(position_unsigned(1), 32));
  objectLocLeftEnd <= add_cast_4 + halfLineWidth;
  sub_cast_3 <= signed(resize(position_unsigned(1), 32));
  add_cast_5 <= signed(resize(position_unsigned(3), 32));
  objectLocRightStart <= (sub_cast_3 - halfLineWidth) + add_cast_5;
  add_cast_6 <= signed(resize(position_unsigned(1), 32));
  add_cast_7 <= signed(resize(position_unsigned(3), 32));
  objectLocRightEnd <= (add_cast_6 + halfLineWidth) + add_cast_7;
  
  AddShapeHorLimit <= '1' WHEN (rowCount_signed >= objectLocTopStart) AND (rowCount_signed <= objectLocBottomEnd) ELSE
      '0';
  
  AddShapeVerLimit <= '1' WHEN (colCount_signed >= objectLocLeftStart) AND (colCount_signed <= objectLocRightEnd) ELSE
      '0';
  AddShapeHor <= hdlcoder_to_stdlogic(((rowCount_signed >= objectLocTopStart) AND (rowCount_signed <= objectLocTopEnd)) OR ((rowCount_signed >= objectLocBottomStart) AND (rowCount_signed <= objectLocBottomEnd))) AND AddShapeVerLimit;
  AddShapeVer <= hdlcoder_to_stdlogic(((colCount_signed >= objectLocLeftStart) AND (colCount_signed <= objectLocLeftEnd)) OR ((colCount_signed >= objectLocRightStart) AND (colCount_signed <= objectLocRightEnd))) AND AddShapeHorLimit;

  Color_tmp_gen: FOR t_0 IN 0 TO 2 GENERATE
    Color_tmp(t_0) <= colorValue_unsigned(t_0);
  END GENERATE Color_tmp_gen;

  AddShape <= AddShapeHor OR AddShapeVer;

  outputgen: FOR k IN 0 TO 2 GENERATE
    Color(k) <= std_logic_vector(Color_tmp(k));
  END GENERATE;

END rtl;

