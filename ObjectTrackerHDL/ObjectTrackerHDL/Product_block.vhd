-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\Product_block.vhd
-- Created: 2024-12-03 00:37:46
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Product_block
-- Source Path: Product
-- Hierarchy Level: 3
-- Model version: 3.7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Product_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        mulIn1                            :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En16
        mulIn2                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        mulOut                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
        );
END Product_block;


ARCHITECTURE rtl OF Product_block IS

  -- Signals
  SIGNAL mulIn2_signed                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay8_out1                      : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Constant1_out1                   : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Constant1_out1_1                 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Constant4_out1                   : std_logic;  -- ufix1
  SIGNAL Constant4_out1_1                 : std_logic;  -- ufix1
  SIGNAL mulIn1_unsigned                  : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Delay7_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Bit_Concat7_out1                 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Switch_out1                      : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Bit_Slice1_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Switch1_out1                     : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL AddOut_1_1                       : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL DelayOut_1_1                     : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL BitSliceOutS_2                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Constant2_out1_1                 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Constant5OutS                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Constant5OutS_1                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL BitSliceOutS_3                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_2                 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Constant2_out1_3                 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Constant5OutS_2                  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Constant5OutS_3                  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Concat1_out1                 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Switch2OutS                      : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Bit_Concat1_out1_1               : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Switch2OutS_1                    : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL AddOut_1_2                       : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL BitSliceOutS_4                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_4                 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Constant2_out1_5                 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Constant5OutS_4                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Constant5OutS_5                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL BitSliceOutS_5                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_6                 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Constant2_out1_7                 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Constant5OutS_6                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Constant5OutS_7                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Bit_Concat1_out1_2               : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Switch2OutS_2                    : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Bit_Concat1_out1_3               : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Switch2OutS_3                    : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL AddOut_1_3                       : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL DelayOut_1_3                     : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL BitSliceOutS_6                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_8                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant2_out1_9                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant5OutS_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant5OutS_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL BitSliceOutS_7                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_10                : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant2_out1_11                : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant5OutS_10                 : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Constant5OutS_11                 : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Bit_Concat1_out1_4               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch2OutS_4                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Bit_Concat1_out1_5               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch2OutS_5                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL AddOut_1_4                       : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL DelayOut_1_2                     : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL AddOut_2_1                       : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL DelayOut_1_4                     : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL AddOut_2_2                       : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL AddOut_3_1                       : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL DelayOut_3_1                     : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL BitSliceOutS_8                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_12                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Constant2_out1_13                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Constant5OutS_12                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Constant5OutS_13                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL BitSliceOutS_9                   : std_logic;  -- ufix1
  SIGNAL Constant2_out1_14                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Constant2_out1_15                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Constant5OutS_14                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Constant5OutS_15                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Bit_Concat1_out1_6               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Switch2OutS_6                    : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Bit_Concat1_out1_7               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Switch2OutS_7                    : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL AddOut_1_5                       : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL DelayOut_1_5                     : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL BitSliceOutS_10                  : std_logic;  -- ufix1
  SIGNAL Constant2_out1_16                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Constant2_out1_17                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Constant5OutS_16                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Constant5OutS_17                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL BitSliceOutS_11                  : std_logic;  -- ufix1
  SIGNAL Constant2_out1_18                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Constant2_out1_19                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Constant5OutS_18                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Constant5OutS_19                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Bit_Concat1_out1_8               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Switch2OutS_8                    : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Bit_Concat1_out1_9               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Switch2OutS_9                    : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL AddOut_1_6                       : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL BitSliceOutS_12                  : std_logic;  -- ufix1
  SIGNAL Constant2_out1_20                : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Constant2_out1_21                : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Constant5OutS_20                 : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Constant5OutS_21                 : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL BitSliceOutS_13                  : std_logic;  -- ufix1
  SIGNAL Constant2_out1_22                : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Constant2_out1_23                : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Constant5OutS_22                 : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Constant5OutS_23                 : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Bit_Concat1_out1_10              : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Switch2OutS_10                   : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Bit_Concat1_out1_11              : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Switch2OutS_11                   : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL AddOut_1_7                       : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DelayOut_1_7                     : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL BitSliceOutS_14                  : std_logic;  -- ufix1
  SIGNAL Constant2_out1_24                : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Constant2_out1_25                : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Constant5OutS_24                 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Constant5OutS_25                 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL BitSliceOutS_15                  : std_logic;  -- ufix1
  SIGNAL Constant2_out1_26                : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Constant2_out1_27                : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Constant5OutS_26                 : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL Constant5OutS_27                 : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL Bit_Concat1_out1_12              : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Switch2OutS_12                   : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Bit_Concat1_out1_13              : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Switch2OutS_13                   : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL AddOut_1_8                       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL DelayOut_1_6                     : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL AddOut_2_3                       : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL DelayOut_1_8                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL AddOut_2_4                       : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL AddOut_3_2                       : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL DelayOut_3_2                     : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL AddOut_4_1                       : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL Data_Type_Conversion1_out1       : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL DataTypeConversionOut1S          : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL mulOut_tmp                       : signed(31 DOWNTO 0);  -- sfix32_En28

BEGIN
  mulIn2_signed <= signed(mulIn2);

  Delay8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay8_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay8_out1 <= mulIn2_signed;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Bit_Slice_out1 <= Delay8_out1(0);

  Constant1_out1 <= to_unsigned(16#00000#, 17);

  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant1_out1_1 <= to_unsigned(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant1_out1_1 <= Constant1_out1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  Constant4_out1 <= '0';

  reduced_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant4_out1_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant4_out1_1 <= Constant4_out1;
      END IF;
    END IF;
  END PROCESS reduced_1_process;


  mulIn1_unsigned <= unsigned(mulIn1);

  Delay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay7_out1 <= to_unsigned(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay7_out1 <= mulIn1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Bit_Concat7_out1 <= Constant4_out1_1 & Delay7_out1;

  
  Switch_out1 <= Constant1_out1_1 WHEN Bit_Slice_out1 = '0' ELSE
      Bit_Concat7_out1;

  Bit_Slice1_out1 <= Delay8_out1(1);

  Bit_Concat_out1 <= Delay7_out1 & Constant4_out1_1;

  
  Switch1_out1 <= Constant1_out1_1 WHEN Bit_Slice1_out1 = '0' ELSE
      Bit_Concat_out1;

  AddOut_1_1 <= resize(Switch_out1, 18) + resize(Switch1_out1, 18);

  Delay_1_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_1 <= to_unsigned(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_1 <= AddOut_1_1;
      END IF;
    END IF;
  END PROCESS Delay_1_1_process;


  BitSliceOutS_2 <= Delay8_out1(2);

  Constant2_out1 <= to_unsigned(16#00000#, 19);

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_1 <= to_unsigned(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_1 <= Constant2_out1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  Constant5OutS <= to_unsigned(16#0#, 2);

  delayMatch_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_1 <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_1 <= Constant5OutS;
      END IF;
    END IF;
  END PROCESS delayMatch_1_process;


  BitSliceOutS_3 <= Delay8_out1(3);

  Constant2_out1_2 <= to_unsigned(16#00000#, 19);

  delayMatch_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_3 <= to_unsigned(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_3 <= Constant2_out1_2;
      END IF;
    END IF;
  END PROCESS delayMatch_2_process;


  Constant5OutS_2 <= to_unsigned(16#0#, 3);

  delayMatch_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_3 <= to_unsigned(16#0#, 3);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_3 <= Constant5OutS_2;
      END IF;
    END IF;
  END PROCESS delayMatch_3_process;


  Bit_Concat1_out1 <= Bit_Concat7_out1 & Constant5OutS_1;

  
  Switch2OutS <= Constant2_out1_1 WHEN BitSliceOutS_2 = '0' ELSE
      Bit_Concat1_out1;

  Bit_Concat1_out1_1 <= Delay7_out1 & Constant5OutS_3;

  
  Switch2OutS_1 <= Constant2_out1_3 WHEN BitSliceOutS_3 = '0' ELSE
      Bit_Concat1_out1_1;

  AddOut_1_2 <= resize(Switch2OutS, 20) + resize(Switch2OutS_1, 20);

  BitSliceOutS_4 <= Delay8_out1(4);

  Constant2_out1_4 <= to_unsigned(16#000000#, 21);

  delayMatch_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_5 <= to_unsigned(16#000000#, 21);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_5 <= Constant2_out1_4;
      END IF;
    END IF;
  END PROCESS delayMatch_4_process;


  Constant5OutS_4 <= to_unsigned(16#0#, 4);

  delayMatch_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_5 <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_5 <= Constant5OutS_4;
      END IF;
    END IF;
  END PROCESS delayMatch_5_process;


  BitSliceOutS_5 <= Delay8_out1(5);

  Constant2_out1_6 <= to_unsigned(16#000000#, 21);

  delayMatch_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_7 <= to_unsigned(16#000000#, 21);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_7 <= Constant2_out1_6;
      END IF;
    END IF;
  END PROCESS delayMatch_6_process;


  Constant5OutS_6 <= to_unsigned(16#00#, 5);

  delayMatch_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_7 <= to_unsigned(16#00#, 5);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_7 <= Constant5OutS_6;
      END IF;
    END IF;
  END PROCESS delayMatch_7_process;


  Bit_Concat1_out1_2 <= Bit_Concat7_out1 & Constant5OutS_5;

  
  Switch2OutS_2 <= Constant2_out1_5 WHEN BitSliceOutS_4 = '0' ELSE
      Bit_Concat1_out1_2;

  Bit_Concat1_out1_3 <= Delay7_out1 & Constant5OutS_7;

  
  Switch2OutS_3 <= Constant2_out1_7 WHEN BitSliceOutS_5 = '0' ELSE
      Bit_Concat1_out1_3;

  AddOut_1_3 <= resize(Switch2OutS_2, 22) + resize(Switch2OutS_3, 22);

  Delay_1_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_3 <= to_unsigned(16#000000#, 22);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_3 <= AddOut_1_3;
      END IF;
    END IF;
  END PROCESS Delay_1_3_process;


  BitSliceOutS_6 <= Delay8_out1(6);

  Constant2_out1_8 <= to_unsigned(16#000000#, 23);

  delayMatch_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_9 <= to_unsigned(16#000000#, 23);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_9 <= Constant2_out1_8;
      END IF;
    END IF;
  END PROCESS delayMatch_8_process;


  Constant5OutS_8 <= to_unsigned(16#00#, 6);

  delayMatch_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_9 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_9 <= Constant5OutS_8;
      END IF;
    END IF;
  END PROCESS delayMatch_9_process;


  BitSliceOutS_7 <= Delay8_out1(7);

  Constant2_out1_10 <= to_unsigned(16#000000#, 23);

  delayMatch_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_11 <= to_unsigned(16#000000#, 23);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_11 <= Constant2_out1_10;
      END IF;
    END IF;
  END PROCESS delayMatch_10_process;


  Constant5OutS_10 <= to_unsigned(16#00#, 7);

  delayMatch_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_11 <= to_unsigned(16#00#, 7);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_11 <= Constant5OutS_10;
      END IF;
    END IF;
  END PROCESS delayMatch_11_process;


  Bit_Concat1_out1_4 <= Bit_Concat7_out1 & Constant5OutS_9;

  
  Switch2OutS_4 <= Constant2_out1_9 WHEN BitSliceOutS_6 = '0' ELSE
      Bit_Concat1_out1_4;

  Bit_Concat1_out1_5 <= Delay7_out1 & Constant5OutS_11;

  
  Switch2OutS_5 <= Constant2_out1_11 WHEN BitSliceOutS_7 = '0' ELSE
      Bit_Concat1_out1_5;

  AddOut_1_4 <= resize(Switch2OutS_4, 24) + resize(Switch2OutS_5, 24);

  Delay_1_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_2 <= to_unsigned(16#00000#, 20);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_2 <= AddOut_1_2;
      END IF;
    END IF;
  END PROCESS Delay_1_2_process;


  AddOut_2_1 <= resize(DelayOut_1_1, 21) + resize(DelayOut_1_2, 21);

  Delay_1_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_4 <= to_unsigned(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_4 <= AddOut_1_4;
      END IF;
    END IF;
  END PROCESS Delay_1_4_process;


  AddOut_2_2 <= resize(DelayOut_1_3, 25) + resize(DelayOut_1_4, 25);

  AddOut_3_1 <= resize(AddOut_2_1, 26) + resize(AddOut_2_2, 26);

  Delay_3_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_3_1 <= to_unsigned(16#0000000#, 26);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_3_1 <= AddOut_3_1;
      END IF;
    END IF;
  END PROCESS Delay_3_1_process;


  BitSliceOutS_8 <= Delay8_out1(8);

  Constant2_out1_12 <= to_unsigned(16#0000000#, 25);

  delayMatch_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_13 <= to_unsigned(16#0000000#, 25);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_13 <= Constant2_out1_12;
      END IF;
    END IF;
  END PROCESS delayMatch_12_process;


  Constant5OutS_12 <= to_unsigned(16#00#, 8);

  delayMatch_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_13 <= Constant5OutS_12;
      END IF;
    END IF;
  END PROCESS delayMatch_13_process;


  BitSliceOutS_9 <= Delay8_out1(9);

  Constant2_out1_14 <= to_unsigned(16#0000000#, 25);

  delayMatch_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_15 <= to_unsigned(16#0000000#, 25);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_15 <= Constant2_out1_14;
      END IF;
    END IF;
  END PROCESS delayMatch_14_process;


  Constant5OutS_14 <= to_unsigned(16#000#, 9);

  delayMatch_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_15 <= to_unsigned(16#000#, 9);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_15 <= Constant5OutS_14;
      END IF;
    END IF;
  END PROCESS delayMatch_15_process;


  Bit_Concat1_out1_6 <= Bit_Concat7_out1 & Constant5OutS_13;

  
  Switch2OutS_6 <= Constant2_out1_13 WHEN BitSliceOutS_8 = '0' ELSE
      Bit_Concat1_out1_6;

  Bit_Concat1_out1_7 <= Delay7_out1 & Constant5OutS_15;

  
  Switch2OutS_7 <= Constant2_out1_15 WHEN BitSliceOutS_9 = '0' ELSE
      Bit_Concat1_out1_7;

  AddOut_1_5 <= resize(Switch2OutS_6, 26) + resize(Switch2OutS_7, 26);

  Delay_1_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_5 <= to_unsigned(16#0000000#, 26);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_5 <= AddOut_1_5;
      END IF;
    END IF;
  END PROCESS Delay_1_5_process;


  BitSliceOutS_10 <= Delay8_out1(10);

  Constant2_out1_16 <= to_unsigned(16#0000000#, 27);

  delayMatch_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_17 <= to_unsigned(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_17 <= Constant2_out1_16;
      END IF;
    END IF;
  END PROCESS delayMatch_16_process;


  Constant5OutS_16 <= to_unsigned(16#000#, 10);

  delayMatch_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_17 <= to_unsigned(16#000#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_17 <= Constant5OutS_16;
      END IF;
    END IF;
  END PROCESS delayMatch_17_process;


  BitSliceOutS_11 <= Delay8_out1(11);

  Constant2_out1_18 <= to_unsigned(16#0000000#, 27);

  delayMatch_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_19 <= to_unsigned(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_19 <= Constant2_out1_18;
      END IF;
    END IF;
  END PROCESS delayMatch_18_process;


  Constant5OutS_18 <= to_unsigned(16#000#, 11);

  delayMatch_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_19 <= to_unsigned(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_19 <= Constant5OutS_18;
      END IF;
    END IF;
  END PROCESS delayMatch_19_process;


  Bit_Concat1_out1_8 <= Bit_Concat7_out1 & Constant5OutS_17;

  
  Switch2OutS_8 <= Constant2_out1_17 WHEN BitSliceOutS_10 = '0' ELSE
      Bit_Concat1_out1_8;

  Bit_Concat1_out1_9 <= Delay7_out1 & Constant5OutS_19;

  
  Switch2OutS_9 <= Constant2_out1_19 WHEN BitSliceOutS_11 = '0' ELSE
      Bit_Concat1_out1_9;

  AddOut_1_6 <= resize(Switch2OutS_8, 28) + resize(Switch2OutS_9, 28);

  BitSliceOutS_12 <= Delay8_out1(12);

  Constant2_out1_20 <= to_unsigned(16#00000000#, 29);

  delayMatch_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_21 <= to_unsigned(16#00000000#, 29);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_21 <= Constant2_out1_20;
      END IF;
    END IF;
  END PROCESS delayMatch_20_process;


  Constant5OutS_20 <= to_unsigned(16#000#, 12);

  delayMatch_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_21 <= to_unsigned(16#000#, 12);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_21 <= Constant5OutS_20;
      END IF;
    END IF;
  END PROCESS delayMatch_21_process;


  BitSliceOutS_13 <= Delay8_out1(13);

  Constant2_out1_22 <= to_unsigned(16#00000000#, 29);

  delayMatch_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_23 <= to_unsigned(16#00000000#, 29);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_23 <= Constant2_out1_22;
      END IF;
    END IF;
  END PROCESS delayMatch_22_process;


  Constant5OutS_22 <= to_unsigned(16#0000#, 13);

  delayMatch_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_23 <= to_unsigned(16#0000#, 13);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_23 <= Constant5OutS_22;
      END IF;
    END IF;
  END PROCESS delayMatch_23_process;


  Bit_Concat1_out1_10 <= Bit_Concat7_out1 & Constant5OutS_21;

  
  Switch2OutS_10 <= Constant2_out1_21 WHEN BitSliceOutS_12 = '0' ELSE
      Bit_Concat1_out1_10;

  Bit_Concat1_out1_11 <= Delay7_out1 & Constant5OutS_23;

  
  Switch2OutS_11 <= Constant2_out1_23 WHEN BitSliceOutS_13 = '0' ELSE
      Bit_Concat1_out1_11;

  AddOut_1_7 <= resize(Switch2OutS_10, 30) + resize(Switch2OutS_11, 30);

  Delay_1_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_7 <= to_unsigned(16#00000000#, 30);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_7 <= AddOut_1_7;
      END IF;
    END IF;
  END PROCESS Delay_1_7_process;


  BitSliceOutS_14 <= Delay8_out1(14);

  Constant2_out1_24 <= to_unsigned(16#00000000#, 31);

  delayMatch_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_25 <= to_unsigned(16#00000000#, 31);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_25 <= Constant2_out1_24;
      END IF;
    END IF;
  END PROCESS delayMatch_24_process;


  Constant5OutS_24 <= to_unsigned(16#0000#, 14);

  delayMatch_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_25 <= to_unsigned(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_25 <= Constant5OutS_24;
      END IF;
    END IF;
  END PROCESS delayMatch_25_process;


  BitSliceOutS_15 <= Delay8_out1(15);

  Constant2_out1_26 <= to_unsigned(16#00000000#, 31);

  delayMatch_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant2_out1_27 <= to_unsigned(16#00000000#, 31);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant2_out1_27 <= Constant2_out1_26;
      END IF;
    END IF;
  END PROCESS delayMatch_26_process;


  Constant5OutS_26 <= to_unsigned(16#0000#, 15);

  delayMatch_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Constant5OutS_27 <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Constant5OutS_27 <= Constant5OutS_26;
      END IF;
    END IF;
  END PROCESS delayMatch_27_process;


  Bit_Concat1_out1_12 <= Bit_Concat7_out1 & Constant5OutS_25;

  
  Switch2OutS_12 <= Constant2_out1_25 WHEN BitSliceOutS_14 = '0' ELSE
      Bit_Concat1_out1_12;

  Bit_Concat1_out1_13 <= Delay7_out1 & Constant5OutS_27;

  
  Switch2OutS_13 <= Constant2_out1_27 WHEN BitSliceOutS_15 = '0' ELSE
      Bit_Concat1_out1_13;

  AddOut_1_8 <= resize(Switch2OutS_12, 32) - resize(Switch2OutS_13, 32);

  Delay_1_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_6 <= to_unsigned(16#0000000#, 28);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_6 <= AddOut_1_6;
      END IF;
    END IF;
  END PROCESS Delay_1_6_process;


  AddOut_2_3 <= resize(DelayOut_1_5, 29) + resize(DelayOut_1_6, 29);

  Delay_1_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_1_8 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_1_8 <= AddOut_1_8;
      END IF;
    END IF;
  END PROCESS Delay_1_8_process;


  AddOut_2_4 <= resize(DelayOut_1_7, 33) + resize(DelayOut_1_8, 33);

  AddOut_3_2 <= resize(AddOut_2_3, 34) + resize(AddOut_2_4, 34);

  Delay_3_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DelayOut_3_2 <= to_unsigned(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        DelayOut_3_2 <= AddOut_3_2;
      END IF;
    END IF;
  END PROCESS Delay_3_2_process;


  AddOut_4_1 <= resize(DelayOut_3_1, 35) + resize(DelayOut_3_2, 35);

  Data_Type_Conversion1_out1 <= signed(AddOut_4_1(31 DOWNTO 0));

  DataTypeConversionOut1S <= Data_Type_Conversion1_out1;

  Delay9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOut_tmp <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOut_tmp <= DataTypeConversionOut1S;
      END IF;
    END IF;
  END PROCESS Delay9_process;


  mulOut <= std_logic_vector(mulOut_tmp);

END rtl;

