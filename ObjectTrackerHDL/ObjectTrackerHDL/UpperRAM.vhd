-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\UpperRAM.vhd
-- Created: 2024-12-03 00:37:45
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UpperRAM
-- Source Path: ObjectTrackerHDL/ObjectTrackerHDL/Track/2-DCorrelation/2-DIFFT/CornerTurnMemory/UpperRAM
-- Hierarchy Level: 5
-- Model version: 3.7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY UpperRAM IS
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        din                               :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        wr_addr                           :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        wr_en                             :   IN    std_logic;
        rd_addr                           :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        dout                              :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END UpperRAM;


ARCHITECTURE rtl OF UpperRAM IS

  -- Component Declarations
  COMPONENT SimpleDualPortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout                            :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SimpleDualPortRAM_generic
    USE ENTITY work.SimpleDualPortRAM_generic(rtl);

  -- Signals
  SIGNAL complexDataConcat_out1           : std_logic_vector(63 DOWNTO 0);  -- ufix64

BEGIN
  u_complexDataConcat : SimpleDualPortRAM_generic
    GENERIC MAP( AddrWidth => 14,
                 DataWidth => 64
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => din,
              wr_addr => wr_addr,
              wr_en => wr_en,
              rd_addr => rd_addr,
              dout => complexDataConcat_out1
              );

  dout <= complexDataConcat_out1;

END rtl;

