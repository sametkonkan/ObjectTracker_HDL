-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\RADIX22FFT_SDF1_7_block2.vhd
-- Created: 2024-12-03 00:37:46
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: RADIX22FFT_SDF1_7_block2
-- Source Path: ObjectTrackerHDL/ObjectTrackerHDL/Track/2-DCorrelation/Curr2-DFFT/RowFFT/RADIX22FFT_SDF1_7
-- Hierarchy Level: 5
-- Model version: 3.7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ObjectTrackerHDL_pkg.ALL;

ENTITY RADIX22FFT_SDF1_7_block2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        din_7_re_dly                      :   IN    std_logic_vector(37 DOWNTO 0);  -- sfix38_En28
        din_7_im_dly                      :   IN    std_logic_vector(37 DOWNTO 0);  -- sfix38_En28
        din_7_vld_dly                     :   IN    std_logic;
        rd_7_Addr                         :   IN    std_logic;
        rd_7_Enb_dly                      :   IN    std_logic;
        twdl_7_re                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
        twdl_7_im                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
        proc_7_enb                        :   IN    std_logic;
        dout_7_re                         :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
        dout_7_im                         :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
        dout_7_vld                        :   OUT   std_logic;
        dinXTwdl_7_vld                    :   OUT   std_logic
        );
END RADIX22FFT_SDF1_7_block2;


ARCHITECTURE rtl OF RADIX22FFT_SDF1_7_block2 IS

  -- Component Declarations
  COMPONENT Complex4Multiply_block10
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          din_re                          :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          din_im                          :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          din_7_vld_dly                   :   IN    std_logic;
          twdl_7_re                       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
          twdl_7_im                       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
          dinXTwdl_re                     :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          dinXTwdl_im                     :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          dinXTwdl_7_vld                  :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SDFCommutator7_block2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          din_7_vld_dly                   :   IN    std_logic;
          xf_re                           :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          xf_im                           :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          xf_vld                          :   IN    std_logic;
          dinXTwdlf_re                    :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          dinXTwdlf_im                    :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          dinxTwdlf_vld                   :   IN    std_logic;
          btf1_re                         :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          btf1_im                         :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          btf2_re                         :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          btf2_im                         :   IN    std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          btf_vld                         :   IN    std_logic;
          wrData_re                       :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          wrData_im                       :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          wrAddr                          :   OUT   std_logic;  -- ufix1
          wrEnb                           :   OUT   std_logic;
          dout_7_re                       :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          dout_7_im                       :   OUT   std_logic_vector(38 DOWNTO 0);  -- sfix39_En28
          dout_7_vld                      :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Complex4Multiply_block10
    USE ENTITY work.Complex4Multiply_block10(rtl);

  FOR ALL : SDFCommutator7_block2
    USE ENTITY work.SDFCommutator7_block2(rtl);

  -- Signals
  SIGNAL din_7_re_dly_signed              : signed(37 DOWNTO 0);  -- sfix38_En28
  SIGNAL din_re                           : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL din_7_im_dly_signed              : signed(37 DOWNTO 0);  -- sfix38_En28
  SIGNAL din_im                           : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL dinXTwdl_re                      : std_logic_vector(38 DOWNTO 0);  -- ufix39
  SIGNAL dinXTwdl_im                      : std_logic_vector(38 DOWNTO 0);  -- ufix39
  SIGNAL dinXTwdl_7_vld_1                 : std_logic;
  SIGNAL dinXTwdl_re_signed               : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL dinXTwdl_im_signed               : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL x_vld                            : std_logic;
  SIGNAL btf2_im                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL btf2_re                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL btf1_im                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL btf1_re                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL dinXTwdlf_im                     : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL dinXTwdlf_re                     : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL xf_im                            : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL wrData_im                        : std_logic_vector(38 DOWNTO 0);  -- ufix39
  SIGNAL wrData_im_signed                 : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL wrData_re                        : std_logic_vector(38 DOWNTO 0);  -- ufix39
  SIGNAL wrData_re_signed                 : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL wrAddr                           : std_logic;  -- ufix1
  SIGNAL wrEnb                            : std_logic;
  SIGNAL twoLocationReg_0_MEM_re_0        : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL twoLocationReg_0_MEM_im_0        : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL twoLocationReg_0_MEM_re_1        : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL twoLocationReg_0_MEM_im_1        : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL twoLocationReg_0_dout_re_reg     : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL twoLocationReg_0_dout_im_reg     : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL twoLocationReg_0_MEM_re_0_next   : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL twoLocationReg_0_MEM_im_0_next   : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL twoLocationReg_0_MEM_re_1_next   : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL twoLocationReg_0_MEM_im_1_next   : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL twoLocationReg_0_dout_re_reg_next : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL twoLocationReg_0_dout_im_reg_next : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL x_re                             : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL x_im                             : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL Radix22ButterflyG1_btf1_re_reg   : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL Radix22ButterflyG1_btf1_im_reg   : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL Radix22ButterflyG1_btf2_re_reg   : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL Radix22ButterflyG1_btf2_im_reg   : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL Radix22ButterflyG1_dinXtwdl_re_dly1 : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL Radix22ButterflyG1_dinXtwdl_im_dly1 : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL Radix22ButterflyG1_dinXtwdl_re_dly2 : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL Radix22ButterflyG1_dinXtwdl_im_dly2 : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL Radix22ButterflyG1_dinXtwdl_vld_dly1 : std_logic;
  SIGNAL Radix22ButterflyG1_dinXtwdl_vld_dly2 : std_logic;
  SIGNAL Radix22ButterflyG1_btf1_re_reg_next : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_btf1_im_reg_next : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_btf2_re_reg_next : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_btf2_im_reg_next : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_add_cast      : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_add_cast_1    : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_sub_cast      : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_sub_cast_1    : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_add_cast_2    : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_add_cast_3    : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_sub_cast_2    : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL Radix22ButterflyG1_sub_cast_3    : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL xf_re                            : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL xf_vld                           : std_logic;
  SIGNAL dinxTwdlf_vld                    : std_logic;
  SIGNAL btf_vld                          : std_logic;
  SIGNAL dout_7_re_tmp                    : std_logic_vector(38 DOWNTO 0);  -- ufix39
  SIGNAL dout_7_im_tmp                    : std_logic_vector(38 DOWNTO 0);  -- ufix39

BEGIN
  u_MUL4 : Complex4Multiply_block10
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              din_re => std_logic_vector(din_re),  -- sfix39_En28
              din_im => std_logic_vector(din_im),  -- sfix39_En28
              din_7_vld_dly => din_7_vld_dly,
              twdl_7_re => twdl_7_re,  -- sfix32_En30
              twdl_7_im => twdl_7_im,  -- sfix32_En30
              dinXTwdl_re => dinXTwdl_re,  -- sfix39_En28
              dinXTwdl_im => dinXTwdl_im,  -- sfix39_En28
              dinXTwdl_7_vld => dinXTwdl_7_vld_1
              );

  u_SDFCOMMUTATOR_7 : SDFCommutator7_block2
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              din_7_vld_dly => din_7_vld_dly,
              xf_re => std_logic_vector(xf_re),  -- sfix39_En28
              xf_im => std_logic_vector(xf_im),  -- sfix39_En28
              xf_vld => xf_vld,
              dinXTwdlf_re => std_logic_vector(dinXTwdlf_re),  -- sfix39_En28
              dinXTwdlf_im => std_logic_vector(dinXTwdlf_im),  -- sfix39_En28
              dinxTwdlf_vld => dinxTwdlf_vld,
              btf1_re => std_logic_vector(btf1_re),  -- sfix39_En28
              btf1_im => std_logic_vector(btf1_im),  -- sfix39_En28
              btf2_re => std_logic_vector(btf2_re),  -- sfix39_En28
              btf2_im => std_logic_vector(btf2_im),  -- sfix39_En28
              btf_vld => btf_vld,
              wrData_re => wrData_re,  -- sfix39_En28
              wrData_im => wrData_im,  -- sfix39_En28
              wrAddr => wrAddr,  -- ufix1
              wrEnb => wrEnb,
              dout_7_re => dout_7_re_tmp,  -- sfix39_En28
              dout_7_im => dout_7_im_tmp,  -- sfix39_En28
              dout_7_vld => dout_7_vld
              );

  din_7_re_dly_signed <= signed(din_7_re_dly);

  din_re <= resize(din_7_re_dly_signed, 39);

  din_7_im_dly_signed <= signed(din_7_im_dly);

  din_im <= resize(din_7_im_dly_signed, 39);

  dinXTwdl_re_signed <= signed(dinXTwdl_re);

  dinXTwdl_im_signed <= signed(dinXTwdl_im);

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      x_vld <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        x_vld <= rd_7_Enb_dly;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  wrData_im_signed <= signed(wrData_im);

  wrData_re_signed <= signed(wrData_re);

  -- twoLocationReg_0
  twoLocationReg_0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twoLocationReg_0_MEM_re_0 <= to_signed(0, 39);
      twoLocationReg_0_MEM_im_0 <= to_signed(0, 39);
      twoLocationReg_0_MEM_re_1 <= to_signed(0, 39);
      twoLocationReg_0_MEM_im_1 <= to_signed(0, 39);
      twoLocationReg_0_dout_re_reg <= to_signed(0, 39);
      twoLocationReg_0_dout_im_reg <= to_signed(0, 39);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twoLocationReg_0_MEM_re_0 <= twoLocationReg_0_MEM_re_0_next;
        twoLocationReg_0_MEM_im_0 <= twoLocationReg_0_MEM_im_0_next;
        twoLocationReg_0_MEM_re_1 <= twoLocationReg_0_MEM_re_1_next;
        twoLocationReg_0_MEM_im_1 <= twoLocationReg_0_MEM_im_1_next;
        twoLocationReg_0_dout_re_reg <= twoLocationReg_0_dout_re_reg_next;
        twoLocationReg_0_dout_im_reg <= twoLocationReg_0_dout_im_reg_next;
      END IF;
    END IF;
  END PROCESS twoLocationReg_0_process;

  twoLocationReg_0_output : PROCESS (rd_7_Addr, twoLocationReg_0_MEM_im_0, twoLocationReg_0_MEM_im_1,
       twoLocationReg_0_MEM_re_0, twoLocationReg_0_MEM_re_1,
       twoLocationReg_0_dout_im_reg, twoLocationReg_0_dout_re_reg, wrAddr,
       wrData_im_signed, wrData_re_signed, wrEnb)
  BEGIN
    twoLocationReg_0_MEM_re_0_next <= twoLocationReg_0_MEM_re_0;
    twoLocationReg_0_MEM_im_0_next <= twoLocationReg_0_MEM_im_0;
    twoLocationReg_0_MEM_re_1_next <= twoLocationReg_0_MEM_re_1;
    twoLocationReg_0_MEM_im_1_next <= twoLocationReg_0_MEM_im_1;
    IF rd_7_Addr = '1' THEN 
      twoLocationReg_0_dout_re_reg_next <= twoLocationReg_0_MEM_re_1;
      twoLocationReg_0_dout_im_reg_next <= twoLocationReg_0_MEM_im_1;
    ELSE 
      twoLocationReg_0_dout_re_reg_next <= twoLocationReg_0_MEM_re_0;
      twoLocationReg_0_dout_im_reg_next <= twoLocationReg_0_MEM_im_0;
    END IF;
    IF wrEnb = '1' THEN 
      IF wrAddr = '1' THEN 
        twoLocationReg_0_MEM_re_1_next <= wrData_re_signed;
        twoLocationReg_0_MEM_im_1_next <= wrData_im_signed;
      ELSE 
        twoLocationReg_0_MEM_re_0_next <= wrData_re_signed;
        twoLocationReg_0_MEM_im_0_next <= wrData_im_signed;
      END IF;
    END IF;
    x_re <= twoLocationReg_0_dout_re_reg;
    x_im <= twoLocationReg_0_dout_im_reg;
  END PROCESS twoLocationReg_0_output;


  -- Radix22ButterflyG1
  Radix22ButterflyG1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Radix22ButterflyG1_btf1_re_reg <= to_signed(0, 40);
      Radix22ButterflyG1_btf1_im_reg <= to_signed(0, 40);
      Radix22ButterflyG1_btf2_re_reg <= to_signed(0, 40);
      Radix22ButterflyG1_btf2_im_reg <= to_signed(0, 40);
      xf_re <= to_signed(0, 39);
      xf_im <= to_signed(0, 39);
      xf_vld <= '0';
      Radix22ButterflyG1_dinXtwdl_re_dly1 <= to_signed(0, 39);
      Radix22ButterflyG1_dinXtwdl_im_dly1 <= to_signed(0, 39);
      Radix22ButterflyG1_dinXtwdl_re_dly2 <= to_signed(0, 39);
      Radix22ButterflyG1_dinXtwdl_im_dly2 <= to_signed(0, 39);
      Radix22ButterflyG1_dinXtwdl_vld_dly1 <= '0';
      Radix22ButterflyG1_dinXtwdl_vld_dly2 <= '0';
      btf_vld <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Radix22ButterflyG1_btf1_re_reg <= Radix22ButterflyG1_btf1_re_reg_next;
        Radix22ButterflyG1_btf1_im_reg <= Radix22ButterflyG1_btf1_im_reg_next;
        Radix22ButterflyG1_btf2_re_reg <= Radix22ButterflyG1_btf2_re_reg_next;
        Radix22ButterflyG1_btf2_im_reg <= Radix22ButterflyG1_btf2_im_reg_next;
        btf_vld <= Radix22ButterflyG1_dinXtwdl_vld_dly2;
        Radix22ButterflyG1_dinXtwdl_vld_dly2 <= Radix22ButterflyG1_dinXtwdl_vld_dly1;
        Radix22ButterflyG1_dinXtwdl_re_dly2 <= Radix22ButterflyG1_dinXtwdl_re_dly1;
        Radix22ButterflyG1_dinXtwdl_im_dly2 <= Radix22ButterflyG1_dinXtwdl_im_dly1;
        Radix22ButterflyG1_dinXtwdl_re_dly1 <= dinXTwdl_re_signed;
        Radix22ButterflyG1_dinXtwdl_im_dly1 <= dinXTwdl_im_signed;
        xf_re <= x_re;
        xf_im <= x_im;
        xf_vld <= x_vld;
        Radix22ButterflyG1_dinXtwdl_vld_dly1 <= proc_7_enb AND dinXTwdl_7_vld_1;
      END IF;
    END IF;
  END PROCESS Radix22ButterflyG1_process;

  dinxTwdlf_vld <= ( NOT proc_7_enb) AND dinXTwdl_7_vld_1;
  Radix22ButterflyG1_add_cast <= resize(x_re, 40);
  Radix22ButterflyG1_add_cast_1 <= resize(Radix22ButterflyG1_dinXtwdl_re_dly2, 40);
  Radix22ButterflyG1_btf1_re_reg_next <= Radix22ButterflyG1_add_cast + Radix22ButterflyG1_add_cast_1;
  Radix22ButterflyG1_sub_cast <= resize(x_re, 40);
  Radix22ButterflyG1_sub_cast_1 <= resize(Radix22ButterflyG1_dinXtwdl_re_dly2, 40);
  Radix22ButterflyG1_btf2_re_reg_next <= Radix22ButterflyG1_sub_cast - Radix22ButterflyG1_sub_cast_1;
  Radix22ButterflyG1_add_cast_2 <= resize(x_im, 40);
  Radix22ButterflyG1_add_cast_3 <= resize(Radix22ButterflyG1_dinXtwdl_im_dly2, 40);
  Radix22ButterflyG1_btf1_im_reg_next <= Radix22ButterflyG1_add_cast_2 + Radix22ButterflyG1_add_cast_3;
  Radix22ButterflyG1_sub_cast_2 <= resize(x_im, 40);
  Radix22ButterflyG1_sub_cast_3 <= resize(Radix22ButterflyG1_dinXtwdl_im_dly2, 40);
  Radix22ButterflyG1_btf2_im_reg_next <= Radix22ButterflyG1_sub_cast_2 - Radix22ButterflyG1_sub_cast_3;
  dinXTwdlf_re <= dinXTwdl_re_signed;
  dinXTwdlf_im <= dinXTwdl_im_signed;
  btf1_re <= Radix22ButterflyG1_btf1_re_reg(38 DOWNTO 0);
  btf1_im <= Radix22ButterflyG1_btf1_im_reg(38 DOWNTO 0);
  btf2_re <= Radix22ButterflyG1_btf2_re_reg(38 DOWNTO 0);
  btf2_im <= Radix22ButterflyG1_btf2_im_reg(38 DOWNTO 0);

  dout_7_re <= dout_7_re_tmp;

  dout_7_im <= dout_7_im_tmp;

  dinXTwdl_7_vld <= dinXTwdl_7_vld_1;

END rtl;

