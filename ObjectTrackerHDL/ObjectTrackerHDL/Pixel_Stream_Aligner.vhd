-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\Pixel_Stream_Aligner.vhd
-- Created: 2024-12-03 00:37:46
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Pixel_Stream_Aligner
-- Source Path: ObjectTrackerHDL/ObjectTrackerHDL/Track/2-DCorrelation/StreamAlignment/Pixel Stream Aligner
-- Hierarchy Level: 4
-- Model version: 3.7
-- 
-- Pixel Stream Aligner
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ObjectTrackerHDL_pkg.ALL;

ENTITY Pixel_Stream_Aligner IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        in0                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        in1_hStart                        :   IN    std_logic;
        in1_hEnd                          :   IN    std_logic;
        in1_vStart                        :   IN    std_logic;
        in1_vEnd                          :   IN    std_logic;
        in1_valid                         :   IN    std_logic;
        in2                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        in3_hStart                        :   IN    std_logic;
        in3_hEnd                          :   IN    std_logic;
        in3_vStart                        :   IN    std_logic;
        in3_vEnd                          :   IN    std_logic;
        in3_valid                         :   IN    std_logic;
        out0                              :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        out1                              :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        out2_valid                        :   OUT   std_logic
        );
END Pixel_Stream_Aligner;


ARCHITECTURE rtl OF Pixel_Stream_Aligner IS

  -- Component Declarations
  COMPONENT SimpleDualPortRAM_generic_block1
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;  -- ufix1
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout                            :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SimpleDualPortRAM_generic_block1
    USE ENTITY work.SimpleDualPortRAM_generic_block1(rtl);

  -- Signals
  SIGNAL refValidInReg                    : std_logic;  -- ufix1
  SIGNAL refvaldlyline_reg                : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL pixelValidPreReg                 : std_logic;  -- ufix1
  SIGNAL rvalOReg_reg                     : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL pixelValidOutReg                 : std_logic;  -- ufix1
  SIGNAL refVEndInReg                     : std_logic;  -- ufix1
  SIGNAL refvedlyline_reg                 : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL pixelVEndPreReg                  : std_logic;  -- ufix1
  SIGNAL refvEndInv                       : std_logic;  -- ufix1
  SIGNAL refVStartInReg                   : std_logic;  -- ufix1
  SIGNAL refvsdlyline_reg                 : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL pixelVStartPreReg                : std_logic;  -- ufix1
  SIGNAL refinFrame2Term                  : std_logic;  -- ufix1
  SIGNAL refValidInv                      : std_logic;  -- ufix1
  SIGNAL refinFrame                       : std_logic;  -- ufix1
  SIGNAL refinFrame3Term                  : std_logic;  -- ufix1
  SIGNAL refinFrameNext                   : std_logic;  -- ufix1
  SIGNAL refinFrame1Term                  : std_logic;  -- ufix1
  SIGNAL refinFrameInv                    : std_logic;  -- ufix1
  SIGNAL refnewFrame                      : std_logic;  -- ufix1
  SIGNAL pixelVEndInReg                   : std_logic;  -- ufix1
  SIGNAL pixelvEndInv                     : std_logic;  -- ufix1
  SIGNAL pixelValidInReg                  : std_logic;  -- ufix1
  SIGNAL pixelVStartInReg                 : std_logic;  -- ufix1
  SIGNAL pixelinFrame2Term                : std_logic;  -- ufix1
  SIGNAL pixelValidInv                    : std_logic;  -- ufix1
  SIGNAL pixelinFrame                     : std_logic;  -- ufix1
  SIGNAL pixelinFrame3Term                : std_logic;  -- ufix1
  SIGNAL pixelinFrameNext                 : std_logic;  -- ufix1
  SIGNAL pixelinFrame1Term                : std_logic;  -- ufix1
  SIGNAL pixelinFrameInv                  : std_logic;  -- ufix1
  SIGNAL pixelnewFrame                    : std_logic;  -- ufix1
  SIGNAL trueconst                        : std_logic;  -- ufix1
  SIGNAL frameStartValid                  : std_logic;  -- ufix1
  SIGNAL refFrameValid                    : std_logic;  -- ufix1
  SIGNAL pixelOutValid                    : std_logic;  -- ufix1
  SIGNAL in0_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL pixelInReg                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL RAMwtone                         : std_logic;  -- ufix1
  SIGNAL pixelHEndInReg                   : std_logic;  -- ufix1
  SIGNAL pixelhEndInv                     : std_logic;  -- ufix1
  SIGNAL pixelHStartInReg                 : std_logic;  -- ufix1
  SIGNAL pixelinLine2Term                 : std_logic;  -- ufix1
  SIGNAL pixelinLine                      : std_logic;  -- ufix1
  SIGNAL pixelinLineInv                   : std_logic;  -- ufix1
  SIGNAL pixelinLine6Term                 : std_logic;  -- ufix1
  SIGNAL pixelinLine5Term                 : std_logic;  -- ufix1
  SIGNAL pixelinLine4Term                 : std_logic;  -- ufix1
  SIGNAL pixelinLine3Term                 : std_logic;  -- ufix1
  SIGNAL pixelinLine1Term                 : std_logic;  -- ufix1
  SIGNAL pixelinLineNext                  : std_logic;  -- ufix1
  SIGNAL pixelnewLine                     : std_logic;  -- ufix1
  SIGNAL RAMwttwo                         : std_logic;  -- ufix1
  SIGNAL RAMwren                          : std_logic;  -- ufix1
  SIGNAL RAMwraddr                        : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL ramrdframe                       : std_logic;  -- ufix1
  SIGNAL refHEndInReg                     : std_logic;  -- ufix1
  SIGNAL refhedlyline_reg                 : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL pixelHEndPreReg                  : std_logic;  -- ufix1
  SIGNAL refhEndInv                       : std_logic;  -- ufix1
  SIGNAL refHStartInReg                   : std_logic;  -- ufix1
  SIGNAL refhsdlyline_reg                 : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL pixelHStartPreReg                : std_logic;  -- ufix1
  SIGNAL refinLine2Term                   : std_logic;  -- ufix1
  SIGNAL refinLine                        : std_logic;  -- ufix1
  SIGNAL refinLineInv                     : std_logic;  -- ufix1
  SIGNAL refinLine6Term                   : std_logic;  -- ufix1
  SIGNAL refinLine5Term                   : std_logic;  -- ufix1
  SIGNAL refinLine4Term                   : std_logic;  -- ufix1
  SIGNAL refinLine3Term                   : std_logic;  -- ufix1
  SIGNAL refinLineNext                    : std_logic;  -- ufix1
  SIGNAL refinLine1Term                   : std_logic;  -- ufix1
  SIGNAL refnewLine                       : std_logic;  -- ufix1
  SIGNAL refNewFrameInv                   : std_logic;  -- ufix1
  SIGNAL refNewLineNotFrame               : std_logic;  -- ufix1
  SIGNAL linerden                         : std_logic;  -- ufix1
  SIGNAL linerdaddr                       : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL linerd0addrdecode                : std_logic;  -- ufix1
  SIGNAL pixelNewFrameInv                 : std_logic;  -- ufix1
  SIGNAL pixelNewLineNotFrame             : std_logic;  -- ufix1
  SIGNAL linewr0addr                      : std_logic;  -- ufix1
  SIGNAL linewr1addr                      : std_logic;  -- ufix1
  SIGNAL linewr2addr                      : std_logic;  -- ufix1
  SIGNAL linewr3addr                      : std_logic;  -- ufix1
  SIGNAL linewr4addr                      : std_logic;  -- ufix1
  SIGNAL linewr5addr                      : std_logic;  -- ufix1
  SIGNAL linewr6addr                      : std_logic;  -- ufix1
  SIGNAL linewr7addr                      : std_logic;  -- ufix1
  SIGNAL linewr8addr                      : std_logic;  -- ufix1
  SIGNAL linewr9addr                      : std_logic;  -- ufix1
  SIGNAL linewr10addr                     : std_logic;  -- ufix1
  SIGNAL linewr11addr                     : std_logic;  -- ufix1
  SIGNAL linewr12addr                     : std_logic;  -- ufix1
  SIGNAL linewr13addr                     : std_logic;  -- ufix1
  SIGNAL linewr14addr                     : std_logic;  -- ufix1
  SIGNAL linewr15addr                     : std_logic;  -- ufix1
  SIGNAL linewr16addr                     : std_logic;  -- ufix1
  SIGNAL linewr17addr                     : std_logic;  -- ufix1
  SIGNAL linewr18addr                     : std_logic;  -- ufix1
  SIGNAL linewr19addr                     : std_logic;  -- ufix1
  SIGNAL linewr20addr                     : std_logic;  -- ufix1
  SIGNAL linewr21addr                     : std_logic;  -- ufix1
  SIGNAL linewr22addr                     : std_logic;  -- ufix1
  SIGNAL linewr23addr                     : std_logic;  -- ufix1
  SIGNAL linewr24addr                     : std_logic;  -- ufix1
  SIGNAL linewr25addr                     : std_logic;  -- ufix1
  SIGNAL linewr26addr                     : std_logic;  -- ufix1
  SIGNAL linewr27addr                     : std_logic;  -- ufix1
  SIGNAL linewr28addr                     : std_logic;  -- ufix1
  SIGNAL linewr29addr                     : std_logic;  -- ufix1
  SIGNAL linewr30addr                     : std_logic;  -- ufix1
  SIGNAL linewr31addr                     : std_logic;  -- ufix1
  SIGNAL linewr32addr                     : std_logic;  -- ufix1
  SIGNAL linewr33addr                     : std_logic;  -- ufix1
  SIGNAL linewr34addr                     : std_logic;  -- ufix1
  SIGNAL linewr35addr                     : std_logic;  -- ufix1
  SIGNAL linewr36addr                     : std_logic;  -- ufix1
  SIGNAL linewr37addr                     : std_logic;  -- ufix1
  SIGNAL linewr38addr                     : std_logic;  -- ufix1
  SIGNAL linewr39addr                     : std_logic;  -- ufix1
  SIGNAL linewr40addr                     : std_logic;  -- ufix1
  SIGNAL linewr41addr                     : std_logic;  -- ufix1
  SIGNAL linewr42addr                     : std_logic;  -- ufix1
  SIGNAL linewr43addr                     : std_logic;  -- ufix1
  SIGNAL linewr44addr                     : std_logic;  -- ufix1
  SIGNAL linewr45addr                     : std_logic;  -- ufix1
  SIGNAL linewr46addr                     : std_logic;  -- ufix1
  SIGNAL linewr47addr                     : std_logic;  -- ufix1
  SIGNAL linewr48addr                     : std_logic;  -- ufix1
  SIGNAL linewr49addr                     : std_logic;  -- ufix1
  SIGNAL linewr50addr                     : std_logic;  -- ufix1
  SIGNAL linewr51addr                     : std_logic;  -- ufix1
  SIGNAL linewr52addr                     : std_logic;  -- ufix1
  SIGNAL linewr53addr                     : std_logic;  -- ufix1
  SIGNAL linewr54addr                     : std_logic;  -- ufix1
  SIGNAL linewr55addr                     : std_logic;  -- ufix1
  SIGNAL linewr56addr                     : std_logic;  -- ufix1
  SIGNAL linewr57addr                     : std_logic;  -- ufix1
  SIGNAL linewr58addr                     : std_logic;  -- ufix1
  SIGNAL linewr59addr                     : std_logic;  -- ufix1
  SIGNAL linewr60addr                     : std_logic;  -- ufix1
  SIGNAL linewr61addr                     : std_logic;  -- ufix1
  SIGNAL linewr62addr                     : std_logic;  -- ufix1
  SIGNAL linewr63addr                     : std_logic;  -- ufix1
  SIGNAL linewr64addr                     : std_logic;  -- ufix1
  SIGNAL linewr65addr                     : std_logic;  -- ufix1
  SIGNAL linewr66addr                     : std_logic;  -- ufix1
  SIGNAL linewr67addr                     : std_logic;  -- ufix1
  SIGNAL linewr68addr                     : std_logic;  -- ufix1
  SIGNAL linewr69addr                     : std_logic;  -- ufix1
  SIGNAL linewr70addr                     : std_logic;  -- ufix1
  SIGNAL linewr71addr                     : std_logic;  -- ufix1
  SIGNAL linewr72addr                     : std_logic;  -- ufix1
  SIGNAL linewr73addr                     : std_logic;  -- ufix1
  SIGNAL linewr74addr                     : std_logic;  -- ufix1
  SIGNAL linewr75addr                     : std_logic;  -- ufix1
  SIGNAL linewr76addr                     : std_logic;  -- ufix1
  SIGNAL linewr77addr                     : std_logic;  -- ufix1
  SIGNAL linewr78addr                     : std_logic;  -- ufix1
  SIGNAL linewr79addr                     : std_logic;  -- ufix1
  SIGNAL linewr80addr                     : std_logic;  -- ufix1
  SIGNAL linewr81addr                     : std_logic;  -- ufix1
  SIGNAL linewr82addr                     : std_logic;  -- ufix1
  SIGNAL linewr83addr                     : std_logic;  -- ufix1
  SIGNAL linewr84addr                     : std_logic;  -- ufix1
  SIGNAL linewr85addr                     : std_logic;  -- ufix1
  SIGNAL linewr86addr                     : std_logic;  -- ufix1
  SIGNAL linewr87addr                     : std_logic;  -- ufix1
  SIGNAL linewr88addr                     : std_logic;  -- ufix1
  SIGNAL linewr89addr                     : std_logic;  -- ufix1
  SIGNAL linewr90addr                     : std_logic;  -- ufix1
  SIGNAL linewr91addr                     : std_logic;  -- ufix1
  SIGNAL linewr92addr                     : std_logic;  -- ufix1
  SIGNAL linewr93addr                     : std_logic;  -- ufix1
  SIGNAL linewr94addr                     : std_logic;  -- ufix1
  SIGNAL linewr95addr                     : std_logic;  -- ufix1
  SIGNAL linewr96addr                     : std_logic;  -- ufix1
  SIGNAL linewr97addr                     : std_logic;  -- ufix1
  SIGNAL linewr98addr                     : std_logic;  -- ufix1
  SIGNAL linewr99addr                     : std_logic;  -- ufix1
  SIGNAL linewr100addr                    : std_logic;  -- ufix1
  SIGNAL linewr101addr                    : std_logic;  -- ufix1
  SIGNAL linewr102addr                    : std_logic;  -- ufix1
  SIGNAL linewr103addr                    : std_logic;  -- ufix1
  SIGNAL linewr104addr                    : std_logic;  -- ufix1
  SIGNAL linewr105addr                    : std_logic;  -- ufix1
  SIGNAL linewr106addr                    : std_logic;  -- ufix1
  SIGNAL linewr107addr                    : std_logic;  -- ufix1
  SIGNAL linewr108addr                    : std_logic;  -- ufix1
  SIGNAL linewr109addr                    : std_logic;  -- ufix1
  SIGNAL linewr110addr                    : std_logic;  -- ufix1
  SIGNAL linewr111addr                    : std_logic;  -- ufix1
  SIGNAL linewr112addr                    : std_logic;  -- ufix1
  SIGNAL linewr113addr                    : std_logic;  -- ufix1
  SIGNAL linewr114addr                    : std_logic;  -- ufix1
  SIGNAL linewr115addr                    : std_logic;  -- ufix1
  SIGNAL linewr116addr                    : std_logic;  -- ufix1
  SIGNAL linewr117addr                    : std_logic;  -- ufix1
  SIGNAL linewr118addr                    : std_logic;  -- ufix1
  SIGNAL linewr119addr                    : std_logic;  -- ufix1
  SIGNAL linewr120addr                    : std_logic;  -- ufix1
  SIGNAL linewr121addr                    : std_logic;  -- ufix1
  SIGNAL linewr122addr                    : std_logic;  -- ufix1
  SIGNAL linewr123addr                    : std_logic;  -- ufix1
  SIGNAL linewr124addr                    : std_logic;  -- ufix1
  SIGNAL linewr125addr                    : std_logic;  -- ufix1
  SIGNAL linewr126addr                    : std_logic;  -- ufix1
  SIGNAL linewr127addr                    : std_logic;  -- ufix1
  SIGNAL wr0gate                          : std_logic;  -- ufix1
  SIGNAL line0StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd1addrdecode                : std_logic;  -- ufix1
  SIGNAL wr1gate                          : std_logic;  -- ufix1
  SIGNAL line1StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd2addrdecode                : std_logic;  -- ufix1
  SIGNAL wr2gate                          : std_logic;  -- ufix1
  SIGNAL line2StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd3addrdecode                : std_logic;  -- ufix1
  SIGNAL wr3gate                          : std_logic;  -- ufix1
  SIGNAL line3StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd4addrdecode                : std_logic;  -- ufix1
  SIGNAL wr4gate                          : std_logic;  -- ufix1
  SIGNAL line4StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd5addrdecode                : std_logic;  -- ufix1
  SIGNAL wr5gate                          : std_logic;  -- ufix1
  SIGNAL line5StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd6addrdecode                : std_logic;  -- ufix1
  SIGNAL wr6gate                          : std_logic;  -- ufix1
  SIGNAL line6StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd7addrdecode                : std_logic;  -- ufix1
  SIGNAL wr7gate                          : std_logic;  -- ufix1
  SIGNAL line7StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd8addrdecode                : std_logic;  -- ufix1
  SIGNAL wr8gate                          : std_logic;  -- ufix1
  SIGNAL line8StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd9addrdecode                : std_logic;  -- ufix1
  SIGNAL wr9gate                          : std_logic;  -- ufix1
  SIGNAL line9StartsValidNext             : std_logic;  -- ufix1
  SIGNAL linerd10addrdecode               : std_logic;  -- ufix1
  SIGNAL wr10gate                         : std_logic;  -- ufix1
  SIGNAL line10StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd11addrdecode               : std_logic;  -- ufix1
  SIGNAL wr11gate                         : std_logic;  -- ufix1
  SIGNAL line11StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd12addrdecode               : std_logic;  -- ufix1
  SIGNAL wr12gate                         : std_logic;  -- ufix1
  SIGNAL line12StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd13addrdecode               : std_logic;  -- ufix1
  SIGNAL wr13gate                         : std_logic;  -- ufix1
  SIGNAL line13StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd14addrdecode               : std_logic;  -- ufix1
  SIGNAL wr14gate                         : std_logic;  -- ufix1
  SIGNAL line14StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd15addrdecode               : std_logic;  -- ufix1
  SIGNAL wr15gate                         : std_logic;  -- ufix1
  SIGNAL line15StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd16addrdecode               : std_logic;  -- ufix1
  SIGNAL wr16gate                         : std_logic;  -- ufix1
  SIGNAL line16StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd17addrdecode               : std_logic;  -- ufix1
  SIGNAL wr17gate                         : std_logic;  -- ufix1
  SIGNAL line17StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd18addrdecode               : std_logic;  -- ufix1
  SIGNAL wr18gate                         : std_logic;  -- ufix1
  SIGNAL line18StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd19addrdecode               : std_logic;  -- ufix1
  SIGNAL wr19gate                         : std_logic;  -- ufix1
  SIGNAL line19StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd20addrdecode               : std_logic;  -- ufix1
  SIGNAL wr20gate                         : std_logic;  -- ufix1
  SIGNAL line20StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd21addrdecode               : std_logic;  -- ufix1
  SIGNAL wr21gate                         : std_logic;  -- ufix1
  SIGNAL line21StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd22addrdecode               : std_logic;  -- ufix1
  SIGNAL wr22gate                         : std_logic;  -- ufix1
  SIGNAL line22StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd23addrdecode               : std_logic;  -- ufix1
  SIGNAL wr23gate                         : std_logic;  -- ufix1
  SIGNAL line23StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd24addrdecode               : std_logic;  -- ufix1
  SIGNAL wr24gate                         : std_logic;  -- ufix1
  SIGNAL line24StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd25addrdecode               : std_logic;  -- ufix1
  SIGNAL wr25gate                         : std_logic;  -- ufix1
  SIGNAL line25StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd26addrdecode               : std_logic;  -- ufix1
  SIGNAL wr26gate                         : std_logic;  -- ufix1
  SIGNAL line26StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd27addrdecode               : std_logic;  -- ufix1
  SIGNAL wr27gate                         : std_logic;  -- ufix1
  SIGNAL line27StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd28addrdecode               : std_logic;  -- ufix1
  SIGNAL wr28gate                         : std_logic;  -- ufix1
  SIGNAL line28StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd29addrdecode               : std_logic;  -- ufix1
  SIGNAL wr29gate                         : std_logic;  -- ufix1
  SIGNAL line29StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd30addrdecode               : std_logic;  -- ufix1
  SIGNAL wr30gate                         : std_logic;  -- ufix1
  SIGNAL line30StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd31addrdecode               : std_logic;  -- ufix1
  SIGNAL wr31gate                         : std_logic;  -- ufix1
  SIGNAL line31StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd32addrdecode               : std_logic;  -- ufix1
  SIGNAL wr32gate                         : std_logic;  -- ufix1
  SIGNAL line32StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd33addrdecode               : std_logic;  -- ufix1
  SIGNAL wr33gate                         : std_logic;  -- ufix1
  SIGNAL line33StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd34addrdecode               : std_logic;  -- ufix1
  SIGNAL wr34gate                         : std_logic;  -- ufix1
  SIGNAL line34StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd35addrdecode               : std_logic;  -- ufix1
  SIGNAL wr35gate                         : std_logic;  -- ufix1
  SIGNAL line35StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd36addrdecode               : std_logic;  -- ufix1
  SIGNAL wr36gate                         : std_logic;  -- ufix1
  SIGNAL line36StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd37addrdecode               : std_logic;  -- ufix1
  SIGNAL wr37gate                         : std_logic;  -- ufix1
  SIGNAL line37StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd38addrdecode               : std_logic;  -- ufix1
  SIGNAL wr38gate                         : std_logic;  -- ufix1
  SIGNAL line38StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd39addrdecode               : std_logic;  -- ufix1
  SIGNAL wr39gate                         : std_logic;  -- ufix1
  SIGNAL line39StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd40addrdecode               : std_logic;  -- ufix1
  SIGNAL wr40gate                         : std_logic;  -- ufix1
  SIGNAL line40StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd41addrdecode               : std_logic;  -- ufix1
  SIGNAL wr41gate                         : std_logic;  -- ufix1
  SIGNAL line41StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd42addrdecode               : std_logic;  -- ufix1
  SIGNAL wr42gate                         : std_logic;  -- ufix1
  SIGNAL line42StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd43addrdecode               : std_logic;  -- ufix1
  SIGNAL wr43gate                         : std_logic;  -- ufix1
  SIGNAL line43StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd44addrdecode               : std_logic;  -- ufix1
  SIGNAL wr44gate                         : std_logic;  -- ufix1
  SIGNAL line44StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd45addrdecode               : std_logic;  -- ufix1
  SIGNAL wr45gate                         : std_logic;  -- ufix1
  SIGNAL line45StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd46addrdecode               : std_logic;  -- ufix1
  SIGNAL wr46gate                         : std_logic;  -- ufix1
  SIGNAL line46StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd47addrdecode               : std_logic;  -- ufix1
  SIGNAL wr47gate                         : std_logic;  -- ufix1
  SIGNAL line47StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd48addrdecode               : std_logic;  -- ufix1
  SIGNAL wr48gate                         : std_logic;  -- ufix1
  SIGNAL line48StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd49addrdecode               : std_logic;  -- ufix1
  SIGNAL wr49gate                         : std_logic;  -- ufix1
  SIGNAL line49StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd50addrdecode               : std_logic;  -- ufix1
  SIGNAL wr50gate                         : std_logic;  -- ufix1
  SIGNAL line50StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd51addrdecode               : std_logic;  -- ufix1
  SIGNAL wr51gate                         : std_logic;  -- ufix1
  SIGNAL line51StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd52addrdecode               : std_logic;  -- ufix1
  SIGNAL wr52gate                         : std_logic;  -- ufix1
  SIGNAL line52StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd53addrdecode               : std_logic;  -- ufix1
  SIGNAL wr53gate                         : std_logic;  -- ufix1
  SIGNAL line53StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd54addrdecode               : std_logic;  -- ufix1
  SIGNAL wr54gate                         : std_logic;  -- ufix1
  SIGNAL line54StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd55addrdecode               : std_logic;  -- ufix1
  SIGNAL wr55gate                         : std_logic;  -- ufix1
  SIGNAL line55StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd56addrdecode               : std_logic;  -- ufix1
  SIGNAL wr56gate                         : std_logic;  -- ufix1
  SIGNAL line56StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd57addrdecode               : std_logic;  -- ufix1
  SIGNAL wr57gate                         : std_logic;  -- ufix1
  SIGNAL line57StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd58addrdecode               : std_logic;  -- ufix1
  SIGNAL wr58gate                         : std_logic;  -- ufix1
  SIGNAL line58StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd59addrdecode               : std_logic;  -- ufix1
  SIGNAL wr59gate                         : std_logic;  -- ufix1
  SIGNAL line59StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd60addrdecode               : std_logic;  -- ufix1
  SIGNAL wr60gate                         : std_logic;  -- ufix1
  SIGNAL line60StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd61addrdecode               : std_logic;  -- ufix1
  SIGNAL wr61gate                         : std_logic;  -- ufix1
  SIGNAL line61StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd62addrdecode               : std_logic;  -- ufix1
  SIGNAL wr62gate                         : std_logic;  -- ufix1
  SIGNAL line62StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd63addrdecode               : std_logic;  -- ufix1
  SIGNAL wr63gate                         : std_logic;  -- ufix1
  SIGNAL line63StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd64addrdecode               : std_logic;  -- ufix1
  SIGNAL wr64gate                         : std_logic;  -- ufix1
  SIGNAL line64StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd65addrdecode               : std_logic;  -- ufix1
  SIGNAL wr65gate                         : std_logic;  -- ufix1
  SIGNAL line65StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd66addrdecode               : std_logic;  -- ufix1
  SIGNAL wr66gate                         : std_logic;  -- ufix1
  SIGNAL line66StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd67addrdecode               : std_logic;  -- ufix1
  SIGNAL wr67gate                         : std_logic;  -- ufix1
  SIGNAL line67StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd68addrdecode               : std_logic;  -- ufix1
  SIGNAL wr68gate                         : std_logic;  -- ufix1
  SIGNAL line68StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd69addrdecode               : std_logic;  -- ufix1
  SIGNAL wr69gate                         : std_logic;  -- ufix1
  SIGNAL line69StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd70addrdecode               : std_logic;  -- ufix1
  SIGNAL wr70gate                         : std_logic;  -- ufix1
  SIGNAL line70StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd71addrdecode               : std_logic;  -- ufix1
  SIGNAL wr71gate                         : std_logic;  -- ufix1
  SIGNAL line71StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd72addrdecode               : std_logic;  -- ufix1
  SIGNAL wr72gate                         : std_logic;  -- ufix1
  SIGNAL line72StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd73addrdecode               : std_logic;  -- ufix1
  SIGNAL wr73gate                         : std_logic;  -- ufix1
  SIGNAL line73StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd74addrdecode               : std_logic;  -- ufix1
  SIGNAL wr74gate                         : std_logic;  -- ufix1
  SIGNAL line74StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd75addrdecode               : std_logic;  -- ufix1
  SIGNAL wr75gate                         : std_logic;  -- ufix1
  SIGNAL line75StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd76addrdecode               : std_logic;  -- ufix1
  SIGNAL wr76gate                         : std_logic;  -- ufix1
  SIGNAL line76StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd77addrdecode               : std_logic;  -- ufix1
  SIGNAL wr77gate                         : std_logic;  -- ufix1
  SIGNAL line77StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd78addrdecode               : std_logic;  -- ufix1
  SIGNAL wr78gate                         : std_logic;  -- ufix1
  SIGNAL line78StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd79addrdecode               : std_logic;  -- ufix1
  SIGNAL wr79gate                         : std_logic;  -- ufix1
  SIGNAL line79StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd80addrdecode               : std_logic;  -- ufix1
  SIGNAL wr80gate                         : std_logic;  -- ufix1
  SIGNAL line80StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd81addrdecode               : std_logic;  -- ufix1
  SIGNAL wr81gate                         : std_logic;  -- ufix1
  SIGNAL line81StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd82addrdecode               : std_logic;  -- ufix1
  SIGNAL wr82gate                         : std_logic;  -- ufix1
  SIGNAL line82StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd83addrdecode               : std_logic;  -- ufix1
  SIGNAL wr83gate                         : std_logic;  -- ufix1
  SIGNAL line83StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd84addrdecode               : std_logic;  -- ufix1
  SIGNAL wr84gate                         : std_logic;  -- ufix1
  SIGNAL line84StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd85addrdecode               : std_logic;  -- ufix1
  SIGNAL wr85gate                         : std_logic;  -- ufix1
  SIGNAL line85StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd86addrdecode               : std_logic;  -- ufix1
  SIGNAL wr86gate                         : std_logic;  -- ufix1
  SIGNAL line86StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd87addrdecode               : std_logic;  -- ufix1
  SIGNAL wr87gate                         : std_logic;  -- ufix1
  SIGNAL line87StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd88addrdecode               : std_logic;  -- ufix1
  SIGNAL wr88gate                         : std_logic;  -- ufix1
  SIGNAL line88StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd89addrdecode               : std_logic;  -- ufix1
  SIGNAL wr89gate                         : std_logic;  -- ufix1
  SIGNAL line89StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd90addrdecode               : std_logic;  -- ufix1
  SIGNAL wr90gate                         : std_logic;  -- ufix1
  SIGNAL line90StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd91addrdecode               : std_logic;  -- ufix1
  SIGNAL wr91gate                         : std_logic;  -- ufix1
  SIGNAL line91StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd92addrdecode               : std_logic;  -- ufix1
  SIGNAL wr92gate                         : std_logic;  -- ufix1
  SIGNAL line92StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd93addrdecode               : std_logic;  -- ufix1
  SIGNAL wr93gate                         : std_logic;  -- ufix1
  SIGNAL line93StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd94addrdecode               : std_logic;  -- ufix1
  SIGNAL wr94gate                         : std_logic;  -- ufix1
  SIGNAL line94StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd95addrdecode               : std_logic;  -- ufix1
  SIGNAL wr95gate                         : std_logic;  -- ufix1
  SIGNAL line95StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd96addrdecode               : std_logic;  -- ufix1
  SIGNAL wr96gate                         : std_logic;  -- ufix1
  SIGNAL line96StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd97addrdecode               : std_logic;  -- ufix1
  SIGNAL wr97gate                         : std_logic;  -- ufix1
  SIGNAL line97StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd98addrdecode               : std_logic;  -- ufix1
  SIGNAL wr98gate                         : std_logic;  -- ufix1
  SIGNAL line98StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd99addrdecode               : std_logic;  -- ufix1
  SIGNAL wr99gate                         : std_logic;  -- ufix1
  SIGNAL line99StartsValidNext            : std_logic;  -- ufix1
  SIGNAL linerd100addrdecode              : std_logic;  -- ufix1
  SIGNAL wr100gate                        : std_logic;  -- ufix1
  SIGNAL line100StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd101addrdecode              : std_logic;  -- ufix1
  SIGNAL wr101gate                        : std_logic;  -- ufix1
  SIGNAL line101StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd102addrdecode              : std_logic;  -- ufix1
  SIGNAL wr102gate                        : std_logic;  -- ufix1
  SIGNAL line102StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd103addrdecode              : std_logic;  -- ufix1
  SIGNAL wr103gate                        : std_logic;  -- ufix1
  SIGNAL line103StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd104addrdecode              : std_logic;  -- ufix1
  SIGNAL wr104gate                        : std_logic;  -- ufix1
  SIGNAL line104StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd105addrdecode              : std_logic;  -- ufix1
  SIGNAL wr105gate                        : std_logic;  -- ufix1
  SIGNAL line105StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd106addrdecode              : std_logic;  -- ufix1
  SIGNAL wr106gate                        : std_logic;  -- ufix1
  SIGNAL line106StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd107addrdecode              : std_logic;  -- ufix1
  SIGNAL wr107gate                        : std_logic;  -- ufix1
  SIGNAL line107StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd108addrdecode              : std_logic;  -- ufix1
  SIGNAL wr108gate                        : std_logic;  -- ufix1
  SIGNAL line108StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd109addrdecode              : std_logic;  -- ufix1
  SIGNAL wr109gate                        : std_logic;  -- ufix1
  SIGNAL line109StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd110addrdecode              : std_logic;  -- ufix1
  SIGNAL wr110gate                        : std_logic;  -- ufix1
  SIGNAL line110StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd111addrdecode              : std_logic;  -- ufix1
  SIGNAL wr111gate                        : std_logic;  -- ufix1
  SIGNAL line111StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd112addrdecode              : std_logic;  -- ufix1
  SIGNAL wr112gate                        : std_logic;  -- ufix1
  SIGNAL line112StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd113addrdecode              : std_logic;  -- ufix1
  SIGNAL wr113gate                        : std_logic;  -- ufix1
  SIGNAL line113StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd114addrdecode              : std_logic;  -- ufix1
  SIGNAL wr114gate                        : std_logic;  -- ufix1
  SIGNAL line114StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd115addrdecode              : std_logic;  -- ufix1
  SIGNAL wr115gate                        : std_logic;  -- ufix1
  SIGNAL line115StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd116addrdecode              : std_logic;  -- ufix1
  SIGNAL wr116gate                        : std_logic;  -- ufix1
  SIGNAL line116StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd117addrdecode              : std_logic;  -- ufix1
  SIGNAL wr117gate                        : std_logic;  -- ufix1
  SIGNAL line117StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd118addrdecode              : std_logic;  -- ufix1
  SIGNAL wr118gate                        : std_logic;  -- ufix1
  SIGNAL line118StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd119addrdecode              : std_logic;  -- ufix1
  SIGNAL wr119gate                        : std_logic;  -- ufix1
  SIGNAL line119StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd120addrdecode              : std_logic;  -- ufix1
  SIGNAL wr120gate                        : std_logic;  -- ufix1
  SIGNAL line120StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd121addrdecode              : std_logic;  -- ufix1
  SIGNAL wr121gate                        : std_logic;  -- ufix1
  SIGNAL line121StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd122addrdecode              : std_logic;  -- ufix1
  SIGNAL wr122gate                        : std_logic;  -- ufix1
  SIGNAL line122StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd123addrdecode              : std_logic;  -- ufix1
  SIGNAL wr123gate                        : std_logic;  -- ufix1
  SIGNAL line123StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd124addrdecode              : std_logic;  -- ufix1
  SIGNAL wr124gate                        : std_logic;  -- ufix1
  SIGNAL line124StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd125addrdecode              : std_logic;  -- ufix1
  SIGNAL wr125gate                        : std_logic;  -- ufix1
  SIGNAL line125StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd126addrdecode              : std_logic;  -- ufix1
  SIGNAL wr126gate                        : std_logic;  -- ufix1
  SIGNAL line126StartsValidNext           : std_logic;  -- ufix1
  SIGNAL linerd127addrdecode              : std_logic;  -- ufix1
  SIGNAL wr127gate                        : std_logic;  -- ufix1
  SIGNAL line127StartsValidNext           : std_logic;  -- ufix1
  SIGNAL RAMrdload                        : std_logic;  -- ufix1
  SIGNAL rd127gate                        : std_logic;  -- ufix1
  SIGNAL line127StartsEn                  : std_logic;  -- ufix1
  SIGNAL line127StartsValid               : std_logic;  -- ufix1
  SIGNAL rd126gate                        : std_logic;  -- ufix1
  SIGNAL line126StartsEn                  : std_logic;  -- ufix1
  SIGNAL line126StartsValid               : std_logic;  -- ufix1
  SIGNAL rd125gate                        : std_logic;  -- ufix1
  SIGNAL line125StartsEn                  : std_logic;  -- ufix1
  SIGNAL line125StartsValid               : std_logic;  -- ufix1
  SIGNAL rd124gate                        : std_logic;  -- ufix1
  SIGNAL line124StartsEn                  : std_logic;  -- ufix1
  SIGNAL line124StartsValid               : std_logic;  -- ufix1
  SIGNAL rd123gate                        : std_logic;  -- ufix1
  SIGNAL line123StartsEn                  : std_logic;  -- ufix1
  SIGNAL line123StartsValid               : std_logic;  -- ufix1
  SIGNAL rd122gate                        : std_logic;  -- ufix1
  SIGNAL line122StartsEn                  : std_logic;  -- ufix1
  SIGNAL line122StartsValid               : std_logic;  -- ufix1
  SIGNAL rd121gate                        : std_logic;  -- ufix1
  SIGNAL line121StartsEn                  : std_logic;  -- ufix1
  SIGNAL line121StartsValid               : std_logic;  -- ufix1
  SIGNAL rd120gate                        : std_logic;  -- ufix1
  SIGNAL line120StartsEn                  : std_logic;  -- ufix1
  SIGNAL line120StartsValid               : std_logic;  -- ufix1
  SIGNAL rd119gate                        : std_logic;  -- ufix1
  SIGNAL line119StartsEn                  : std_logic;  -- ufix1
  SIGNAL line119StartsValid               : std_logic;  -- ufix1
  SIGNAL rd118gate                        : std_logic;  -- ufix1
  SIGNAL line118StartsEn                  : std_logic;  -- ufix1
  SIGNAL line118StartsValid               : std_logic;  -- ufix1
  SIGNAL rd117gate                        : std_logic;  -- ufix1
  SIGNAL line117StartsEn                  : std_logic;  -- ufix1
  SIGNAL line117StartsValid               : std_logic;  -- ufix1
  SIGNAL rd116gate                        : std_logic;  -- ufix1
  SIGNAL line116StartsEn                  : std_logic;  -- ufix1
  SIGNAL line116StartsValid               : std_logic;  -- ufix1
  SIGNAL rd115gate                        : std_logic;  -- ufix1
  SIGNAL line115StartsEn                  : std_logic;  -- ufix1
  SIGNAL line115StartsValid               : std_logic;  -- ufix1
  SIGNAL rd114gate                        : std_logic;  -- ufix1
  SIGNAL line114StartsEn                  : std_logic;  -- ufix1
  SIGNAL line114StartsValid               : std_logic;  -- ufix1
  SIGNAL rd113gate                        : std_logic;  -- ufix1
  SIGNAL line113StartsEn                  : std_logic;  -- ufix1
  SIGNAL line113StartsValid               : std_logic;  -- ufix1
  SIGNAL rd112gate                        : std_logic;  -- ufix1
  SIGNAL line112StartsEn                  : std_logic;  -- ufix1
  SIGNAL line112StartsValid               : std_logic;  -- ufix1
  SIGNAL rd111gate                        : std_logic;  -- ufix1
  SIGNAL line111StartsEn                  : std_logic;  -- ufix1
  SIGNAL line111StartsValid               : std_logic;  -- ufix1
  SIGNAL rd110gate                        : std_logic;  -- ufix1
  SIGNAL line110StartsEn                  : std_logic;  -- ufix1
  SIGNAL line110StartsValid               : std_logic;  -- ufix1
  SIGNAL rd109gate                        : std_logic;  -- ufix1
  SIGNAL line109StartsEn                  : std_logic;  -- ufix1
  SIGNAL line109StartsValid               : std_logic;  -- ufix1
  SIGNAL rd108gate                        : std_logic;  -- ufix1
  SIGNAL line108StartsEn                  : std_logic;  -- ufix1
  SIGNAL line108StartsValid               : std_logic;  -- ufix1
  SIGNAL rd107gate                        : std_logic;  -- ufix1
  SIGNAL line107StartsEn                  : std_logic;  -- ufix1
  SIGNAL line107StartsValid               : std_logic;  -- ufix1
  SIGNAL rd106gate                        : std_logic;  -- ufix1
  SIGNAL line106StartsEn                  : std_logic;  -- ufix1
  SIGNAL line106StartsValid               : std_logic;  -- ufix1
  SIGNAL rd105gate                        : std_logic;  -- ufix1
  SIGNAL line105StartsEn                  : std_logic;  -- ufix1
  SIGNAL line105StartsValid               : std_logic;  -- ufix1
  SIGNAL rd104gate                        : std_logic;  -- ufix1
  SIGNAL line104StartsEn                  : std_logic;  -- ufix1
  SIGNAL line104StartsValid               : std_logic;  -- ufix1
  SIGNAL rd103gate                        : std_logic;  -- ufix1
  SIGNAL line103StartsEn                  : std_logic;  -- ufix1
  SIGNAL line103StartsValid               : std_logic;  -- ufix1
  SIGNAL rd102gate                        : std_logic;  -- ufix1
  SIGNAL line102StartsEn                  : std_logic;  -- ufix1
  SIGNAL line102StartsValid               : std_logic;  -- ufix1
  SIGNAL rd101gate                        : std_logic;  -- ufix1
  SIGNAL line101StartsEn                  : std_logic;  -- ufix1
  SIGNAL line101StartsValid               : std_logic;  -- ufix1
  SIGNAL rd100gate                        : std_logic;  -- ufix1
  SIGNAL line100StartsEn                  : std_logic;  -- ufix1
  SIGNAL line100StartsValid               : std_logic;  -- ufix1
  SIGNAL rd99gate                         : std_logic;  -- ufix1
  SIGNAL line99StartsEn                   : std_logic;  -- ufix1
  SIGNAL line99StartsValid                : std_logic;  -- ufix1
  SIGNAL rd98gate                         : std_logic;  -- ufix1
  SIGNAL line98StartsEn                   : std_logic;  -- ufix1
  SIGNAL line98StartsValid                : std_logic;  -- ufix1
  SIGNAL rd97gate                         : std_logic;  -- ufix1
  SIGNAL line97StartsEn                   : std_logic;  -- ufix1
  SIGNAL line97StartsValid                : std_logic;  -- ufix1
  SIGNAL rd96gate                         : std_logic;  -- ufix1
  SIGNAL line96StartsEn                   : std_logic;  -- ufix1
  SIGNAL line96StartsValid                : std_logic;  -- ufix1
  SIGNAL rd95gate                         : std_logic;  -- ufix1
  SIGNAL line95StartsEn                   : std_logic;  -- ufix1
  SIGNAL line95StartsValid                : std_logic;  -- ufix1
  SIGNAL rd94gate                         : std_logic;  -- ufix1
  SIGNAL line94StartsEn                   : std_logic;  -- ufix1
  SIGNAL line94StartsValid                : std_logic;  -- ufix1
  SIGNAL rd93gate                         : std_logic;  -- ufix1
  SIGNAL line93StartsEn                   : std_logic;  -- ufix1
  SIGNAL line93StartsValid                : std_logic;  -- ufix1
  SIGNAL rd92gate                         : std_logic;  -- ufix1
  SIGNAL line92StartsEn                   : std_logic;  -- ufix1
  SIGNAL line92StartsValid                : std_logic;  -- ufix1
  SIGNAL rd91gate                         : std_logic;  -- ufix1
  SIGNAL line91StartsEn                   : std_logic;  -- ufix1
  SIGNAL line91StartsValid                : std_logic;  -- ufix1
  SIGNAL rd90gate                         : std_logic;  -- ufix1
  SIGNAL line90StartsEn                   : std_logic;  -- ufix1
  SIGNAL line90StartsValid                : std_logic;  -- ufix1
  SIGNAL rd89gate                         : std_logic;  -- ufix1
  SIGNAL line89StartsEn                   : std_logic;  -- ufix1
  SIGNAL line89StartsValid                : std_logic;  -- ufix1
  SIGNAL rd88gate                         : std_logic;  -- ufix1
  SIGNAL line88StartsEn                   : std_logic;  -- ufix1
  SIGNAL line88StartsValid                : std_logic;  -- ufix1
  SIGNAL rd87gate                         : std_logic;  -- ufix1
  SIGNAL line87StartsEn                   : std_logic;  -- ufix1
  SIGNAL line87StartsValid                : std_logic;  -- ufix1
  SIGNAL rd86gate                         : std_logic;  -- ufix1
  SIGNAL line86StartsEn                   : std_logic;  -- ufix1
  SIGNAL line86StartsValid                : std_logic;  -- ufix1
  SIGNAL rd85gate                         : std_logic;  -- ufix1
  SIGNAL line85StartsEn                   : std_logic;  -- ufix1
  SIGNAL line85StartsValid                : std_logic;  -- ufix1
  SIGNAL rd84gate                         : std_logic;  -- ufix1
  SIGNAL line84StartsEn                   : std_logic;  -- ufix1
  SIGNAL line84StartsValid                : std_logic;  -- ufix1
  SIGNAL rd83gate                         : std_logic;  -- ufix1
  SIGNAL line83StartsEn                   : std_logic;  -- ufix1
  SIGNAL line83StartsValid                : std_logic;  -- ufix1
  SIGNAL rd82gate                         : std_logic;  -- ufix1
  SIGNAL line82StartsEn                   : std_logic;  -- ufix1
  SIGNAL line82StartsValid                : std_logic;  -- ufix1
  SIGNAL rd81gate                         : std_logic;  -- ufix1
  SIGNAL line81StartsEn                   : std_logic;  -- ufix1
  SIGNAL line81StartsValid                : std_logic;  -- ufix1
  SIGNAL rd80gate                         : std_logic;  -- ufix1
  SIGNAL line80StartsEn                   : std_logic;  -- ufix1
  SIGNAL line80StartsValid                : std_logic;  -- ufix1
  SIGNAL rd79gate                         : std_logic;  -- ufix1
  SIGNAL line79StartsEn                   : std_logic;  -- ufix1
  SIGNAL line79StartsValid                : std_logic;  -- ufix1
  SIGNAL rd78gate                         : std_logic;  -- ufix1
  SIGNAL line78StartsEn                   : std_logic;  -- ufix1
  SIGNAL line78StartsValid                : std_logic;  -- ufix1
  SIGNAL rd77gate                         : std_logic;  -- ufix1
  SIGNAL line77StartsEn                   : std_logic;  -- ufix1
  SIGNAL line77StartsValid                : std_logic;  -- ufix1
  SIGNAL rd76gate                         : std_logic;  -- ufix1
  SIGNAL line76StartsEn                   : std_logic;  -- ufix1
  SIGNAL line76StartsValid                : std_logic;  -- ufix1
  SIGNAL rd75gate                         : std_logic;  -- ufix1
  SIGNAL line75StartsEn                   : std_logic;  -- ufix1
  SIGNAL line75StartsValid                : std_logic;  -- ufix1
  SIGNAL rd74gate                         : std_logic;  -- ufix1
  SIGNAL line74StartsEn                   : std_logic;  -- ufix1
  SIGNAL line74StartsValid                : std_logic;  -- ufix1
  SIGNAL rd73gate                         : std_logic;  -- ufix1
  SIGNAL line73StartsEn                   : std_logic;  -- ufix1
  SIGNAL line73StartsValid                : std_logic;  -- ufix1
  SIGNAL rd72gate                         : std_logic;  -- ufix1
  SIGNAL line72StartsEn                   : std_logic;  -- ufix1
  SIGNAL line72StartsValid                : std_logic;  -- ufix1
  SIGNAL rd71gate                         : std_logic;  -- ufix1
  SIGNAL line71StartsEn                   : std_logic;  -- ufix1
  SIGNAL line71StartsValid                : std_logic;  -- ufix1
  SIGNAL rd70gate                         : std_logic;  -- ufix1
  SIGNAL line70StartsEn                   : std_logic;  -- ufix1
  SIGNAL line70StartsValid                : std_logic;  -- ufix1
  SIGNAL rd69gate                         : std_logic;  -- ufix1
  SIGNAL line69StartsEn                   : std_logic;  -- ufix1
  SIGNAL line69StartsValid                : std_logic;  -- ufix1
  SIGNAL rd68gate                         : std_logic;  -- ufix1
  SIGNAL line68StartsEn                   : std_logic;  -- ufix1
  SIGNAL line68StartsValid                : std_logic;  -- ufix1
  SIGNAL rd67gate                         : std_logic;  -- ufix1
  SIGNAL line67StartsEn                   : std_logic;  -- ufix1
  SIGNAL line67StartsValid                : std_logic;  -- ufix1
  SIGNAL rd66gate                         : std_logic;  -- ufix1
  SIGNAL line66StartsEn                   : std_logic;  -- ufix1
  SIGNAL line66StartsValid                : std_logic;  -- ufix1
  SIGNAL rd65gate                         : std_logic;  -- ufix1
  SIGNAL line65StartsEn                   : std_logic;  -- ufix1
  SIGNAL line65StartsValid                : std_logic;  -- ufix1
  SIGNAL rd64gate                         : std_logic;  -- ufix1
  SIGNAL line64StartsEn                   : std_logic;  -- ufix1
  SIGNAL line64StartsValid                : std_logic;  -- ufix1
  SIGNAL rd63gate                         : std_logic;  -- ufix1
  SIGNAL line63StartsEn                   : std_logic;  -- ufix1
  SIGNAL line63StartsValid                : std_logic;  -- ufix1
  SIGNAL rd62gate                         : std_logic;  -- ufix1
  SIGNAL line62StartsEn                   : std_logic;  -- ufix1
  SIGNAL line62StartsValid                : std_logic;  -- ufix1
  SIGNAL rd61gate                         : std_logic;  -- ufix1
  SIGNAL line61StartsEn                   : std_logic;  -- ufix1
  SIGNAL line61StartsValid                : std_logic;  -- ufix1
  SIGNAL rd60gate                         : std_logic;  -- ufix1
  SIGNAL line60StartsEn                   : std_logic;  -- ufix1
  SIGNAL line60StartsValid                : std_logic;  -- ufix1
  SIGNAL rd59gate                         : std_logic;  -- ufix1
  SIGNAL line59StartsEn                   : std_logic;  -- ufix1
  SIGNAL line59StartsValid                : std_logic;  -- ufix1
  SIGNAL rd58gate                         : std_logic;  -- ufix1
  SIGNAL line58StartsEn                   : std_logic;  -- ufix1
  SIGNAL line58StartsValid                : std_logic;  -- ufix1
  SIGNAL rd57gate                         : std_logic;  -- ufix1
  SIGNAL line57StartsEn                   : std_logic;  -- ufix1
  SIGNAL line57StartsValid                : std_logic;  -- ufix1
  SIGNAL rd56gate                         : std_logic;  -- ufix1
  SIGNAL line56StartsEn                   : std_logic;  -- ufix1
  SIGNAL line56StartsValid                : std_logic;  -- ufix1
  SIGNAL rd55gate                         : std_logic;  -- ufix1
  SIGNAL line55StartsEn                   : std_logic;  -- ufix1
  SIGNAL line55StartsValid                : std_logic;  -- ufix1
  SIGNAL rd54gate                         : std_logic;  -- ufix1
  SIGNAL line54StartsEn                   : std_logic;  -- ufix1
  SIGNAL line54StartsValid                : std_logic;  -- ufix1
  SIGNAL rd53gate                         : std_logic;  -- ufix1
  SIGNAL line53StartsEn                   : std_logic;  -- ufix1
  SIGNAL line53StartsValid                : std_logic;  -- ufix1
  SIGNAL rd52gate                         : std_logic;  -- ufix1
  SIGNAL line52StartsEn                   : std_logic;  -- ufix1
  SIGNAL line52StartsValid                : std_logic;  -- ufix1
  SIGNAL rd51gate                         : std_logic;  -- ufix1
  SIGNAL line51StartsEn                   : std_logic;  -- ufix1
  SIGNAL line51StartsValid                : std_logic;  -- ufix1
  SIGNAL rd50gate                         : std_logic;  -- ufix1
  SIGNAL line50StartsEn                   : std_logic;  -- ufix1
  SIGNAL line50StartsValid                : std_logic;  -- ufix1
  SIGNAL rd49gate                         : std_logic;  -- ufix1
  SIGNAL line49StartsEn                   : std_logic;  -- ufix1
  SIGNAL line49StartsValid                : std_logic;  -- ufix1
  SIGNAL rd48gate                         : std_logic;  -- ufix1
  SIGNAL line48StartsEn                   : std_logic;  -- ufix1
  SIGNAL line48StartsValid                : std_logic;  -- ufix1
  SIGNAL rd47gate                         : std_logic;  -- ufix1
  SIGNAL line47StartsEn                   : std_logic;  -- ufix1
  SIGNAL line47StartsValid                : std_logic;  -- ufix1
  SIGNAL rd46gate                         : std_logic;  -- ufix1
  SIGNAL line46StartsEn                   : std_logic;  -- ufix1
  SIGNAL line46StartsValid                : std_logic;  -- ufix1
  SIGNAL rd45gate                         : std_logic;  -- ufix1
  SIGNAL line45StartsEn                   : std_logic;  -- ufix1
  SIGNAL line45StartsValid                : std_logic;  -- ufix1
  SIGNAL rd44gate                         : std_logic;  -- ufix1
  SIGNAL line44StartsEn                   : std_logic;  -- ufix1
  SIGNAL line44StartsValid                : std_logic;  -- ufix1
  SIGNAL rd43gate                         : std_logic;  -- ufix1
  SIGNAL line43StartsEn                   : std_logic;  -- ufix1
  SIGNAL line43StartsValid                : std_logic;  -- ufix1
  SIGNAL rd42gate                         : std_logic;  -- ufix1
  SIGNAL line42StartsEn                   : std_logic;  -- ufix1
  SIGNAL line42StartsValid                : std_logic;  -- ufix1
  SIGNAL rd41gate                         : std_logic;  -- ufix1
  SIGNAL line41StartsEn                   : std_logic;  -- ufix1
  SIGNAL line41StartsValid                : std_logic;  -- ufix1
  SIGNAL rd40gate                         : std_logic;  -- ufix1
  SIGNAL line40StartsEn                   : std_logic;  -- ufix1
  SIGNAL line40StartsValid                : std_logic;  -- ufix1
  SIGNAL rd39gate                         : std_logic;  -- ufix1
  SIGNAL line39StartsEn                   : std_logic;  -- ufix1
  SIGNAL line39StartsValid                : std_logic;  -- ufix1
  SIGNAL rd38gate                         : std_logic;  -- ufix1
  SIGNAL line38StartsEn                   : std_logic;  -- ufix1
  SIGNAL line38StartsValid                : std_logic;  -- ufix1
  SIGNAL rd37gate                         : std_logic;  -- ufix1
  SIGNAL line37StartsEn                   : std_logic;  -- ufix1
  SIGNAL line37StartsValid                : std_logic;  -- ufix1
  SIGNAL rd36gate                         : std_logic;  -- ufix1
  SIGNAL line36StartsEn                   : std_logic;  -- ufix1
  SIGNAL line36StartsValid                : std_logic;  -- ufix1
  SIGNAL rd35gate                         : std_logic;  -- ufix1
  SIGNAL line35StartsEn                   : std_logic;  -- ufix1
  SIGNAL line35StartsValid                : std_logic;  -- ufix1
  SIGNAL rd34gate                         : std_logic;  -- ufix1
  SIGNAL line34StartsEn                   : std_logic;  -- ufix1
  SIGNAL line34StartsValid                : std_logic;  -- ufix1
  SIGNAL rd33gate                         : std_logic;  -- ufix1
  SIGNAL line33StartsEn                   : std_logic;  -- ufix1
  SIGNAL line33StartsValid                : std_logic;  -- ufix1
  SIGNAL rd32gate                         : std_logic;  -- ufix1
  SIGNAL line32StartsEn                   : std_logic;  -- ufix1
  SIGNAL line32StartsValid                : std_logic;  -- ufix1
  SIGNAL rd31gate                         : std_logic;  -- ufix1
  SIGNAL line31StartsEn                   : std_logic;  -- ufix1
  SIGNAL line31StartsValid                : std_logic;  -- ufix1
  SIGNAL rd30gate                         : std_logic;  -- ufix1
  SIGNAL line30StartsEn                   : std_logic;  -- ufix1
  SIGNAL line30StartsValid                : std_logic;  -- ufix1
  SIGNAL rd29gate                         : std_logic;  -- ufix1
  SIGNAL line29StartsEn                   : std_logic;  -- ufix1
  SIGNAL line29StartsValid                : std_logic;  -- ufix1
  SIGNAL rd28gate                         : std_logic;  -- ufix1
  SIGNAL line28StartsEn                   : std_logic;  -- ufix1
  SIGNAL line28StartsValid                : std_logic;  -- ufix1
  SIGNAL rd27gate                         : std_logic;  -- ufix1
  SIGNAL line27StartsEn                   : std_logic;  -- ufix1
  SIGNAL line27StartsValid                : std_logic;  -- ufix1
  SIGNAL rd26gate                         : std_logic;  -- ufix1
  SIGNAL line26StartsEn                   : std_logic;  -- ufix1
  SIGNAL line26StartsValid                : std_logic;  -- ufix1
  SIGNAL rd25gate                         : std_logic;  -- ufix1
  SIGNAL line25StartsEn                   : std_logic;  -- ufix1
  SIGNAL line25StartsValid                : std_logic;  -- ufix1
  SIGNAL rd24gate                         : std_logic;  -- ufix1
  SIGNAL line24StartsEn                   : std_logic;  -- ufix1
  SIGNAL line24StartsValid                : std_logic;  -- ufix1
  SIGNAL rd23gate                         : std_logic;  -- ufix1
  SIGNAL line23StartsEn                   : std_logic;  -- ufix1
  SIGNAL line23StartsValid                : std_logic;  -- ufix1
  SIGNAL rd22gate                         : std_logic;  -- ufix1
  SIGNAL line22StartsEn                   : std_logic;  -- ufix1
  SIGNAL line22StartsValid                : std_logic;  -- ufix1
  SIGNAL rd21gate                         : std_logic;  -- ufix1
  SIGNAL line21StartsEn                   : std_logic;  -- ufix1
  SIGNAL line21StartsValid                : std_logic;  -- ufix1
  SIGNAL rd20gate                         : std_logic;  -- ufix1
  SIGNAL line20StartsEn                   : std_logic;  -- ufix1
  SIGNAL line20StartsValid                : std_logic;  -- ufix1
  SIGNAL rd19gate                         : std_logic;  -- ufix1
  SIGNAL line19StartsEn                   : std_logic;  -- ufix1
  SIGNAL line19StartsValid                : std_logic;  -- ufix1
  SIGNAL rd18gate                         : std_logic;  -- ufix1
  SIGNAL line18StartsEn                   : std_logic;  -- ufix1
  SIGNAL line18StartsValid                : std_logic;  -- ufix1
  SIGNAL rd17gate                         : std_logic;  -- ufix1
  SIGNAL line17StartsEn                   : std_logic;  -- ufix1
  SIGNAL line17StartsValid                : std_logic;  -- ufix1
  SIGNAL rd16gate                         : std_logic;  -- ufix1
  SIGNAL line16StartsEn                   : std_logic;  -- ufix1
  SIGNAL line16StartsValid                : std_logic;  -- ufix1
  SIGNAL rd15gate                         : std_logic;  -- ufix1
  SIGNAL line15StartsEn                   : std_logic;  -- ufix1
  SIGNAL line15StartsValid                : std_logic;  -- ufix1
  SIGNAL rd14gate                         : std_logic;  -- ufix1
  SIGNAL line14StartsEn                   : std_logic;  -- ufix1
  SIGNAL line14StartsValid                : std_logic;  -- ufix1
  SIGNAL rd13gate                         : std_logic;  -- ufix1
  SIGNAL line13StartsEn                   : std_logic;  -- ufix1
  SIGNAL line13StartsValid                : std_logic;  -- ufix1
  SIGNAL rd12gate                         : std_logic;  -- ufix1
  SIGNAL line12StartsEn                   : std_logic;  -- ufix1
  SIGNAL line12StartsValid                : std_logic;  -- ufix1
  SIGNAL rd11gate                         : std_logic;  -- ufix1
  SIGNAL line11StartsEn                   : std_logic;  -- ufix1
  SIGNAL line11StartsValid                : std_logic;  -- ufix1
  SIGNAL rd10gate                         : std_logic;  -- ufix1
  SIGNAL line10StartsEn                   : std_logic;  -- ufix1
  SIGNAL line10StartsValid                : std_logic;  -- ufix1
  SIGNAL rd9gate                          : std_logic;  -- ufix1
  SIGNAL line9StartsEn                    : std_logic;  -- ufix1
  SIGNAL line9StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd8gate                          : std_logic;  -- ufix1
  SIGNAL line8StartsEn                    : std_logic;  -- ufix1
  SIGNAL line8StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd7gate                          : std_logic;  -- ufix1
  SIGNAL line7StartsEn                    : std_logic;  -- ufix1
  SIGNAL line7StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd6gate                          : std_logic;  -- ufix1
  SIGNAL line6StartsEn                    : std_logic;  -- ufix1
  SIGNAL line6StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd5gate                          : std_logic;  -- ufix1
  SIGNAL line5StartsEn                    : std_logic;  -- ufix1
  SIGNAL line5StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd4gate                          : std_logic;  -- ufix1
  SIGNAL line4StartsEn                    : std_logic;  -- ufix1
  SIGNAL line4StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd3gate                          : std_logic;  -- ufix1
  SIGNAL line3StartsEn                    : std_logic;  -- ufix1
  SIGNAL line3StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd2gate                          : std_logic;  -- ufix1
  SIGNAL line2StartsEn                    : std_logic;  -- ufix1
  SIGNAL line2StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd1gate                          : std_logic;  -- ufix1
  SIGNAL line1StartsEn                    : std_logic;  -- ufix1
  SIGNAL line1StartsValid                 : std_logic;  -- ufix1
  SIGNAL rd0gate                          : std_logic;  -- ufix1
  SIGNAL line0StartsEn                    : std_logic;  -- ufix1
  SIGNAL line0StartsValid                 : std_logic;  -- ufix1
  SIGNAL linerdvalid                      : std_logic;  -- ufix1
  SIGNAL ramrdline                        : std_logic;  -- ufix1
  SIGNAL line0Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line1Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line2Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line3Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line4Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line5Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line6Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line7Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line8Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line9Starts                      : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line10Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line11Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line12Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line13Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line14Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line15Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line16Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line17Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line18Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line19Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line20Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line21Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line22Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line23Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line24Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line25Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line26Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line27Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line28Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line29Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line30Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line31Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line32Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line33Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line34Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line35Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line36Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line37Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line38Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line39Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line40Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line41Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line42Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line43Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line44Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line45Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line46Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line47Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line48Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line49Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line50Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line51Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line52Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line53Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line54Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line55Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line56Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line57Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line58Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line59Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line60Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line61Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line62Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line63Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line64Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line65Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line66Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line67Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line68Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line69Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line70Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line71Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line72Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line73Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line74Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line75Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line76Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line77Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line78Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line79Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line80Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line81Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line82Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line83Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line84Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line85Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line86Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line87Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line88Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line89Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line90Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line91Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line92Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line93Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line94Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line95Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line96Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line97Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line98Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line99Starts                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line100Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line101Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line102Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line103Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line104Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line105Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line106Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line107Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line108Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line109Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line110Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line111Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line112Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line113Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line114Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line115Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line116Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line117Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line118Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line119Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line120Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line121Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line122Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line123Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line124Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line125Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line126Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL line127Starts                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL linerddata                       : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL frameStart                       : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL RAMrdloadval                     : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL refEarlyInFrame                  : std_logic;  -- ufix1
  SIGNAL refEarlyInLine                   : std_logic;  -- ufix1
  SIGNAL constone                         : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL RAMrdaddr                        : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL RAMrdnextaddr                    : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL addrmatch                        : std_logic;  -- ufix1
  SIGNAL notholdaddr                      : std_logic;  -- ufix1
  SIGNAL RAMrden                          : std_logic;  -- ufix1
  SIGNAL pixzeroconst                     : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL RAMrddata                        : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL RAMrddata_signed                 : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL pixelOutReg                      : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL pixelOut                         : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL refzeroconst_2                   : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL in2_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL refpixelInReg                    : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL refpixdlyline_reg                : vector_of_signed24(0 TO 7);  -- sfix24 [8]
  SIGNAL refpixeldly                      : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL refpixelOutReg                   : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL refPixelOut                      : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL validOut                         : std_logic;

BEGIN
  u_pixelRAM : SimpleDualPortRAM_generic_block1
    GENERIC MAP( AddrWidth => 15,
                 DataWidth => 24
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => std_logic_vector(pixelInReg),
              wr_addr => std_logic_vector(RAMwraddr),
              wr_en => RAMwren,  -- ufix1
              rd_addr => std_logic_vector(RAMrdaddr),
              dout => RAMrddata
              );

  rvalIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refValidInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refValidInReg <= in3_valid;
      END IF;
    END IF;
  END PROCESS rvalIReg_process;


  refvaldlyline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refvaldlyline_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refvaldlyline_reg(0) <= refValidInReg;
        refvaldlyline_reg(5 DOWNTO 1) <= refvaldlyline_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS refvaldlyline_process;

  pixelValidPreReg <= refvaldlyline_reg(5);

  rvalOReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      rvalOReg_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        rvalOReg_reg(0) <= pixelValidPreReg;
        rvalOReg_reg(1) <= rvalOReg_reg(0);
      END IF;
    END IF;
  END PROCESS rvalOReg_process;

  pixelValidOutReg <= rvalOReg_reg(1);

  rvEIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refVEndInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refVEndInReg <= in3_vEnd;
      END IF;
    END IF;
  END PROCESS rvEIReg_process;


  refvedlyline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refvedlyline_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refvedlyline_reg(0) <= refVEndInReg;
        refvedlyline_reg(5 DOWNTO 1) <= refvedlyline_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS refvedlyline_process;

  pixelVEndPreReg <= refvedlyline_reg(5);

  refvEndInv <=  NOT pixelVEndPreReg;

  rvSIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refVStartInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refVStartInReg <= in3_vStart;
      END IF;
    END IF;
  END PROCESS rvSIReg_process;


  refvsdlyline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refvsdlyline_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refvsdlyline_reg(0) <= refVStartInReg;
        refvsdlyline_reg(5 DOWNTO 1) <= refvsdlyline_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS refvsdlyline_process;

  pixelVStartPreReg <= refvsdlyline_reg(5);

  refinFrame2Term <= pixelValidPreReg AND pixelVStartPreReg;

  refValidInv <=  NOT pixelValidPreReg;

  refinFrame3Term <= refValidInv AND refinFrame;

  inFReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refinFrame <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refinFrame <= refinFrameNext;
      END IF;
    END IF;
  END PROCESS inFReg_process;


  refinFrame1Term <= refvEndInv AND refinFrame;

  refinFrameNext <= refinFrame3Term OR (refinFrame1Term OR refinFrame2Term);

  refinFrameInv <=  NOT refinFrame;

  refnewFrame <= refinFrameNext AND refinFrameInv;

  vEIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelVEndInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelVEndInReg <= in1_vEnd;
      END IF;
    END IF;
  END PROCESS vEIReg_process;


  pixelvEndInv <=  NOT pixelVEndInReg;

  valIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelValidInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelValidInReg <= in1_valid;
      END IF;
    END IF;
  END PROCESS valIReg_process;


  vSIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelVStartInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelVStartInReg <= in1_vStart;
      END IF;
    END IF;
  END PROCESS vSIReg_process;


  pixelinFrame2Term <= pixelValidInReg AND pixelVStartInReg;

  pixelValidInv <=  NOT pixelValidInReg;

  pixelinFrame3Term <= pixelValidInv AND pixelinFrame;

  inFReg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelinFrame <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelinFrame <= pixelinFrameNext;
      END IF;
    END IF;
  END PROCESS inFReg_1_process;


  pixelinFrame1Term <= pixelvEndInv AND pixelinFrame;

  pixelinFrameNext <= pixelinFrame3Term OR (pixelinFrame1Term OR pixelinFrame2Term);

  pixelinFrameInv <=  NOT pixelinFrame;

  pixelnewFrame <= pixelinFrameNext AND pixelinFrameInv;

  trueconst <= '1';

  fsvreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      frameStartValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelnewFrame = '1' THEN
        frameStartValid <= trueconst;
      END IF;
    END IF;
  END PROCESS fsvreg_process;


  rfvreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refFrameValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND refnewFrame = '1' THEN
        refFrameValid <= frameStartValid;
      END IF;
    END IF;
  END PROCESS rfvreg_process;


  pixelOutValid <= pixelValidOutReg AND refFrameValid;

  in0_signed <= signed(in0);

  pixelIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelInReg <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelInReg <= in0_signed;
      END IF;
    END IF;
  END PROCESS pixelIReg_process;


  RAMwtone <= pixelinFrame OR pixelnewFrame;

  hEIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelHEndInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelHEndInReg <= in1_hEnd;
      END IF;
    END IF;
  END PROCESS hEIReg_process;


  pixelhEndInv <=  NOT pixelHEndInReg;

  hSIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelHStartInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelHStartInReg <= in1_hStart;
      END IF;
    END IF;
  END PROCESS hSIReg_process;


  pixelinLine2Term <= pixelVStartInReg AND (pixelValidInReg AND pixelHStartInReg);

  pixelinLineInv <=  NOT pixelinLine;

  pixelinLine6Term <= pixelinLineInv AND (pixelinFrame AND (pixelvEndInv AND (pixelValidInReg AND pixelHStartInReg)));

  pixelinLine5Term <= pixelValidInv AND pixelinLine;

  pixelinLine4Term <= pixelinFrameInv AND pixelinLine;

  pixelinLine3Term <= pixelVStartInReg AND pixelinLine;

  pixelinLine1Term <= pixelhEndInv AND pixelinLine;

  pixelinLineNext <= pixelinLine6Term OR (pixelinLine5Term OR (pixelinLine4Term OR (pixelinLine3Term OR (pixelinLine1Term OR pixelinLine2Term))));

  inLReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelinLine <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelinLine <= pixelinLineNext;
      END IF;
    END IF;
  END PROCESS inLReg_process;


  pixelnewLine <= pixelinLineNext AND pixelinLineInv;

  RAMwttwo <= pixelinLine OR pixelnewLine;

  RAMwren <= pixelValidInReg AND (RAMwtone AND RAMwttwo);

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 32767
  wraddrcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      RAMwraddr <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND RAMwren = '1' THEN
        RAMwraddr <= RAMwraddr + to_unsigned(16#0001#, 15);
      END IF;
    END IF;
  END PROCESS wraddrcounter_process;


  ramrdframe <= refnewFrame AND (pixelValidPreReg AND (frameStartValid AND refFrameValid));

  rhEIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refHEndInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refHEndInReg <= in3_hEnd;
      END IF;
    END IF;
  END PROCESS rhEIReg_process;


  refhedlyline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refhedlyline_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refhedlyline_reg(0) <= refHEndInReg;
        refhedlyline_reg(5 DOWNTO 1) <= refhedlyline_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS refhedlyline_process;

  pixelHEndPreReg <= refhedlyline_reg(5);

  refhEndInv <=  NOT pixelHEndPreReg;

  rhSIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refHStartInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refHStartInReg <= in3_hStart;
      END IF;
    END IF;
  END PROCESS rhSIReg_process;


  refhsdlyline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refhsdlyline_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refhsdlyline_reg(0) <= refHStartInReg;
        refhsdlyline_reg(5 DOWNTO 1) <= refhsdlyline_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS refhsdlyline_process;

  pixelHStartPreReg <= refhsdlyline_reg(5);

  refinLine2Term <= pixelVStartPreReg AND (pixelValidPreReg AND pixelHStartPreReg);

  refinLineInv <=  NOT refinLine;

  refinLine6Term <= refinLineInv AND (refinFrame AND (refvEndInv AND (pixelValidPreReg AND pixelHStartPreReg)));

  refinLine5Term <= refValidInv AND refinLine;

  refinLine4Term <= refinFrameInv AND refinLine;

  refinLine3Term <= pixelVStartPreReg AND refinLine;

  inLReg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refinLine <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refinLine <= refinLineNext;
      END IF;
    END IF;
  END PROCESS inLReg_1_process;


  refinLine1Term <= refhEndInv AND refinLine;

  refinLineNext <= refinLine6Term OR (refinLine5Term OR (refinLine4Term OR (refinLine3Term OR (refinLine1Term OR refinLine2Term))));

  refnewLine <= refinLineNext AND refinLineInv;

  refNewFrameInv <=  NOT refnewFrame;

  refNewLineNotFrame <= refnewLine AND refNewFrameInv;

  linerden <= refNewLineNotFrame AND (frameStartValid AND refFrameValid);

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 127
  rdlinecounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linerdaddr <= to_unsigned(16#00#, 7);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND linerden = '1' THEN
        linerdaddr <= linerdaddr + to_unsigned(16#01#, 7);
      END IF;
    END IF;
  END PROCESS rdlinecounter_process;


  
  linerd0addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#00#, 7) ELSE
      '0';

  pixelNewFrameInv <=  NOT pixelnewFrame;

  pixelNewLineNotFrame <= pixelnewLine AND pixelNewFrameInv;

  linewrreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr1addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr1addr <= linewr0addr;
      END IF;
    END IF;
  END PROCESS linewrreg_process;


  linewrreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr2addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr2addr <= linewr1addr;
      END IF;
    END IF;
  END PROCESS linewrreg_1_process;


  linewrreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr3addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr3addr <= linewr2addr;
      END IF;
    END IF;
  END PROCESS linewrreg_2_process;


  linewrreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr4addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr4addr <= linewr3addr;
      END IF;
    END IF;
  END PROCESS linewrreg_3_process;


  linewrreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr5addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr5addr <= linewr4addr;
      END IF;
    END IF;
  END PROCESS linewrreg_4_process;


  linewrreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr6addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr6addr <= linewr5addr;
      END IF;
    END IF;
  END PROCESS linewrreg_5_process;


  linewrreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr7addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr7addr <= linewr6addr;
      END IF;
    END IF;
  END PROCESS linewrreg_6_process;


  linewrreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr8addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr8addr <= linewr7addr;
      END IF;
    END IF;
  END PROCESS linewrreg_7_process;


  linewrreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr9addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr9addr <= linewr8addr;
      END IF;
    END IF;
  END PROCESS linewrreg_8_process;


  linewrreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr10addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr10addr <= linewr9addr;
      END IF;
    END IF;
  END PROCESS linewrreg_9_process;


  linewrreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr11addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr11addr <= linewr10addr;
      END IF;
    END IF;
  END PROCESS linewrreg_10_process;


  linewrreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr12addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr12addr <= linewr11addr;
      END IF;
    END IF;
  END PROCESS linewrreg_11_process;


  linewrreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr13addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr13addr <= linewr12addr;
      END IF;
    END IF;
  END PROCESS linewrreg_12_process;


  linewrreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr14addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr14addr <= linewr13addr;
      END IF;
    END IF;
  END PROCESS linewrreg_13_process;


  linewrreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr15addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr15addr <= linewr14addr;
      END IF;
    END IF;
  END PROCESS linewrreg_14_process;


  linewrreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr16addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr16addr <= linewr15addr;
      END IF;
    END IF;
  END PROCESS linewrreg_15_process;


  linewrreg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr17addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr17addr <= linewr16addr;
      END IF;
    END IF;
  END PROCESS linewrreg_16_process;


  linewrreg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr18addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr18addr <= linewr17addr;
      END IF;
    END IF;
  END PROCESS linewrreg_17_process;


  linewrreg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr19addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr19addr <= linewr18addr;
      END IF;
    END IF;
  END PROCESS linewrreg_18_process;


  linewrreg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr20addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr20addr <= linewr19addr;
      END IF;
    END IF;
  END PROCESS linewrreg_19_process;


  linewrreg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr21addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr21addr <= linewr20addr;
      END IF;
    END IF;
  END PROCESS linewrreg_20_process;


  linewrreg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr22addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr22addr <= linewr21addr;
      END IF;
    END IF;
  END PROCESS linewrreg_21_process;


  linewrreg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr23addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr23addr <= linewr22addr;
      END IF;
    END IF;
  END PROCESS linewrreg_22_process;


  linewrreg_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr24addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr24addr <= linewr23addr;
      END IF;
    END IF;
  END PROCESS linewrreg_23_process;


  linewrreg_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr25addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr25addr <= linewr24addr;
      END IF;
    END IF;
  END PROCESS linewrreg_24_process;


  linewrreg_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr26addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr26addr <= linewr25addr;
      END IF;
    END IF;
  END PROCESS linewrreg_25_process;


  linewrreg_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr27addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr27addr <= linewr26addr;
      END IF;
    END IF;
  END PROCESS linewrreg_26_process;


  linewrreg_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr28addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr28addr <= linewr27addr;
      END IF;
    END IF;
  END PROCESS linewrreg_27_process;


  linewrreg_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr29addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr29addr <= linewr28addr;
      END IF;
    END IF;
  END PROCESS linewrreg_28_process;


  linewrreg_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr30addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr30addr <= linewr29addr;
      END IF;
    END IF;
  END PROCESS linewrreg_29_process;


  linewrreg_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr31addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr31addr <= linewr30addr;
      END IF;
    END IF;
  END PROCESS linewrreg_30_process;


  linewrreg_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr32addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr32addr <= linewr31addr;
      END IF;
    END IF;
  END PROCESS linewrreg_31_process;


  linewrreg_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr33addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr33addr <= linewr32addr;
      END IF;
    END IF;
  END PROCESS linewrreg_32_process;


  linewrreg_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr34addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr34addr <= linewr33addr;
      END IF;
    END IF;
  END PROCESS linewrreg_33_process;


  linewrreg_34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr35addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr35addr <= linewr34addr;
      END IF;
    END IF;
  END PROCESS linewrreg_34_process;


  linewrreg_35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr36addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr36addr <= linewr35addr;
      END IF;
    END IF;
  END PROCESS linewrreg_35_process;


  linewrreg_36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr37addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr37addr <= linewr36addr;
      END IF;
    END IF;
  END PROCESS linewrreg_36_process;


  linewrreg_37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr38addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr38addr <= linewr37addr;
      END IF;
    END IF;
  END PROCESS linewrreg_37_process;


  linewrreg_38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr39addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr39addr <= linewr38addr;
      END IF;
    END IF;
  END PROCESS linewrreg_38_process;


  linewrreg_39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr40addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr40addr <= linewr39addr;
      END IF;
    END IF;
  END PROCESS linewrreg_39_process;


  linewrreg_40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr41addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr41addr <= linewr40addr;
      END IF;
    END IF;
  END PROCESS linewrreg_40_process;


  linewrreg_41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr42addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr42addr <= linewr41addr;
      END IF;
    END IF;
  END PROCESS linewrreg_41_process;


  linewrreg_42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr43addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr43addr <= linewr42addr;
      END IF;
    END IF;
  END PROCESS linewrreg_42_process;


  linewrreg_43_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr44addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr44addr <= linewr43addr;
      END IF;
    END IF;
  END PROCESS linewrreg_43_process;


  linewrreg_44_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr45addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr45addr <= linewr44addr;
      END IF;
    END IF;
  END PROCESS linewrreg_44_process;


  linewrreg_45_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr46addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr46addr <= linewr45addr;
      END IF;
    END IF;
  END PROCESS linewrreg_45_process;


  linewrreg_46_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr47addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr47addr <= linewr46addr;
      END IF;
    END IF;
  END PROCESS linewrreg_46_process;


  linewrreg_47_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr48addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr48addr <= linewr47addr;
      END IF;
    END IF;
  END PROCESS linewrreg_47_process;


  linewrreg_48_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr49addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr49addr <= linewr48addr;
      END IF;
    END IF;
  END PROCESS linewrreg_48_process;


  linewrreg_49_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr50addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr50addr <= linewr49addr;
      END IF;
    END IF;
  END PROCESS linewrreg_49_process;


  linewrreg_50_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr51addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr51addr <= linewr50addr;
      END IF;
    END IF;
  END PROCESS linewrreg_50_process;


  linewrreg_51_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr52addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr52addr <= linewr51addr;
      END IF;
    END IF;
  END PROCESS linewrreg_51_process;


  linewrreg_52_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr53addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr53addr <= linewr52addr;
      END IF;
    END IF;
  END PROCESS linewrreg_52_process;


  linewrreg_53_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr54addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr54addr <= linewr53addr;
      END IF;
    END IF;
  END PROCESS linewrreg_53_process;


  linewrreg_54_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr55addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr55addr <= linewr54addr;
      END IF;
    END IF;
  END PROCESS linewrreg_54_process;


  linewrreg_55_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr56addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr56addr <= linewr55addr;
      END IF;
    END IF;
  END PROCESS linewrreg_55_process;


  linewrreg_56_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr57addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr57addr <= linewr56addr;
      END IF;
    END IF;
  END PROCESS linewrreg_56_process;


  linewrreg_57_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr58addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr58addr <= linewr57addr;
      END IF;
    END IF;
  END PROCESS linewrreg_57_process;


  linewrreg_58_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr59addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr59addr <= linewr58addr;
      END IF;
    END IF;
  END PROCESS linewrreg_58_process;


  linewrreg_59_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr60addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr60addr <= linewr59addr;
      END IF;
    END IF;
  END PROCESS linewrreg_59_process;


  linewrreg_60_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr61addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr61addr <= linewr60addr;
      END IF;
    END IF;
  END PROCESS linewrreg_60_process;


  linewrreg_61_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr62addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr62addr <= linewr61addr;
      END IF;
    END IF;
  END PROCESS linewrreg_61_process;


  linewrreg_62_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr63addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr63addr <= linewr62addr;
      END IF;
    END IF;
  END PROCESS linewrreg_62_process;


  linewrreg_63_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr64addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr64addr <= linewr63addr;
      END IF;
    END IF;
  END PROCESS linewrreg_63_process;


  linewrreg_64_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr65addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr65addr <= linewr64addr;
      END IF;
    END IF;
  END PROCESS linewrreg_64_process;


  linewrreg_65_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr66addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr66addr <= linewr65addr;
      END IF;
    END IF;
  END PROCESS linewrreg_65_process;


  linewrreg_66_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr67addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr67addr <= linewr66addr;
      END IF;
    END IF;
  END PROCESS linewrreg_66_process;


  linewrreg_67_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr68addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr68addr <= linewr67addr;
      END IF;
    END IF;
  END PROCESS linewrreg_67_process;


  linewrreg_68_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr69addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr69addr <= linewr68addr;
      END IF;
    END IF;
  END PROCESS linewrreg_68_process;


  linewrreg_69_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr70addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr70addr <= linewr69addr;
      END IF;
    END IF;
  END PROCESS linewrreg_69_process;


  linewrreg_70_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr71addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr71addr <= linewr70addr;
      END IF;
    END IF;
  END PROCESS linewrreg_70_process;


  linewrreg_71_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr72addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr72addr <= linewr71addr;
      END IF;
    END IF;
  END PROCESS linewrreg_71_process;


  linewrreg_72_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr73addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr73addr <= linewr72addr;
      END IF;
    END IF;
  END PROCESS linewrreg_72_process;


  linewrreg_73_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr74addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr74addr <= linewr73addr;
      END IF;
    END IF;
  END PROCESS linewrreg_73_process;


  linewrreg_74_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr75addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr75addr <= linewr74addr;
      END IF;
    END IF;
  END PROCESS linewrreg_74_process;


  linewrreg_75_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr76addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr76addr <= linewr75addr;
      END IF;
    END IF;
  END PROCESS linewrreg_75_process;


  linewrreg_76_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr77addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr77addr <= linewr76addr;
      END IF;
    END IF;
  END PROCESS linewrreg_76_process;


  linewrreg_77_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr78addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr78addr <= linewr77addr;
      END IF;
    END IF;
  END PROCESS linewrreg_77_process;


  linewrreg_78_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr79addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr79addr <= linewr78addr;
      END IF;
    END IF;
  END PROCESS linewrreg_78_process;


  linewrreg_79_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr80addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr80addr <= linewr79addr;
      END IF;
    END IF;
  END PROCESS linewrreg_79_process;


  linewrreg_80_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr81addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr81addr <= linewr80addr;
      END IF;
    END IF;
  END PROCESS linewrreg_80_process;


  linewrreg_81_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr82addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr82addr <= linewr81addr;
      END IF;
    END IF;
  END PROCESS linewrreg_81_process;


  linewrreg_82_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr83addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr83addr <= linewr82addr;
      END IF;
    END IF;
  END PROCESS linewrreg_82_process;


  linewrreg_83_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr84addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr84addr <= linewr83addr;
      END IF;
    END IF;
  END PROCESS linewrreg_83_process;


  linewrreg_84_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr85addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr85addr <= linewr84addr;
      END IF;
    END IF;
  END PROCESS linewrreg_84_process;


  linewrreg_85_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr86addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr86addr <= linewr85addr;
      END IF;
    END IF;
  END PROCESS linewrreg_85_process;


  linewrreg_86_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr87addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr87addr <= linewr86addr;
      END IF;
    END IF;
  END PROCESS linewrreg_86_process;


  linewrreg_87_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr88addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr88addr <= linewr87addr;
      END IF;
    END IF;
  END PROCESS linewrreg_87_process;


  linewrreg_88_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr89addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr89addr <= linewr88addr;
      END IF;
    END IF;
  END PROCESS linewrreg_88_process;


  linewrreg_89_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr90addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr90addr <= linewr89addr;
      END IF;
    END IF;
  END PROCESS linewrreg_89_process;


  linewrreg_90_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr91addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr91addr <= linewr90addr;
      END IF;
    END IF;
  END PROCESS linewrreg_90_process;


  linewrreg_91_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr92addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr92addr <= linewr91addr;
      END IF;
    END IF;
  END PROCESS linewrreg_91_process;


  linewrreg_92_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr93addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr93addr <= linewr92addr;
      END IF;
    END IF;
  END PROCESS linewrreg_92_process;


  linewrreg_93_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr94addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr94addr <= linewr93addr;
      END IF;
    END IF;
  END PROCESS linewrreg_93_process;


  linewrreg_94_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr95addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr95addr <= linewr94addr;
      END IF;
    END IF;
  END PROCESS linewrreg_94_process;


  linewrreg_95_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr96addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr96addr <= linewr95addr;
      END IF;
    END IF;
  END PROCESS linewrreg_95_process;


  linewrreg_96_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr97addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr97addr <= linewr96addr;
      END IF;
    END IF;
  END PROCESS linewrreg_96_process;


  linewrreg_97_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr98addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr98addr <= linewr97addr;
      END IF;
    END IF;
  END PROCESS linewrreg_97_process;


  linewrreg_98_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr99addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr99addr <= linewr98addr;
      END IF;
    END IF;
  END PROCESS linewrreg_98_process;


  linewrreg_99_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr100addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr100addr <= linewr99addr;
      END IF;
    END IF;
  END PROCESS linewrreg_99_process;


  linewrreg_100_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr101addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr101addr <= linewr100addr;
      END IF;
    END IF;
  END PROCESS linewrreg_100_process;


  linewrreg_101_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr102addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr102addr <= linewr101addr;
      END IF;
    END IF;
  END PROCESS linewrreg_101_process;


  linewrreg_102_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr103addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr103addr <= linewr102addr;
      END IF;
    END IF;
  END PROCESS linewrreg_102_process;


  linewrreg_103_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr104addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr104addr <= linewr103addr;
      END IF;
    END IF;
  END PROCESS linewrreg_103_process;


  linewrreg_104_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr105addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr105addr <= linewr104addr;
      END IF;
    END IF;
  END PROCESS linewrreg_104_process;


  linewrreg_105_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr106addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr106addr <= linewr105addr;
      END IF;
    END IF;
  END PROCESS linewrreg_105_process;


  linewrreg_106_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr107addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr107addr <= linewr106addr;
      END IF;
    END IF;
  END PROCESS linewrreg_106_process;


  linewrreg_107_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr108addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr108addr <= linewr107addr;
      END IF;
    END IF;
  END PROCESS linewrreg_107_process;


  linewrreg_108_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr109addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr109addr <= linewr108addr;
      END IF;
    END IF;
  END PROCESS linewrreg_108_process;


  linewrreg_109_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr110addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr110addr <= linewr109addr;
      END IF;
    END IF;
  END PROCESS linewrreg_109_process;


  linewrreg_110_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr111addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr111addr <= linewr110addr;
      END IF;
    END IF;
  END PROCESS linewrreg_110_process;


  linewrreg_111_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr112addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr112addr <= linewr111addr;
      END IF;
    END IF;
  END PROCESS linewrreg_111_process;


  linewrreg_112_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr113addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr113addr <= linewr112addr;
      END IF;
    END IF;
  END PROCESS linewrreg_112_process;


  linewrreg_113_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr114addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr114addr <= linewr113addr;
      END IF;
    END IF;
  END PROCESS linewrreg_113_process;


  linewrreg_114_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr115addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr115addr <= linewr114addr;
      END IF;
    END IF;
  END PROCESS linewrreg_114_process;


  linewrreg_115_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr116addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr116addr <= linewr115addr;
      END IF;
    END IF;
  END PROCESS linewrreg_115_process;


  linewrreg_116_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr117addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr117addr <= linewr116addr;
      END IF;
    END IF;
  END PROCESS linewrreg_116_process;


  linewrreg_117_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr118addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr118addr <= linewr117addr;
      END IF;
    END IF;
  END PROCESS linewrreg_117_process;


  linewrreg_118_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr119addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr119addr <= linewr118addr;
      END IF;
    END IF;
  END PROCESS linewrreg_118_process;


  linewrreg_119_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr120addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr120addr <= linewr119addr;
      END IF;
    END IF;
  END PROCESS linewrreg_119_process;


  linewrreg_120_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr121addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr121addr <= linewr120addr;
      END IF;
    END IF;
  END PROCESS linewrreg_120_process;


  linewrreg_121_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr122addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr122addr <= linewr121addr;
      END IF;
    END IF;
  END PROCESS linewrreg_121_process;


  linewrreg_122_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr123addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr123addr <= linewr122addr;
      END IF;
    END IF;
  END PROCESS linewrreg_122_process;


  linewrreg_123_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr124addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr124addr <= linewr123addr;
      END IF;
    END IF;
  END PROCESS linewrreg_123_process;


  linewrreg_124_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr125addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr125addr <= linewr124addr;
      END IF;
    END IF;
  END PROCESS linewrreg_124_process;


  linewrreg_125_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr126addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr126addr <= linewr125addr;
      END IF;
    END IF;
  END PROCESS linewrreg_125_process;


  linewrreg_126_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr127addr <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr127addr <= linewr126addr;
      END IF;
    END IF;
  END PROCESS linewrreg_126_process;


  linewrreg_127_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      linewr0addr <= '1';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelNewLineNotFrame = '1' THEN
        linewr0addr <= linewr127addr;
      END IF;
    END IF;
  END PROCESS linewrreg_127_process;


  wr0gate <= linewr0addr AND (frameStartValid AND pixelNewLineNotFrame);

  line0StartsValidNext <= wr0gate AND trueconst;

  
  linerd1addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#01#, 7) ELSE
      '0';

  wr1gate <= linewr1addr AND (frameStartValid AND pixelNewLineNotFrame);

  line1StartsValidNext <= wr1gate AND trueconst;

  
  linerd2addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#02#, 7) ELSE
      '0';

  wr2gate <= linewr2addr AND (frameStartValid AND pixelNewLineNotFrame);

  line2StartsValidNext <= wr2gate AND trueconst;

  
  linerd3addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#03#, 7) ELSE
      '0';

  wr3gate <= linewr3addr AND (frameStartValid AND pixelNewLineNotFrame);

  line3StartsValidNext <= wr3gate AND trueconst;

  
  linerd4addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#04#, 7) ELSE
      '0';

  wr4gate <= linewr4addr AND (frameStartValid AND pixelNewLineNotFrame);

  line4StartsValidNext <= wr4gate AND trueconst;

  
  linerd5addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#05#, 7) ELSE
      '0';

  wr5gate <= linewr5addr AND (frameStartValid AND pixelNewLineNotFrame);

  line5StartsValidNext <= wr5gate AND trueconst;

  
  linerd6addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#06#, 7) ELSE
      '0';

  wr6gate <= linewr6addr AND (frameStartValid AND pixelNewLineNotFrame);

  line6StartsValidNext <= wr6gate AND trueconst;

  
  linerd7addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#07#, 7) ELSE
      '0';

  wr7gate <= linewr7addr AND (frameStartValid AND pixelNewLineNotFrame);

  line7StartsValidNext <= wr7gate AND trueconst;

  
  linerd8addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#08#, 7) ELSE
      '0';

  wr8gate <= linewr8addr AND (frameStartValid AND pixelNewLineNotFrame);

  line8StartsValidNext <= wr8gate AND trueconst;

  
  linerd9addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#09#, 7) ELSE
      '0';

  wr9gate <= linewr9addr AND (frameStartValid AND pixelNewLineNotFrame);

  line9StartsValidNext <= wr9gate AND trueconst;

  
  linerd10addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#0A#, 7) ELSE
      '0';

  wr10gate <= linewr10addr AND (frameStartValid AND pixelNewLineNotFrame);

  line10StartsValidNext <= wr10gate AND trueconst;

  
  linerd11addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#0B#, 7) ELSE
      '0';

  wr11gate <= linewr11addr AND (frameStartValid AND pixelNewLineNotFrame);

  line11StartsValidNext <= wr11gate AND trueconst;

  
  linerd12addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#0C#, 7) ELSE
      '0';

  wr12gate <= linewr12addr AND (frameStartValid AND pixelNewLineNotFrame);

  line12StartsValidNext <= wr12gate AND trueconst;

  
  linerd13addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#0D#, 7) ELSE
      '0';

  wr13gate <= linewr13addr AND (frameStartValid AND pixelNewLineNotFrame);

  line13StartsValidNext <= wr13gate AND trueconst;

  
  linerd14addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#0E#, 7) ELSE
      '0';

  wr14gate <= linewr14addr AND (frameStartValid AND pixelNewLineNotFrame);

  line14StartsValidNext <= wr14gate AND trueconst;

  
  linerd15addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#0F#, 7) ELSE
      '0';

  wr15gate <= linewr15addr AND (frameStartValid AND pixelNewLineNotFrame);

  line15StartsValidNext <= wr15gate AND trueconst;

  
  linerd16addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#10#, 7) ELSE
      '0';

  wr16gate <= linewr16addr AND (frameStartValid AND pixelNewLineNotFrame);

  line16StartsValidNext <= wr16gate AND trueconst;

  
  linerd17addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#11#, 7) ELSE
      '0';

  wr17gate <= linewr17addr AND (frameStartValid AND pixelNewLineNotFrame);

  line17StartsValidNext <= wr17gate AND trueconst;

  
  linerd18addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#12#, 7) ELSE
      '0';

  wr18gate <= linewr18addr AND (frameStartValid AND pixelNewLineNotFrame);

  line18StartsValidNext <= wr18gate AND trueconst;

  
  linerd19addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#13#, 7) ELSE
      '0';

  wr19gate <= linewr19addr AND (frameStartValid AND pixelNewLineNotFrame);

  line19StartsValidNext <= wr19gate AND trueconst;

  
  linerd20addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#14#, 7) ELSE
      '0';

  wr20gate <= linewr20addr AND (frameStartValid AND pixelNewLineNotFrame);

  line20StartsValidNext <= wr20gate AND trueconst;

  
  linerd21addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#15#, 7) ELSE
      '0';

  wr21gate <= linewr21addr AND (frameStartValid AND pixelNewLineNotFrame);

  line21StartsValidNext <= wr21gate AND trueconst;

  
  linerd22addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#16#, 7) ELSE
      '0';

  wr22gate <= linewr22addr AND (frameStartValid AND pixelNewLineNotFrame);

  line22StartsValidNext <= wr22gate AND trueconst;

  
  linerd23addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#17#, 7) ELSE
      '0';

  wr23gate <= linewr23addr AND (frameStartValid AND pixelNewLineNotFrame);

  line23StartsValidNext <= wr23gate AND trueconst;

  
  linerd24addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#18#, 7) ELSE
      '0';

  wr24gate <= linewr24addr AND (frameStartValid AND pixelNewLineNotFrame);

  line24StartsValidNext <= wr24gate AND trueconst;

  
  linerd25addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#19#, 7) ELSE
      '0';

  wr25gate <= linewr25addr AND (frameStartValid AND pixelNewLineNotFrame);

  line25StartsValidNext <= wr25gate AND trueconst;

  
  linerd26addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#1A#, 7) ELSE
      '0';

  wr26gate <= linewr26addr AND (frameStartValid AND pixelNewLineNotFrame);

  line26StartsValidNext <= wr26gate AND trueconst;

  
  linerd27addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#1B#, 7) ELSE
      '0';

  wr27gate <= linewr27addr AND (frameStartValid AND pixelNewLineNotFrame);

  line27StartsValidNext <= wr27gate AND trueconst;

  
  linerd28addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#1C#, 7) ELSE
      '0';

  wr28gate <= linewr28addr AND (frameStartValid AND pixelNewLineNotFrame);

  line28StartsValidNext <= wr28gate AND trueconst;

  
  linerd29addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#1D#, 7) ELSE
      '0';

  wr29gate <= linewr29addr AND (frameStartValid AND pixelNewLineNotFrame);

  line29StartsValidNext <= wr29gate AND trueconst;

  
  linerd30addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#1E#, 7) ELSE
      '0';

  wr30gate <= linewr30addr AND (frameStartValid AND pixelNewLineNotFrame);

  line30StartsValidNext <= wr30gate AND trueconst;

  
  linerd31addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#1F#, 7) ELSE
      '0';

  wr31gate <= linewr31addr AND (frameStartValid AND pixelNewLineNotFrame);

  line31StartsValidNext <= wr31gate AND trueconst;

  
  linerd32addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#20#, 7) ELSE
      '0';

  wr32gate <= linewr32addr AND (frameStartValid AND pixelNewLineNotFrame);

  line32StartsValidNext <= wr32gate AND trueconst;

  
  linerd33addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#21#, 7) ELSE
      '0';

  wr33gate <= linewr33addr AND (frameStartValid AND pixelNewLineNotFrame);

  line33StartsValidNext <= wr33gate AND trueconst;

  
  linerd34addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#22#, 7) ELSE
      '0';

  wr34gate <= linewr34addr AND (frameStartValid AND pixelNewLineNotFrame);

  line34StartsValidNext <= wr34gate AND trueconst;

  
  linerd35addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#23#, 7) ELSE
      '0';

  wr35gate <= linewr35addr AND (frameStartValid AND pixelNewLineNotFrame);

  line35StartsValidNext <= wr35gate AND trueconst;

  
  linerd36addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#24#, 7) ELSE
      '0';

  wr36gate <= linewr36addr AND (frameStartValid AND pixelNewLineNotFrame);

  line36StartsValidNext <= wr36gate AND trueconst;

  
  linerd37addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#25#, 7) ELSE
      '0';

  wr37gate <= linewr37addr AND (frameStartValid AND pixelNewLineNotFrame);

  line37StartsValidNext <= wr37gate AND trueconst;

  
  linerd38addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#26#, 7) ELSE
      '0';

  wr38gate <= linewr38addr AND (frameStartValid AND pixelNewLineNotFrame);

  line38StartsValidNext <= wr38gate AND trueconst;

  
  linerd39addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#27#, 7) ELSE
      '0';

  wr39gate <= linewr39addr AND (frameStartValid AND pixelNewLineNotFrame);

  line39StartsValidNext <= wr39gate AND trueconst;

  
  linerd40addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#28#, 7) ELSE
      '0';

  wr40gate <= linewr40addr AND (frameStartValid AND pixelNewLineNotFrame);

  line40StartsValidNext <= wr40gate AND trueconst;

  
  linerd41addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#29#, 7) ELSE
      '0';

  wr41gate <= linewr41addr AND (frameStartValid AND pixelNewLineNotFrame);

  line41StartsValidNext <= wr41gate AND trueconst;

  
  linerd42addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#2A#, 7) ELSE
      '0';

  wr42gate <= linewr42addr AND (frameStartValid AND pixelNewLineNotFrame);

  line42StartsValidNext <= wr42gate AND trueconst;

  
  linerd43addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#2B#, 7) ELSE
      '0';

  wr43gate <= linewr43addr AND (frameStartValid AND pixelNewLineNotFrame);

  line43StartsValidNext <= wr43gate AND trueconst;

  
  linerd44addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#2C#, 7) ELSE
      '0';

  wr44gate <= linewr44addr AND (frameStartValid AND pixelNewLineNotFrame);

  line44StartsValidNext <= wr44gate AND trueconst;

  
  linerd45addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#2D#, 7) ELSE
      '0';

  wr45gate <= linewr45addr AND (frameStartValid AND pixelNewLineNotFrame);

  line45StartsValidNext <= wr45gate AND trueconst;

  
  linerd46addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#2E#, 7) ELSE
      '0';

  wr46gate <= linewr46addr AND (frameStartValid AND pixelNewLineNotFrame);

  line46StartsValidNext <= wr46gate AND trueconst;

  
  linerd47addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#2F#, 7) ELSE
      '0';

  wr47gate <= linewr47addr AND (frameStartValid AND pixelNewLineNotFrame);

  line47StartsValidNext <= wr47gate AND trueconst;

  
  linerd48addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#30#, 7) ELSE
      '0';

  wr48gate <= linewr48addr AND (frameStartValid AND pixelNewLineNotFrame);

  line48StartsValidNext <= wr48gate AND trueconst;

  
  linerd49addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#31#, 7) ELSE
      '0';

  wr49gate <= linewr49addr AND (frameStartValid AND pixelNewLineNotFrame);

  line49StartsValidNext <= wr49gate AND trueconst;

  
  linerd50addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#32#, 7) ELSE
      '0';

  wr50gate <= linewr50addr AND (frameStartValid AND pixelNewLineNotFrame);

  line50StartsValidNext <= wr50gate AND trueconst;

  
  linerd51addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#33#, 7) ELSE
      '0';

  wr51gate <= linewr51addr AND (frameStartValid AND pixelNewLineNotFrame);

  line51StartsValidNext <= wr51gate AND trueconst;

  
  linerd52addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#34#, 7) ELSE
      '0';

  wr52gate <= linewr52addr AND (frameStartValid AND pixelNewLineNotFrame);

  line52StartsValidNext <= wr52gate AND trueconst;

  
  linerd53addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#35#, 7) ELSE
      '0';

  wr53gate <= linewr53addr AND (frameStartValid AND pixelNewLineNotFrame);

  line53StartsValidNext <= wr53gate AND trueconst;

  
  linerd54addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#36#, 7) ELSE
      '0';

  wr54gate <= linewr54addr AND (frameStartValid AND pixelNewLineNotFrame);

  line54StartsValidNext <= wr54gate AND trueconst;

  
  linerd55addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#37#, 7) ELSE
      '0';

  wr55gate <= linewr55addr AND (frameStartValid AND pixelNewLineNotFrame);

  line55StartsValidNext <= wr55gate AND trueconst;

  
  linerd56addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#38#, 7) ELSE
      '0';

  wr56gate <= linewr56addr AND (frameStartValid AND pixelNewLineNotFrame);

  line56StartsValidNext <= wr56gate AND trueconst;

  
  linerd57addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#39#, 7) ELSE
      '0';

  wr57gate <= linewr57addr AND (frameStartValid AND pixelNewLineNotFrame);

  line57StartsValidNext <= wr57gate AND trueconst;

  
  linerd58addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#3A#, 7) ELSE
      '0';

  wr58gate <= linewr58addr AND (frameStartValid AND pixelNewLineNotFrame);

  line58StartsValidNext <= wr58gate AND trueconst;

  
  linerd59addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#3B#, 7) ELSE
      '0';

  wr59gate <= linewr59addr AND (frameStartValid AND pixelNewLineNotFrame);

  line59StartsValidNext <= wr59gate AND trueconst;

  
  linerd60addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#3C#, 7) ELSE
      '0';

  wr60gate <= linewr60addr AND (frameStartValid AND pixelNewLineNotFrame);

  line60StartsValidNext <= wr60gate AND trueconst;

  
  linerd61addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#3D#, 7) ELSE
      '0';

  wr61gate <= linewr61addr AND (frameStartValid AND pixelNewLineNotFrame);

  line61StartsValidNext <= wr61gate AND trueconst;

  
  linerd62addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#3E#, 7) ELSE
      '0';

  wr62gate <= linewr62addr AND (frameStartValid AND pixelNewLineNotFrame);

  line62StartsValidNext <= wr62gate AND trueconst;

  
  linerd63addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#3F#, 7) ELSE
      '0';

  wr63gate <= linewr63addr AND (frameStartValid AND pixelNewLineNotFrame);

  line63StartsValidNext <= wr63gate AND trueconst;

  
  linerd64addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#40#, 7) ELSE
      '0';

  wr64gate <= linewr64addr AND (frameStartValid AND pixelNewLineNotFrame);

  line64StartsValidNext <= wr64gate AND trueconst;

  
  linerd65addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#41#, 7) ELSE
      '0';

  wr65gate <= linewr65addr AND (frameStartValid AND pixelNewLineNotFrame);

  line65StartsValidNext <= wr65gate AND trueconst;

  
  linerd66addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#42#, 7) ELSE
      '0';

  wr66gate <= linewr66addr AND (frameStartValid AND pixelNewLineNotFrame);

  line66StartsValidNext <= wr66gate AND trueconst;

  
  linerd67addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#43#, 7) ELSE
      '0';

  wr67gate <= linewr67addr AND (frameStartValid AND pixelNewLineNotFrame);

  line67StartsValidNext <= wr67gate AND trueconst;

  
  linerd68addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#44#, 7) ELSE
      '0';

  wr68gate <= linewr68addr AND (frameStartValid AND pixelNewLineNotFrame);

  line68StartsValidNext <= wr68gate AND trueconst;

  
  linerd69addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#45#, 7) ELSE
      '0';

  wr69gate <= linewr69addr AND (frameStartValid AND pixelNewLineNotFrame);

  line69StartsValidNext <= wr69gate AND trueconst;

  
  linerd70addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#46#, 7) ELSE
      '0';

  wr70gate <= linewr70addr AND (frameStartValid AND pixelNewLineNotFrame);

  line70StartsValidNext <= wr70gate AND trueconst;

  
  linerd71addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#47#, 7) ELSE
      '0';

  wr71gate <= linewr71addr AND (frameStartValid AND pixelNewLineNotFrame);

  line71StartsValidNext <= wr71gate AND trueconst;

  
  linerd72addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#48#, 7) ELSE
      '0';

  wr72gate <= linewr72addr AND (frameStartValid AND pixelNewLineNotFrame);

  line72StartsValidNext <= wr72gate AND trueconst;

  
  linerd73addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#49#, 7) ELSE
      '0';

  wr73gate <= linewr73addr AND (frameStartValid AND pixelNewLineNotFrame);

  line73StartsValidNext <= wr73gate AND trueconst;

  
  linerd74addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#4A#, 7) ELSE
      '0';

  wr74gate <= linewr74addr AND (frameStartValid AND pixelNewLineNotFrame);

  line74StartsValidNext <= wr74gate AND trueconst;

  
  linerd75addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#4B#, 7) ELSE
      '0';

  wr75gate <= linewr75addr AND (frameStartValid AND pixelNewLineNotFrame);

  line75StartsValidNext <= wr75gate AND trueconst;

  
  linerd76addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#4C#, 7) ELSE
      '0';

  wr76gate <= linewr76addr AND (frameStartValid AND pixelNewLineNotFrame);

  line76StartsValidNext <= wr76gate AND trueconst;

  
  linerd77addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#4D#, 7) ELSE
      '0';

  wr77gate <= linewr77addr AND (frameStartValid AND pixelNewLineNotFrame);

  line77StartsValidNext <= wr77gate AND trueconst;

  
  linerd78addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#4E#, 7) ELSE
      '0';

  wr78gate <= linewr78addr AND (frameStartValid AND pixelNewLineNotFrame);

  line78StartsValidNext <= wr78gate AND trueconst;

  
  linerd79addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#4F#, 7) ELSE
      '0';

  wr79gate <= linewr79addr AND (frameStartValid AND pixelNewLineNotFrame);

  line79StartsValidNext <= wr79gate AND trueconst;

  
  linerd80addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#50#, 7) ELSE
      '0';

  wr80gate <= linewr80addr AND (frameStartValid AND pixelNewLineNotFrame);

  line80StartsValidNext <= wr80gate AND trueconst;

  
  linerd81addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#51#, 7) ELSE
      '0';

  wr81gate <= linewr81addr AND (frameStartValid AND pixelNewLineNotFrame);

  line81StartsValidNext <= wr81gate AND trueconst;

  
  linerd82addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#52#, 7) ELSE
      '0';

  wr82gate <= linewr82addr AND (frameStartValid AND pixelNewLineNotFrame);

  line82StartsValidNext <= wr82gate AND trueconst;

  
  linerd83addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#53#, 7) ELSE
      '0';

  wr83gate <= linewr83addr AND (frameStartValid AND pixelNewLineNotFrame);

  line83StartsValidNext <= wr83gate AND trueconst;

  
  linerd84addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#54#, 7) ELSE
      '0';

  wr84gate <= linewr84addr AND (frameStartValid AND pixelNewLineNotFrame);

  line84StartsValidNext <= wr84gate AND trueconst;

  
  linerd85addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#55#, 7) ELSE
      '0';

  wr85gate <= linewr85addr AND (frameStartValid AND pixelNewLineNotFrame);

  line85StartsValidNext <= wr85gate AND trueconst;

  
  linerd86addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#56#, 7) ELSE
      '0';

  wr86gate <= linewr86addr AND (frameStartValid AND pixelNewLineNotFrame);

  line86StartsValidNext <= wr86gate AND trueconst;

  
  linerd87addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#57#, 7) ELSE
      '0';

  wr87gate <= linewr87addr AND (frameStartValid AND pixelNewLineNotFrame);

  line87StartsValidNext <= wr87gate AND trueconst;

  
  linerd88addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#58#, 7) ELSE
      '0';

  wr88gate <= linewr88addr AND (frameStartValid AND pixelNewLineNotFrame);

  line88StartsValidNext <= wr88gate AND trueconst;

  
  linerd89addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#59#, 7) ELSE
      '0';

  wr89gate <= linewr89addr AND (frameStartValid AND pixelNewLineNotFrame);

  line89StartsValidNext <= wr89gate AND trueconst;

  
  linerd90addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#5A#, 7) ELSE
      '0';

  wr90gate <= linewr90addr AND (frameStartValid AND pixelNewLineNotFrame);

  line90StartsValidNext <= wr90gate AND trueconst;

  
  linerd91addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#5B#, 7) ELSE
      '0';

  wr91gate <= linewr91addr AND (frameStartValid AND pixelNewLineNotFrame);

  line91StartsValidNext <= wr91gate AND trueconst;

  
  linerd92addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#5C#, 7) ELSE
      '0';

  wr92gate <= linewr92addr AND (frameStartValid AND pixelNewLineNotFrame);

  line92StartsValidNext <= wr92gate AND trueconst;

  
  linerd93addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#5D#, 7) ELSE
      '0';

  wr93gate <= linewr93addr AND (frameStartValid AND pixelNewLineNotFrame);

  line93StartsValidNext <= wr93gate AND trueconst;

  
  linerd94addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#5E#, 7) ELSE
      '0';

  wr94gate <= linewr94addr AND (frameStartValid AND pixelNewLineNotFrame);

  line94StartsValidNext <= wr94gate AND trueconst;

  
  linerd95addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#5F#, 7) ELSE
      '0';

  wr95gate <= linewr95addr AND (frameStartValid AND pixelNewLineNotFrame);

  line95StartsValidNext <= wr95gate AND trueconst;

  
  linerd96addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#60#, 7) ELSE
      '0';

  wr96gate <= linewr96addr AND (frameStartValid AND pixelNewLineNotFrame);

  line96StartsValidNext <= wr96gate AND trueconst;

  
  linerd97addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#61#, 7) ELSE
      '0';

  wr97gate <= linewr97addr AND (frameStartValid AND pixelNewLineNotFrame);

  line97StartsValidNext <= wr97gate AND trueconst;

  
  linerd98addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#62#, 7) ELSE
      '0';

  wr98gate <= linewr98addr AND (frameStartValid AND pixelNewLineNotFrame);

  line98StartsValidNext <= wr98gate AND trueconst;

  
  linerd99addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#63#, 7) ELSE
      '0';

  wr99gate <= linewr99addr AND (frameStartValid AND pixelNewLineNotFrame);

  line99StartsValidNext <= wr99gate AND trueconst;

  
  linerd100addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#64#, 7) ELSE
      '0';

  wr100gate <= linewr100addr AND (frameStartValid AND pixelNewLineNotFrame);

  line100StartsValidNext <= wr100gate AND trueconst;

  
  linerd101addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#65#, 7) ELSE
      '0';

  wr101gate <= linewr101addr AND (frameStartValid AND pixelNewLineNotFrame);

  line101StartsValidNext <= wr101gate AND trueconst;

  
  linerd102addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#66#, 7) ELSE
      '0';

  wr102gate <= linewr102addr AND (frameStartValid AND pixelNewLineNotFrame);

  line102StartsValidNext <= wr102gate AND trueconst;

  
  linerd103addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#67#, 7) ELSE
      '0';

  wr103gate <= linewr103addr AND (frameStartValid AND pixelNewLineNotFrame);

  line103StartsValidNext <= wr103gate AND trueconst;

  
  linerd104addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#68#, 7) ELSE
      '0';

  wr104gate <= linewr104addr AND (frameStartValid AND pixelNewLineNotFrame);

  line104StartsValidNext <= wr104gate AND trueconst;

  
  linerd105addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#69#, 7) ELSE
      '0';

  wr105gate <= linewr105addr AND (frameStartValid AND pixelNewLineNotFrame);

  line105StartsValidNext <= wr105gate AND trueconst;

  
  linerd106addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#6A#, 7) ELSE
      '0';

  wr106gate <= linewr106addr AND (frameStartValid AND pixelNewLineNotFrame);

  line106StartsValidNext <= wr106gate AND trueconst;

  
  linerd107addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#6B#, 7) ELSE
      '0';

  wr107gate <= linewr107addr AND (frameStartValid AND pixelNewLineNotFrame);

  line107StartsValidNext <= wr107gate AND trueconst;

  
  linerd108addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#6C#, 7) ELSE
      '0';

  wr108gate <= linewr108addr AND (frameStartValid AND pixelNewLineNotFrame);

  line108StartsValidNext <= wr108gate AND trueconst;

  
  linerd109addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#6D#, 7) ELSE
      '0';

  wr109gate <= linewr109addr AND (frameStartValid AND pixelNewLineNotFrame);

  line109StartsValidNext <= wr109gate AND trueconst;

  
  linerd110addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#6E#, 7) ELSE
      '0';

  wr110gate <= linewr110addr AND (frameStartValid AND pixelNewLineNotFrame);

  line110StartsValidNext <= wr110gate AND trueconst;

  
  linerd111addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#6F#, 7) ELSE
      '0';

  wr111gate <= linewr111addr AND (frameStartValid AND pixelNewLineNotFrame);

  line111StartsValidNext <= wr111gate AND trueconst;

  
  linerd112addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#70#, 7) ELSE
      '0';

  wr112gate <= linewr112addr AND (frameStartValid AND pixelNewLineNotFrame);

  line112StartsValidNext <= wr112gate AND trueconst;

  
  linerd113addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#71#, 7) ELSE
      '0';

  wr113gate <= linewr113addr AND (frameStartValid AND pixelNewLineNotFrame);

  line113StartsValidNext <= wr113gate AND trueconst;

  
  linerd114addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#72#, 7) ELSE
      '0';

  wr114gate <= linewr114addr AND (frameStartValid AND pixelNewLineNotFrame);

  line114StartsValidNext <= wr114gate AND trueconst;

  
  linerd115addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#73#, 7) ELSE
      '0';

  wr115gate <= linewr115addr AND (frameStartValid AND pixelNewLineNotFrame);

  line115StartsValidNext <= wr115gate AND trueconst;

  
  linerd116addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#74#, 7) ELSE
      '0';

  wr116gate <= linewr116addr AND (frameStartValid AND pixelNewLineNotFrame);

  line116StartsValidNext <= wr116gate AND trueconst;

  
  linerd117addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#75#, 7) ELSE
      '0';

  wr117gate <= linewr117addr AND (frameStartValid AND pixelNewLineNotFrame);

  line117StartsValidNext <= wr117gate AND trueconst;

  
  linerd118addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#76#, 7) ELSE
      '0';

  wr118gate <= linewr118addr AND (frameStartValid AND pixelNewLineNotFrame);

  line118StartsValidNext <= wr118gate AND trueconst;

  
  linerd119addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#77#, 7) ELSE
      '0';

  wr119gate <= linewr119addr AND (frameStartValid AND pixelNewLineNotFrame);

  line119StartsValidNext <= wr119gate AND trueconst;

  
  linerd120addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#78#, 7) ELSE
      '0';

  wr120gate <= linewr120addr AND (frameStartValid AND pixelNewLineNotFrame);

  line120StartsValidNext <= wr120gate AND trueconst;

  
  linerd121addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#79#, 7) ELSE
      '0';

  wr121gate <= linewr121addr AND (frameStartValid AND pixelNewLineNotFrame);

  line121StartsValidNext <= wr121gate AND trueconst;

  
  linerd122addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#7A#, 7) ELSE
      '0';

  wr122gate <= linewr122addr AND (frameStartValid AND pixelNewLineNotFrame);

  line122StartsValidNext <= wr122gate AND trueconst;

  
  linerd123addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#7B#, 7) ELSE
      '0';

  wr123gate <= linewr123addr AND (frameStartValid AND pixelNewLineNotFrame);

  line123StartsValidNext <= wr123gate AND trueconst;

  
  linerd124addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#7C#, 7) ELSE
      '0';

  wr124gate <= linewr124addr AND (frameStartValid AND pixelNewLineNotFrame);

  line124StartsValidNext <= wr124gate AND trueconst;

  
  linerd125addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#7D#, 7) ELSE
      '0';

  wr125gate <= linewr125addr AND (frameStartValid AND pixelNewLineNotFrame);

  line125StartsValidNext <= wr125gate AND trueconst;

  
  linerd126addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#7E#, 7) ELSE
      '0';

  wr126gate <= linewr126addr AND (frameStartValid AND pixelNewLineNotFrame);

  line126StartsValidNext <= wr126gate AND trueconst;

  
  linerd127addrdecode <= '1' WHEN linerdaddr = to_unsigned(16#7F#, 7) ELSE
      '0';

  wr127gate <= linewr127addr AND (frameStartValid AND pixelNewLineNotFrame);

  line127StartsValidNext <= wr127gate AND trueconst;

  rd127gate <= RAMrdload AND linerd127addrdecode;

  line127StartsEn <= rd127gate OR wr127gate;

  lsvalreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line127StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line127StartsEn = '1' THEN
        line127StartsValid <= line127StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_process;


  rd126gate <= RAMrdload AND linerd126addrdecode;

  line126StartsEn <= rd126gate OR wr126gate;

  lsvalreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line126StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line126StartsEn = '1' THEN
        line126StartsValid <= line126StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_1_process;


  rd125gate <= RAMrdload AND linerd125addrdecode;

  line125StartsEn <= rd125gate OR wr125gate;

  lsvalreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line125StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line125StartsEn = '1' THEN
        line125StartsValid <= line125StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_2_process;


  rd124gate <= RAMrdload AND linerd124addrdecode;

  line124StartsEn <= rd124gate OR wr124gate;

  lsvalreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line124StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line124StartsEn = '1' THEN
        line124StartsValid <= line124StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_3_process;


  rd123gate <= RAMrdload AND linerd123addrdecode;

  line123StartsEn <= rd123gate OR wr123gate;

  lsvalreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line123StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line123StartsEn = '1' THEN
        line123StartsValid <= line123StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_4_process;


  rd122gate <= RAMrdload AND linerd122addrdecode;

  line122StartsEn <= rd122gate OR wr122gate;

  lsvalreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line122StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line122StartsEn = '1' THEN
        line122StartsValid <= line122StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_5_process;


  rd121gate <= RAMrdload AND linerd121addrdecode;

  line121StartsEn <= rd121gate OR wr121gate;

  lsvalreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line121StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line121StartsEn = '1' THEN
        line121StartsValid <= line121StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_6_process;


  rd120gate <= RAMrdload AND linerd120addrdecode;

  line120StartsEn <= rd120gate OR wr120gate;

  lsvalreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line120StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line120StartsEn = '1' THEN
        line120StartsValid <= line120StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_7_process;


  rd119gate <= RAMrdload AND linerd119addrdecode;

  line119StartsEn <= rd119gate OR wr119gate;

  lsvalreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line119StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line119StartsEn = '1' THEN
        line119StartsValid <= line119StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_8_process;


  rd118gate <= RAMrdload AND linerd118addrdecode;

  line118StartsEn <= rd118gate OR wr118gate;

  lsvalreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line118StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line118StartsEn = '1' THEN
        line118StartsValid <= line118StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_9_process;


  rd117gate <= RAMrdload AND linerd117addrdecode;

  line117StartsEn <= rd117gate OR wr117gate;

  lsvalreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line117StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line117StartsEn = '1' THEN
        line117StartsValid <= line117StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_10_process;


  rd116gate <= RAMrdload AND linerd116addrdecode;

  line116StartsEn <= rd116gate OR wr116gate;

  lsvalreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line116StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line116StartsEn = '1' THEN
        line116StartsValid <= line116StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_11_process;


  rd115gate <= RAMrdload AND linerd115addrdecode;

  line115StartsEn <= rd115gate OR wr115gate;

  lsvalreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line115StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line115StartsEn = '1' THEN
        line115StartsValid <= line115StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_12_process;


  rd114gate <= RAMrdload AND linerd114addrdecode;

  line114StartsEn <= rd114gate OR wr114gate;

  lsvalreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line114StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line114StartsEn = '1' THEN
        line114StartsValid <= line114StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_13_process;


  rd113gate <= RAMrdload AND linerd113addrdecode;

  line113StartsEn <= rd113gate OR wr113gate;

  lsvalreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line113StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line113StartsEn = '1' THEN
        line113StartsValid <= line113StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_14_process;


  rd112gate <= RAMrdload AND linerd112addrdecode;

  line112StartsEn <= rd112gate OR wr112gate;

  lsvalreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line112StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line112StartsEn = '1' THEN
        line112StartsValid <= line112StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_15_process;


  rd111gate <= RAMrdload AND linerd111addrdecode;

  line111StartsEn <= rd111gate OR wr111gate;

  lsvalreg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line111StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line111StartsEn = '1' THEN
        line111StartsValid <= line111StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_16_process;


  rd110gate <= RAMrdload AND linerd110addrdecode;

  line110StartsEn <= rd110gate OR wr110gate;

  lsvalreg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line110StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line110StartsEn = '1' THEN
        line110StartsValid <= line110StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_17_process;


  rd109gate <= RAMrdload AND linerd109addrdecode;

  line109StartsEn <= rd109gate OR wr109gate;

  lsvalreg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line109StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line109StartsEn = '1' THEN
        line109StartsValid <= line109StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_18_process;


  rd108gate <= RAMrdload AND linerd108addrdecode;

  line108StartsEn <= rd108gate OR wr108gate;

  lsvalreg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line108StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line108StartsEn = '1' THEN
        line108StartsValid <= line108StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_19_process;


  rd107gate <= RAMrdload AND linerd107addrdecode;

  line107StartsEn <= rd107gate OR wr107gate;

  lsvalreg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line107StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line107StartsEn = '1' THEN
        line107StartsValid <= line107StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_20_process;


  rd106gate <= RAMrdload AND linerd106addrdecode;

  line106StartsEn <= rd106gate OR wr106gate;

  lsvalreg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line106StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line106StartsEn = '1' THEN
        line106StartsValid <= line106StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_21_process;


  rd105gate <= RAMrdload AND linerd105addrdecode;

  line105StartsEn <= rd105gate OR wr105gate;

  lsvalreg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line105StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line105StartsEn = '1' THEN
        line105StartsValid <= line105StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_22_process;


  rd104gate <= RAMrdload AND linerd104addrdecode;

  line104StartsEn <= rd104gate OR wr104gate;

  lsvalreg_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line104StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line104StartsEn = '1' THEN
        line104StartsValid <= line104StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_23_process;


  rd103gate <= RAMrdload AND linerd103addrdecode;

  line103StartsEn <= rd103gate OR wr103gate;

  lsvalreg_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line103StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line103StartsEn = '1' THEN
        line103StartsValid <= line103StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_24_process;


  rd102gate <= RAMrdload AND linerd102addrdecode;

  line102StartsEn <= rd102gate OR wr102gate;

  lsvalreg_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line102StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line102StartsEn = '1' THEN
        line102StartsValid <= line102StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_25_process;


  rd101gate <= RAMrdload AND linerd101addrdecode;

  line101StartsEn <= rd101gate OR wr101gate;

  lsvalreg_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line101StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line101StartsEn = '1' THEN
        line101StartsValid <= line101StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_26_process;


  rd100gate <= RAMrdload AND linerd100addrdecode;

  line100StartsEn <= rd100gate OR wr100gate;

  lsvalreg_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line100StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line100StartsEn = '1' THEN
        line100StartsValid <= line100StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_27_process;


  rd99gate <= RAMrdload AND linerd99addrdecode;

  line99StartsEn <= rd99gate OR wr99gate;

  lsvalreg_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line99StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line99StartsEn = '1' THEN
        line99StartsValid <= line99StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_28_process;


  rd98gate <= RAMrdload AND linerd98addrdecode;

  line98StartsEn <= rd98gate OR wr98gate;

  lsvalreg_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line98StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line98StartsEn = '1' THEN
        line98StartsValid <= line98StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_29_process;


  rd97gate <= RAMrdload AND linerd97addrdecode;

  line97StartsEn <= rd97gate OR wr97gate;

  lsvalreg_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line97StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line97StartsEn = '1' THEN
        line97StartsValid <= line97StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_30_process;


  rd96gate <= RAMrdload AND linerd96addrdecode;

  line96StartsEn <= rd96gate OR wr96gate;

  lsvalreg_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line96StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line96StartsEn = '1' THEN
        line96StartsValid <= line96StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_31_process;


  rd95gate <= RAMrdload AND linerd95addrdecode;

  line95StartsEn <= rd95gate OR wr95gate;

  lsvalreg_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line95StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line95StartsEn = '1' THEN
        line95StartsValid <= line95StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_32_process;


  rd94gate <= RAMrdload AND linerd94addrdecode;

  line94StartsEn <= rd94gate OR wr94gate;

  lsvalreg_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line94StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line94StartsEn = '1' THEN
        line94StartsValid <= line94StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_33_process;


  rd93gate <= RAMrdload AND linerd93addrdecode;

  line93StartsEn <= rd93gate OR wr93gate;

  lsvalreg_34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line93StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line93StartsEn = '1' THEN
        line93StartsValid <= line93StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_34_process;


  rd92gate <= RAMrdload AND linerd92addrdecode;

  line92StartsEn <= rd92gate OR wr92gate;

  lsvalreg_35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line92StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line92StartsEn = '1' THEN
        line92StartsValid <= line92StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_35_process;


  rd91gate <= RAMrdload AND linerd91addrdecode;

  line91StartsEn <= rd91gate OR wr91gate;

  lsvalreg_36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line91StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line91StartsEn = '1' THEN
        line91StartsValid <= line91StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_36_process;


  rd90gate <= RAMrdload AND linerd90addrdecode;

  line90StartsEn <= rd90gate OR wr90gate;

  lsvalreg_37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line90StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line90StartsEn = '1' THEN
        line90StartsValid <= line90StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_37_process;


  rd89gate <= RAMrdload AND linerd89addrdecode;

  line89StartsEn <= rd89gate OR wr89gate;

  lsvalreg_38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line89StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line89StartsEn = '1' THEN
        line89StartsValid <= line89StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_38_process;


  rd88gate <= RAMrdload AND linerd88addrdecode;

  line88StartsEn <= rd88gate OR wr88gate;

  lsvalreg_39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line88StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line88StartsEn = '1' THEN
        line88StartsValid <= line88StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_39_process;


  rd87gate <= RAMrdload AND linerd87addrdecode;

  line87StartsEn <= rd87gate OR wr87gate;

  lsvalreg_40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line87StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line87StartsEn = '1' THEN
        line87StartsValid <= line87StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_40_process;


  rd86gate <= RAMrdload AND linerd86addrdecode;

  line86StartsEn <= rd86gate OR wr86gate;

  lsvalreg_41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line86StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line86StartsEn = '1' THEN
        line86StartsValid <= line86StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_41_process;


  rd85gate <= RAMrdload AND linerd85addrdecode;

  line85StartsEn <= rd85gate OR wr85gate;

  lsvalreg_42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line85StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line85StartsEn = '1' THEN
        line85StartsValid <= line85StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_42_process;


  rd84gate <= RAMrdload AND linerd84addrdecode;

  line84StartsEn <= rd84gate OR wr84gate;

  lsvalreg_43_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line84StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line84StartsEn = '1' THEN
        line84StartsValid <= line84StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_43_process;


  rd83gate <= RAMrdload AND linerd83addrdecode;

  line83StartsEn <= rd83gate OR wr83gate;

  lsvalreg_44_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line83StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line83StartsEn = '1' THEN
        line83StartsValid <= line83StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_44_process;


  rd82gate <= RAMrdload AND linerd82addrdecode;

  line82StartsEn <= rd82gate OR wr82gate;

  lsvalreg_45_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line82StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line82StartsEn = '1' THEN
        line82StartsValid <= line82StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_45_process;


  rd81gate <= RAMrdload AND linerd81addrdecode;

  line81StartsEn <= rd81gate OR wr81gate;

  lsvalreg_46_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line81StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line81StartsEn = '1' THEN
        line81StartsValid <= line81StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_46_process;


  rd80gate <= RAMrdload AND linerd80addrdecode;

  line80StartsEn <= rd80gate OR wr80gate;

  lsvalreg_47_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line80StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line80StartsEn = '1' THEN
        line80StartsValid <= line80StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_47_process;


  rd79gate <= RAMrdload AND linerd79addrdecode;

  line79StartsEn <= rd79gate OR wr79gate;

  lsvalreg_48_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line79StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line79StartsEn = '1' THEN
        line79StartsValid <= line79StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_48_process;


  rd78gate <= RAMrdload AND linerd78addrdecode;

  line78StartsEn <= rd78gate OR wr78gate;

  lsvalreg_49_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line78StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line78StartsEn = '1' THEN
        line78StartsValid <= line78StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_49_process;


  rd77gate <= RAMrdload AND linerd77addrdecode;

  line77StartsEn <= rd77gate OR wr77gate;

  lsvalreg_50_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line77StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line77StartsEn = '1' THEN
        line77StartsValid <= line77StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_50_process;


  rd76gate <= RAMrdload AND linerd76addrdecode;

  line76StartsEn <= rd76gate OR wr76gate;

  lsvalreg_51_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line76StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line76StartsEn = '1' THEN
        line76StartsValid <= line76StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_51_process;


  rd75gate <= RAMrdload AND linerd75addrdecode;

  line75StartsEn <= rd75gate OR wr75gate;

  lsvalreg_52_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line75StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line75StartsEn = '1' THEN
        line75StartsValid <= line75StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_52_process;


  rd74gate <= RAMrdload AND linerd74addrdecode;

  line74StartsEn <= rd74gate OR wr74gate;

  lsvalreg_53_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line74StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line74StartsEn = '1' THEN
        line74StartsValid <= line74StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_53_process;


  rd73gate <= RAMrdload AND linerd73addrdecode;

  line73StartsEn <= rd73gate OR wr73gate;

  lsvalreg_54_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line73StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line73StartsEn = '1' THEN
        line73StartsValid <= line73StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_54_process;


  rd72gate <= RAMrdload AND linerd72addrdecode;

  line72StartsEn <= rd72gate OR wr72gate;

  lsvalreg_55_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line72StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line72StartsEn = '1' THEN
        line72StartsValid <= line72StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_55_process;


  rd71gate <= RAMrdload AND linerd71addrdecode;

  line71StartsEn <= rd71gate OR wr71gate;

  lsvalreg_56_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line71StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line71StartsEn = '1' THEN
        line71StartsValid <= line71StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_56_process;


  rd70gate <= RAMrdload AND linerd70addrdecode;

  line70StartsEn <= rd70gate OR wr70gate;

  lsvalreg_57_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line70StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line70StartsEn = '1' THEN
        line70StartsValid <= line70StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_57_process;


  rd69gate <= RAMrdload AND linerd69addrdecode;

  line69StartsEn <= rd69gate OR wr69gate;

  lsvalreg_58_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line69StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line69StartsEn = '1' THEN
        line69StartsValid <= line69StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_58_process;


  rd68gate <= RAMrdload AND linerd68addrdecode;

  line68StartsEn <= rd68gate OR wr68gate;

  lsvalreg_59_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line68StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line68StartsEn = '1' THEN
        line68StartsValid <= line68StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_59_process;


  rd67gate <= RAMrdload AND linerd67addrdecode;

  line67StartsEn <= rd67gate OR wr67gate;

  lsvalreg_60_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line67StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line67StartsEn = '1' THEN
        line67StartsValid <= line67StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_60_process;


  rd66gate <= RAMrdload AND linerd66addrdecode;

  line66StartsEn <= rd66gate OR wr66gate;

  lsvalreg_61_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line66StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line66StartsEn = '1' THEN
        line66StartsValid <= line66StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_61_process;


  rd65gate <= RAMrdload AND linerd65addrdecode;

  line65StartsEn <= rd65gate OR wr65gate;

  lsvalreg_62_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line65StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line65StartsEn = '1' THEN
        line65StartsValid <= line65StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_62_process;


  rd64gate <= RAMrdload AND linerd64addrdecode;

  line64StartsEn <= rd64gate OR wr64gate;

  lsvalreg_63_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line64StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line64StartsEn = '1' THEN
        line64StartsValid <= line64StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_63_process;


  rd63gate <= RAMrdload AND linerd63addrdecode;

  line63StartsEn <= rd63gate OR wr63gate;

  lsvalreg_64_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line63StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line63StartsEn = '1' THEN
        line63StartsValid <= line63StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_64_process;


  rd62gate <= RAMrdload AND linerd62addrdecode;

  line62StartsEn <= rd62gate OR wr62gate;

  lsvalreg_65_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line62StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line62StartsEn = '1' THEN
        line62StartsValid <= line62StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_65_process;


  rd61gate <= RAMrdload AND linerd61addrdecode;

  line61StartsEn <= rd61gate OR wr61gate;

  lsvalreg_66_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line61StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line61StartsEn = '1' THEN
        line61StartsValid <= line61StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_66_process;


  rd60gate <= RAMrdload AND linerd60addrdecode;

  line60StartsEn <= rd60gate OR wr60gate;

  lsvalreg_67_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line60StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line60StartsEn = '1' THEN
        line60StartsValid <= line60StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_67_process;


  rd59gate <= RAMrdload AND linerd59addrdecode;

  line59StartsEn <= rd59gate OR wr59gate;

  lsvalreg_68_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line59StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line59StartsEn = '1' THEN
        line59StartsValid <= line59StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_68_process;


  rd58gate <= RAMrdload AND linerd58addrdecode;

  line58StartsEn <= rd58gate OR wr58gate;

  lsvalreg_69_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line58StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line58StartsEn = '1' THEN
        line58StartsValid <= line58StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_69_process;


  rd57gate <= RAMrdload AND linerd57addrdecode;

  line57StartsEn <= rd57gate OR wr57gate;

  lsvalreg_70_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line57StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line57StartsEn = '1' THEN
        line57StartsValid <= line57StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_70_process;


  rd56gate <= RAMrdload AND linerd56addrdecode;

  line56StartsEn <= rd56gate OR wr56gate;

  lsvalreg_71_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line56StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line56StartsEn = '1' THEN
        line56StartsValid <= line56StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_71_process;


  rd55gate <= RAMrdload AND linerd55addrdecode;

  line55StartsEn <= rd55gate OR wr55gate;

  lsvalreg_72_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line55StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line55StartsEn = '1' THEN
        line55StartsValid <= line55StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_72_process;


  rd54gate <= RAMrdload AND linerd54addrdecode;

  line54StartsEn <= rd54gate OR wr54gate;

  lsvalreg_73_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line54StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line54StartsEn = '1' THEN
        line54StartsValid <= line54StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_73_process;


  rd53gate <= RAMrdload AND linerd53addrdecode;

  line53StartsEn <= rd53gate OR wr53gate;

  lsvalreg_74_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line53StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line53StartsEn = '1' THEN
        line53StartsValid <= line53StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_74_process;


  rd52gate <= RAMrdload AND linerd52addrdecode;

  line52StartsEn <= rd52gate OR wr52gate;

  lsvalreg_75_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line52StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line52StartsEn = '1' THEN
        line52StartsValid <= line52StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_75_process;


  rd51gate <= RAMrdload AND linerd51addrdecode;

  line51StartsEn <= rd51gate OR wr51gate;

  lsvalreg_76_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line51StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line51StartsEn = '1' THEN
        line51StartsValid <= line51StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_76_process;


  rd50gate <= RAMrdload AND linerd50addrdecode;

  line50StartsEn <= rd50gate OR wr50gate;

  lsvalreg_77_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line50StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line50StartsEn = '1' THEN
        line50StartsValid <= line50StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_77_process;


  rd49gate <= RAMrdload AND linerd49addrdecode;

  line49StartsEn <= rd49gate OR wr49gate;

  lsvalreg_78_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line49StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line49StartsEn = '1' THEN
        line49StartsValid <= line49StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_78_process;


  rd48gate <= RAMrdload AND linerd48addrdecode;

  line48StartsEn <= rd48gate OR wr48gate;

  lsvalreg_79_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line48StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line48StartsEn = '1' THEN
        line48StartsValid <= line48StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_79_process;


  rd47gate <= RAMrdload AND linerd47addrdecode;

  line47StartsEn <= rd47gate OR wr47gate;

  lsvalreg_80_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line47StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line47StartsEn = '1' THEN
        line47StartsValid <= line47StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_80_process;


  rd46gate <= RAMrdload AND linerd46addrdecode;

  line46StartsEn <= rd46gate OR wr46gate;

  lsvalreg_81_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line46StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line46StartsEn = '1' THEN
        line46StartsValid <= line46StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_81_process;


  rd45gate <= RAMrdload AND linerd45addrdecode;

  line45StartsEn <= rd45gate OR wr45gate;

  lsvalreg_82_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line45StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line45StartsEn = '1' THEN
        line45StartsValid <= line45StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_82_process;


  rd44gate <= RAMrdload AND linerd44addrdecode;

  line44StartsEn <= rd44gate OR wr44gate;

  lsvalreg_83_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line44StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line44StartsEn = '1' THEN
        line44StartsValid <= line44StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_83_process;


  rd43gate <= RAMrdload AND linerd43addrdecode;

  line43StartsEn <= rd43gate OR wr43gate;

  lsvalreg_84_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line43StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line43StartsEn = '1' THEN
        line43StartsValid <= line43StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_84_process;


  rd42gate <= RAMrdload AND linerd42addrdecode;

  line42StartsEn <= rd42gate OR wr42gate;

  lsvalreg_85_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line42StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line42StartsEn = '1' THEN
        line42StartsValid <= line42StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_85_process;


  rd41gate <= RAMrdload AND linerd41addrdecode;

  line41StartsEn <= rd41gate OR wr41gate;

  lsvalreg_86_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line41StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line41StartsEn = '1' THEN
        line41StartsValid <= line41StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_86_process;


  rd40gate <= RAMrdload AND linerd40addrdecode;

  line40StartsEn <= rd40gate OR wr40gate;

  lsvalreg_87_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line40StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line40StartsEn = '1' THEN
        line40StartsValid <= line40StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_87_process;


  rd39gate <= RAMrdload AND linerd39addrdecode;

  line39StartsEn <= rd39gate OR wr39gate;

  lsvalreg_88_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line39StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line39StartsEn = '1' THEN
        line39StartsValid <= line39StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_88_process;


  rd38gate <= RAMrdload AND linerd38addrdecode;

  line38StartsEn <= rd38gate OR wr38gate;

  lsvalreg_89_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line38StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line38StartsEn = '1' THEN
        line38StartsValid <= line38StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_89_process;


  rd37gate <= RAMrdload AND linerd37addrdecode;

  line37StartsEn <= rd37gate OR wr37gate;

  lsvalreg_90_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line37StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line37StartsEn = '1' THEN
        line37StartsValid <= line37StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_90_process;


  rd36gate <= RAMrdload AND linerd36addrdecode;

  line36StartsEn <= rd36gate OR wr36gate;

  lsvalreg_91_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line36StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line36StartsEn = '1' THEN
        line36StartsValid <= line36StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_91_process;


  rd35gate <= RAMrdload AND linerd35addrdecode;

  line35StartsEn <= rd35gate OR wr35gate;

  lsvalreg_92_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line35StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line35StartsEn = '1' THEN
        line35StartsValid <= line35StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_92_process;


  rd34gate <= RAMrdload AND linerd34addrdecode;

  line34StartsEn <= rd34gate OR wr34gate;

  lsvalreg_93_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line34StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line34StartsEn = '1' THEN
        line34StartsValid <= line34StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_93_process;


  rd33gate <= RAMrdload AND linerd33addrdecode;

  line33StartsEn <= rd33gate OR wr33gate;

  lsvalreg_94_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line33StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line33StartsEn = '1' THEN
        line33StartsValid <= line33StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_94_process;


  rd32gate <= RAMrdload AND linerd32addrdecode;

  line32StartsEn <= rd32gate OR wr32gate;

  lsvalreg_95_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line32StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line32StartsEn = '1' THEN
        line32StartsValid <= line32StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_95_process;


  rd31gate <= RAMrdload AND linerd31addrdecode;

  line31StartsEn <= rd31gate OR wr31gate;

  lsvalreg_96_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line31StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line31StartsEn = '1' THEN
        line31StartsValid <= line31StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_96_process;


  rd30gate <= RAMrdload AND linerd30addrdecode;

  line30StartsEn <= rd30gate OR wr30gate;

  lsvalreg_97_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line30StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line30StartsEn = '1' THEN
        line30StartsValid <= line30StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_97_process;


  rd29gate <= RAMrdload AND linerd29addrdecode;

  line29StartsEn <= rd29gate OR wr29gate;

  lsvalreg_98_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line29StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line29StartsEn = '1' THEN
        line29StartsValid <= line29StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_98_process;


  rd28gate <= RAMrdload AND linerd28addrdecode;

  line28StartsEn <= rd28gate OR wr28gate;

  lsvalreg_99_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line28StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line28StartsEn = '1' THEN
        line28StartsValid <= line28StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_99_process;


  rd27gate <= RAMrdload AND linerd27addrdecode;

  line27StartsEn <= rd27gate OR wr27gate;

  lsvalreg_100_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line27StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line27StartsEn = '1' THEN
        line27StartsValid <= line27StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_100_process;


  rd26gate <= RAMrdload AND linerd26addrdecode;

  line26StartsEn <= rd26gate OR wr26gate;

  lsvalreg_101_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line26StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line26StartsEn = '1' THEN
        line26StartsValid <= line26StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_101_process;


  rd25gate <= RAMrdload AND linerd25addrdecode;

  line25StartsEn <= rd25gate OR wr25gate;

  lsvalreg_102_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line25StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line25StartsEn = '1' THEN
        line25StartsValid <= line25StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_102_process;


  rd24gate <= RAMrdload AND linerd24addrdecode;

  line24StartsEn <= rd24gate OR wr24gate;

  lsvalreg_103_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line24StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line24StartsEn = '1' THEN
        line24StartsValid <= line24StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_103_process;


  rd23gate <= RAMrdload AND linerd23addrdecode;

  line23StartsEn <= rd23gate OR wr23gate;

  lsvalreg_104_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line23StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line23StartsEn = '1' THEN
        line23StartsValid <= line23StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_104_process;


  rd22gate <= RAMrdload AND linerd22addrdecode;

  line22StartsEn <= rd22gate OR wr22gate;

  lsvalreg_105_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line22StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line22StartsEn = '1' THEN
        line22StartsValid <= line22StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_105_process;


  rd21gate <= RAMrdload AND linerd21addrdecode;

  line21StartsEn <= rd21gate OR wr21gate;

  lsvalreg_106_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line21StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line21StartsEn = '1' THEN
        line21StartsValid <= line21StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_106_process;


  rd20gate <= RAMrdload AND linerd20addrdecode;

  line20StartsEn <= rd20gate OR wr20gate;

  lsvalreg_107_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line20StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line20StartsEn = '1' THEN
        line20StartsValid <= line20StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_107_process;


  rd19gate <= RAMrdload AND linerd19addrdecode;

  line19StartsEn <= rd19gate OR wr19gate;

  lsvalreg_108_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line19StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line19StartsEn = '1' THEN
        line19StartsValid <= line19StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_108_process;


  rd18gate <= RAMrdload AND linerd18addrdecode;

  line18StartsEn <= rd18gate OR wr18gate;

  lsvalreg_109_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line18StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line18StartsEn = '1' THEN
        line18StartsValid <= line18StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_109_process;


  rd17gate <= RAMrdload AND linerd17addrdecode;

  line17StartsEn <= rd17gate OR wr17gate;

  lsvalreg_110_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line17StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line17StartsEn = '1' THEN
        line17StartsValid <= line17StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_110_process;


  rd16gate <= RAMrdload AND linerd16addrdecode;

  line16StartsEn <= rd16gate OR wr16gate;

  lsvalreg_111_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line16StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line16StartsEn = '1' THEN
        line16StartsValid <= line16StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_111_process;


  rd15gate <= RAMrdload AND linerd15addrdecode;

  line15StartsEn <= rd15gate OR wr15gate;

  lsvalreg_112_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line15StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line15StartsEn = '1' THEN
        line15StartsValid <= line15StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_112_process;


  rd14gate <= RAMrdload AND linerd14addrdecode;

  line14StartsEn <= rd14gate OR wr14gate;

  lsvalreg_113_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line14StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line14StartsEn = '1' THEN
        line14StartsValid <= line14StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_113_process;


  rd13gate <= RAMrdload AND linerd13addrdecode;

  line13StartsEn <= rd13gate OR wr13gate;

  lsvalreg_114_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line13StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line13StartsEn = '1' THEN
        line13StartsValid <= line13StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_114_process;


  rd12gate <= RAMrdload AND linerd12addrdecode;

  line12StartsEn <= rd12gate OR wr12gate;

  lsvalreg_115_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line12StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line12StartsEn = '1' THEN
        line12StartsValid <= line12StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_115_process;


  rd11gate <= RAMrdload AND linerd11addrdecode;

  line11StartsEn <= rd11gate OR wr11gate;

  lsvalreg_116_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line11StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line11StartsEn = '1' THEN
        line11StartsValid <= line11StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_116_process;


  rd10gate <= RAMrdload AND linerd10addrdecode;

  line10StartsEn <= rd10gate OR wr10gate;

  lsvalreg_117_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line10StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line10StartsEn = '1' THEN
        line10StartsValid <= line10StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_117_process;


  rd9gate <= RAMrdload AND linerd9addrdecode;

  line9StartsEn <= rd9gate OR wr9gate;

  lsvalreg_118_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line9StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line9StartsEn = '1' THEN
        line9StartsValid <= line9StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_118_process;


  rd8gate <= RAMrdload AND linerd8addrdecode;

  line8StartsEn <= rd8gate OR wr8gate;

  lsvalreg_119_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line8StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line8StartsEn = '1' THEN
        line8StartsValid <= line8StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_119_process;


  rd7gate <= RAMrdload AND linerd7addrdecode;

  line7StartsEn <= rd7gate OR wr7gate;

  lsvalreg_120_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line7StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line7StartsEn = '1' THEN
        line7StartsValid <= line7StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_120_process;


  rd6gate <= RAMrdload AND linerd6addrdecode;

  line6StartsEn <= rd6gate OR wr6gate;

  lsvalreg_121_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line6StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line6StartsEn = '1' THEN
        line6StartsValid <= line6StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_121_process;


  rd5gate <= RAMrdload AND linerd5addrdecode;

  line5StartsEn <= rd5gate OR wr5gate;

  lsvalreg_122_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line5StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line5StartsEn = '1' THEN
        line5StartsValid <= line5StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_122_process;


  rd4gate <= RAMrdload AND linerd4addrdecode;

  line4StartsEn <= rd4gate OR wr4gate;

  lsvalreg_123_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line4StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line4StartsEn = '1' THEN
        line4StartsValid <= line4StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_123_process;


  rd3gate <= RAMrdload AND linerd3addrdecode;

  line3StartsEn <= rd3gate OR wr3gate;

  lsvalreg_124_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line3StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line3StartsEn = '1' THEN
        line3StartsValid <= line3StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_124_process;


  rd2gate <= RAMrdload AND linerd2addrdecode;

  line2StartsEn <= rd2gate OR wr2gate;

  lsvalreg_125_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line2StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line2StartsEn = '1' THEN
        line2StartsValid <= line2StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_125_process;


  rd1gate <= RAMrdload AND linerd1addrdecode;

  line1StartsEn <= rd1gate OR wr1gate;

  lsvalreg_126_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line1StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line1StartsEn = '1' THEN
        line1StartsValid <= line1StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_126_process;


  rd0gate <= RAMrdload AND linerd0addrdecode;

  line0StartsEn <= rd0gate OR wr0gate;

  lsvalreg_127_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line0StartsValid <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line0StartsEn = '1' THEN
        line0StartsValid <= line0StartsValidNext;
      END IF;
    END IF;
  END PROCESS lsvalreg_127_process;


  
  linerdvalid <= line0StartsValid WHEN linerdaddr = to_unsigned(16#00#, 7) ELSE
      line1StartsValid WHEN linerdaddr = to_unsigned(16#01#, 7) ELSE
      line2StartsValid WHEN linerdaddr = to_unsigned(16#02#, 7) ELSE
      line3StartsValid WHEN linerdaddr = to_unsigned(16#03#, 7) ELSE
      line4StartsValid WHEN linerdaddr = to_unsigned(16#04#, 7) ELSE
      line5StartsValid WHEN linerdaddr = to_unsigned(16#05#, 7) ELSE
      line6StartsValid WHEN linerdaddr = to_unsigned(16#06#, 7) ELSE
      line7StartsValid WHEN linerdaddr = to_unsigned(16#07#, 7) ELSE
      line8StartsValid WHEN linerdaddr = to_unsigned(16#08#, 7) ELSE
      line9StartsValid WHEN linerdaddr = to_unsigned(16#09#, 7) ELSE
      line10StartsValid WHEN linerdaddr = to_unsigned(16#0A#, 7) ELSE
      line11StartsValid WHEN linerdaddr = to_unsigned(16#0B#, 7) ELSE
      line12StartsValid WHEN linerdaddr = to_unsigned(16#0C#, 7) ELSE
      line13StartsValid WHEN linerdaddr = to_unsigned(16#0D#, 7) ELSE
      line14StartsValid WHEN linerdaddr = to_unsigned(16#0E#, 7) ELSE
      line15StartsValid WHEN linerdaddr = to_unsigned(16#0F#, 7) ELSE
      line16StartsValid WHEN linerdaddr = to_unsigned(16#10#, 7) ELSE
      line17StartsValid WHEN linerdaddr = to_unsigned(16#11#, 7) ELSE
      line18StartsValid WHEN linerdaddr = to_unsigned(16#12#, 7) ELSE
      line19StartsValid WHEN linerdaddr = to_unsigned(16#13#, 7) ELSE
      line20StartsValid WHEN linerdaddr = to_unsigned(16#14#, 7) ELSE
      line21StartsValid WHEN linerdaddr = to_unsigned(16#15#, 7) ELSE
      line22StartsValid WHEN linerdaddr = to_unsigned(16#16#, 7) ELSE
      line23StartsValid WHEN linerdaddr = to_unsigned(16#17#, 7) ELSE
      line24StartsValid WHEN linerdaddr = to_unsigned(16#18#, 7) ELSE
      line25StartsValid WHEN linerdaddr = to_unsigned(16#19#, 7) ELSE
      line26StartsValid WHEN linerdaddr = to_unsigned(16#1A#, 7) ELSE
      line27StartsValid WHEN linerdaddr = to_unsigned(16#1B#, 7) ELSE
      line28StartsValid WHEN linerdaddr = to_unsigned(16#1C#, 7) ELSE
      line29StartsValid WHEN linerdaddr = to_unsigned(16#1D#, 7) ELSE
      line30StartsValid WHEN linerdaddr = to_unsigned(16#1E#, 7) ELSE
      line31StartsValid WHEN linerdaddr = to_unsigned(16#1F#, 7) ELSE
      line32StartsValid WHEN linerdaddr = to_unsigned(16#20#, 7) ELSE
      line33StartsValid WHEN linerdaddr = to_unsigned(16#21#, 7) ELSE
      line34StartsValid WHEN linerdaddr = to_unsigned(16#22#, 7) ELSE
      line35StartsValid WHEN linerdaddr = to_unsigned(16#23#, 7) ELSE
      line36StartsValid WHEN linerdaddr = to_unsigned(16#24#, 7) ELSE
      line37StartsValid WHEN linerdaddr = to_unsigned(16#25#, 7) ELSE
      line38StartsValid WHEN linerdaddr = to_unsigned(16#26#, 7) ELSE
      line39StartsValid WHEN linerdaddr = to_unsigned(16#27#, 7) ELSE
      line40StartsValid WHEN linerdaddr = to_unsigned(16#28#, 7) ELSE
      line41StartsValid WHEN linerdaddr = to_unsigned(16#29#, 7) ELSE
      line42StartsValid WHEN linerdaddr = to_unsigned(16#2A#, 7) ELSE
      line43StartsValid WHEN linerdaddr = to_unsigned(16#2B#, 7) ELSE
      line44StartsValid WHEN linerdaddr = to_unsigned(16#2C#, 7) ELSE
      line45StartsValid WHEN linerdaddr = to_unsigned(16#2D#, 7) ELSE
      line46StartsValid WHEN linerdaddr = to_unsigned(16#2E#, 7) ELSE
      line47StartsValid WHEN linerdaddr = to_unsigned(16#2F#, 7) ELSE
      line48StartsValid WHEN linerdaddr = to_unsigned(16#30#, 7) ELSE
      line49StartsValid WHEN linerdaddr = to_unsigned(16#31#, 7) ELSE
      line50StartsValid WHEN linerdaddr = to_unsigned(16#32#, 7) ELSE
      line51StartsValid WHEN linerdaddr = to_unsigned(16#33#, 7) ELSE
      line52StartsValid WHEN linerdaddr = to_unsigned(16#34#, 7) ELSE
      line53StartsValid WHEN linerdaddr = to_unsigned(16#35#, 7) ELSE
      line54StartsValid WHEN linerdaddr = to_unsigned(16#36#, 7) ELSE
      line55StartsValid WHEN linerdaddr = to_unsigned(16#37#, 7) ELSE
      line56StartsValid WHEN linerdaddr = to_unsigned(16#38#, 7) ELSE
      line57StartsValid WHEN linerdaddr = to_unsigned(16#39#, 7) ELSE
      line58StartsValid WHEN linerdaddr = to_unsigned(16#3A#, 7) ELSE
      line59StartsValid WHEN linerdaddr = to_unsigned(16#3B#, 7) ELSE
      line60StartsValid WHEN linerdaddr = to_unsigned(16#3C#, 7) ELSE
      line61StartsValid WHEN linerdaddr = to_unsigned(16#3D#, 7) ELSE
      line62StartsValid WHEN linerdaddr = to_unsigned(16#3E#, 7) ELSE
      line63StartsValid WHEN linerdaddr = to_unsigned(16#3F#, 7) ELSE
      line64StartsValid WHEN linerdaddr = to_unsigned(16#40#, 7) ELSE
      line65StartsValid WHEN linerdaddr = to_unsigned(16#41#, 7) ELSE
      line66StartsValid WHEN linerdaddr = to_unsigned(16#42#, 7) ELSE
      line67StartsValid WHEN linerdaddr = to_unsigned(16#43#, 7) ELSE
      line68StartsValid WHEN linerdaddr = to_unsigned(16#44#, 7) ELSE
      line69StartsValid WHEN linerdaddr = to_unsigned(16#45#, 7) ELSE
      line70StartsValid WHEN linerdaddr = to_unsigned(16#46#, 7) ELSE
      line71StartsValid WHEN linerdaddr = to_unsigned(16#47#, 7) ELSE
      line72StartsValid WHEN linerdaddr = to_unsigned(16#48#, 7) ELSE
      line73StartsValid WHEN linerdaddr = to_unsigned(16#49#, 7) ELSE
      line74StartsValid WHEN linerdaddr = to_unsigned(16#4A#, 7) ELSE
      line75StartsValid WHEN linerdaddr = to_unsigned(16#4B#, 7) ELSE
      line76StartsValid WHEN linerdaddr = to_unsigned(16#4C#, 7) ELSE
      line77StartsValid WHEN linerdaddr = to_unsigned(16#4D#, 7) ELSE
      line78StartsValid WHEN linerdaddr = to_unsigned(16#4E#, 7) ELSE
      line79StartsValid WHEN linerdaddr = to_unsigned(16#4F#, 7) ELSE
      line80StartsValid WHEN linerdaddr = to_unsigned(16#50#, 7) ELSE
      line81StartsValid WHEN linerdaddr = to_unsigned(16#51#, 7) ELSE
      line82StartsValid WHEN linerdaddr = to_unsigned(16#52#, 7) ELSE
      line83StartsValid WHEN linerdaddr = to_unsigned(16#53#, 7) ELSE
      line84StartsValid WHEN linerdaddr = to_unsigned(16#54#, 7) ELSE
      line85StartsValid WHEN linerdaddr = to_unsigned(16#55#, 7) ELSE
      line86StartsValid WHEN linerdaddr = to_unsigned(16#56#, 7) ELSE
      line87StartsValid WHEN linerdaddr = to_unsigned(16#57#, 7) ELSE
      line88StartsValid WHEN linerdaddr = to_unsigned(16#58#, 7) ELSE
      line89StartsValid WHEN linerdaddr = to_unsigned(16#59#, 7) ELSE
      line90StartsValid WHEN linerdaddr = to_unsigned(16#5A#, 7) ELSE
      line91StartsValid WHEN linerdaddr = to_unsigned(16#5B#, 7) ELSE
      line92StartsValid WHEN linerdaddr = to_unsigned(16#5C#, 7) ELSE
      line93StartsValid WHEN linerdaddr = to_unsigned(16#5D#, 7) ELSE
      line94StartsValid WHEN linerdaddr = to_unsigned(16#5E#, 7) ELSE
      line95StartsValid WHEN linerdaddr = to_unsigned(16#5F#, 7) ELSE
      line96StartsValid WHEN linerdaddr = to_unsigned(16#60#, 7) ELSE
      line97StartsValid WHEN linerdaddr = to_unsigned(16#61#, 7) ELSE
      line98StartsValid WHEN linerdaddr = to_unsigned(16#62#, 7) ELSE
      line99StartsValid WHEN linerdaddr = to_unsigned(16#63#, 7) ELSE
      line100StartsValid WHEN linerdaddr = to_unsigned(16#64#, 7) ELSE
      line101StartsValid WHEN linerdaddr = to_unsigned(16#65#, 7) ELSE
      line102StartsValid WHEN linerdaddr = to_unsigned(16#66#, 7) ELSE
      line103StartsValid WHEN linerdaddr = to_unsigned(16#67#, 7) ELSE
      line104StartsValid WHEN linerdaddr = to_unsigned(16#68#, 7) ELSE
      line105StartsValid WHEN linerdaddr = to_unsigned(16#69#, 7) ELSE
      line106StartsValid WHEN linerdaddr = to_unsigned(16#6A#, 7) ELSE
      line107StartsValid WHEN linerdaddr = to_unsigned(16#6B#, 7) ELSE
      line108StartsValid WHEN linerdaddr = to_unsigned(16#6C#, 7) ELSE
      line109StartsValid WHEN linerdaddr = to_unsigned(16#6D#, 7) ELSE
      line110StartsValid WHEN linerdaddr = to_unsigned(16#6E#, 7) ELSE
      line111StartsValid WHEN linerdaddr = to_unsigned(16#6F#, 7) ELSE
      line112StartsValid WHEN linerdaddr = to_unsigned(16#70#, 7) ELSE
      line113StartsValid WHEN linerdaddr = to_unsigned(16#71#, 7) ELSE
      line114StartsValid WHEN linerdaddr = to_unsigned(16#72#, 7) ELSE
      line115StartsValid WHEN linerdaddr = to_unsigned(16#73#, 7) ELSE
      line116StartsValid WHEN linerdaddr = to_unsigned(16#74#, 7) ELSE
      line117StartsValid WHEN linerdaddr = to_unsigned(16#75#, 7) ELSE
      line118StartsValid WHEN linerdaddr = to_unsigned(16#76#, 7) ELSE
      line119StartsValid WHEN linerdaddr = to_unsigned(16#77#, 7) ELSE
      line120StartsValid WHEN linerdaddr = to_unsigned(16#78#, 7) ELSE
      line121StartsValid WHEN linerdaddr = to_unsigned(16#79#, 7) ELSE
      line122StartsValid WHEN linerdaddr = to_unsigned(16#7A#, 7) ELSE
      line123StartsValid WHEN linerdaddr = to_unsigned(16#7B#, 7) ELSE
      line124StartsValid WHEN linerdaddr = to_unsigned(16#7C#, 7) ELSE
      line125StartsValid WHEN linerdaddr = to_unsigned(16#7D#, 7) ELSE
      line126StartsValid WHEN linerdaddr = to_unsigned(16#7E#, 7) ELSE
      line127StartsValid;

  ramrdline <= refnewLine AND (linerdvalid AND (pixelValidPreReg AND (frameStartValid AND refFrameValid)));

  RAMrdload <= ramrdframe OR ramrdline;

  lsreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line0Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line0StartsEn = '1' THEN
        line0Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_process;


  lsreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line1Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line1StartsEn = '1' THEN
        line1Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_1_process;


  lsreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line2Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line2StartsEn = '1' THEN
        line2Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_2_process;


  lsreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line3Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line3StartsEn = '1' THEN
        line3Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_3_process;


  lsreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line4Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line4StartsEn = '1' THEN
        line4Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_4_process;


  lsreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line5Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line5StartsEn = '1' THEN
        line5Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_5_process;


  lsreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line6Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line6StartsEn = '1' THEN
        line6Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_6_process;


  lsreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line7Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line7StartsEn = '1' THEN
        line7Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_7_process;


  lsreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line8Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line8StartsEn = '1' THEN
        line8Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_8_process;


  lsreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line9Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line9StartsEn = '1' THEN
        line9Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_9_process;


  lsreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line10Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line10StartsEn = '1' THEN
        line10Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_10_process;


  lsreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line11Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line11StartsEn = '1' THEN
        line11Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_11_process;


  lsreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line12Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line12StartsEn = '1' THEN
        line12Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_12_process;


  lsreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line13Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line13StartsEn = '1' THEN
        line13Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_13_process;


  lsreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line14Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line14StartsEn = '1' THEN
        line14Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_14_process;


  lsreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line15Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line15StartsEn = '1' THEN
        line15Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_15_process;


  lsreg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line16Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line16StartsEn = '1' THEN
        line16Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_16_process;


  lsreg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line17Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line17StartsEn = '1' THEN
        line17Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_17_process;


  lsreg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line18Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line18StartsEn = '1' THEN
        line18Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_18_process;


  lsreg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line19Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line19StartsEn = '1' THEN
        line19Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_19_process;


  lsreg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line20Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line20StartsEn = '1' THEN
        line20Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_20_process;


  lsreg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line21Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line21StartsEn = '1' THEN
        line21Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_21_process;


  lsreg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line22Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line22StartsEn = '1' THEN
        line22Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_22_process;


  lsreg_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line23Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line23StartsEn = '1' THEN
        line23Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_23_process;


  lsreg_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line24Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line24StartsEn = '1' THEN
        line24Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_24_process;


  lsreg_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line25Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line25StartsEn = '1' THEN
        line25Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_25_process;


  lsreg_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line26Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line26StartsEn = '1' THEN
        line26Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_26_process;


  lsreg_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line27Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line27StartsEn = '1' THEN
        line27Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_27_process;


  lsreg_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line28Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line28StartsEn = '1' THEN
        line28Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_28_process;


  lsreg_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line29Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line29StartsEn = '1' THEN
        line29Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_29_process;


  lsreg_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line30Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line30StartsEn = '1' THEN
        line30Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_30_process;


  lsreg_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line31Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line31StartsEn = '1' THEN
        line31Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_31_process;


  lsreg_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line32Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line32StartsEn = '1' THEN
        line32Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_32_process;


  lsreg_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line33Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line33StartsEn = '1' THEN
        line33Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_33_process;


  lsreg_34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line34Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line34StartsEn = '1' THEN
        line34Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_34_process;


  lsreg_35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line35Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line35StartsEn = '1' THEN
        line35Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_35_process;


  lsreg_36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line36Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line36StartsEn = '1' THEN
        line36Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_36_process;


  lsreg_37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line37Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line37StartsEn = '1' THEN
        line37Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_37_process;


  lsreg_38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line38Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line38StartsEn = '1' THEN
        line38Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_38_process;


  lsreg_39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line39Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line39StartsEn = '1' THEN
        line39Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_39_process;


  lsreg_40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line40Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line40StartsEn = '1' THEN
        line40Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_40_process;


  lsreg_41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line41Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line41StartsEn = '1' THEN
        line41Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_41_process;


  lsreg_42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line42Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line42StartsEn = '1' THEN
        line42Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_42_process;


  lsreg_43_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line43Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line43StartsEn = '1' THEN
        line43Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_43_process;


  lsreg_44_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line44Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line44StartsEn = '1' THEN
        line44Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_44_process;


  lsreg_45_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line45Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line45StartsEn = '1' THEN
        line45Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_45_process;


  lsreg_46_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line46Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line46StartsEn = '1' THEN
        line46Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_46_process;


  lsreg_47_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line47Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line47StartsEn = '1' THEN
        line47Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_47_process;


  lsreg_48_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line48Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line48StartsEn = '1' THEN
        line48Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_48_process;


  lsreg_49_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line49Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line49StartsEn = '1' THEN
        line49Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_49_process;


  lsreg_50_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line50Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line50StartsEn = '1' THEN
        line50Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_50_process;


  lsreg_51_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line51Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line51StartsEn = '1' THEN
        line51Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_51_process;


  lsreg_52_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line52Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line52StartsEn = '1' THEN
        line52Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_52_process;


  lsreg_53_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line53Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line53StartsEn = '1' THEN
        line53Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_53_process;


  lsreg_54_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line54Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line54StartsEn = '1' THEN
        line54Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_54_process;


  lsreg_55_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line55Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line55StartsEn = '1' THEN
        line55Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_55_process;


  lsreg_56_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line56Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line56StartsEn = '1' THEN
        line56Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_56_process;


  lsreg_57_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line57Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line57StartsEn = '1' THEN
        line57Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_57_process;


  lsreg_58_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line58Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line58StartsEn = '1' THEN
        line58Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_58_process;


  lsreg_59_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line59Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line59StartsEn = '1' THEN
        line59Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_59_process;


  lsreg_60_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line60Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line60StartsEn = '1' THEN
        line60Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_60_process;


  lsreg_61_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line61Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line61StartsEn = '1' THEN
        line61Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_61_process;


  lsreg_62_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line62Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line62StartsEn = '1' THEN
        line62Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_62_process;


  lsreg_63_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line63Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line63StartsEn = '1' THEN
        line63Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_63_process;


  lsreg_64_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line64Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line64StartsEn = '1' THEN
        line64Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_64_process;


  lsreg_65_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line65Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line65StartsEn = '1' THEN
        line65Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_65_process;


  lsreg_66_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line66Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line66StartsEn = '1' THEN
        line66Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_66_process;


  lsreg_67_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line67Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line67StartsEn = '1' THEN
        line67Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_67_process;


  lsreg_68_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line68Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line68StartsEn = '1' THEN
        line68Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_68_process;


  lsreg_69_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line69Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line69StartsEn = '1' THEN
        line69Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_69_process;


  lsreg_70_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line70Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line70StartsEn = '1' THEN
        line70Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_70_process;


  lsreg_71_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line71Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line71StartsEn = '1' THEN
        line71Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_71_process;


  lsreg_72_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line72Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line72StartsEn = '1' THEN
        line72Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_72_process;


  lsreg_73_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line73Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line73StartsEn = '1' THEN
        line73Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_73_process;


  lsreg_74_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line74Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line74StartsEn = '1' THEN
        line74Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_74_process;


  lsreg_75_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line75Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line75StartsEn = '1' THEN
        line75Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_75_process;


  lsreg_76_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line76Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line76StartsEn = '1' THEN
        line76Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_76_process;


  lsreg_77_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line77Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line77StartsEn = '1' THEN
        line77Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_77_process;


  lsreg_78_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line78Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line78StartsEn = '1' THEN
        line78Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_78_process;


  lsreg_79_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line79Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line79StartsEn = '1' THEN
        line79Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_79_process;


  lsreg_80_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line80Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line80StartsEn = '1' THEN
        line80Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_80_process;


  lsreg_81_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line81Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line81StartsEn = '1' THEN
        line81Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_81_process;


  lsreg_82_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line82Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line82StartsEn = '1' THEN
        line82Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_82_process;


  lsreg_83_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line83Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line83StartsEn = '1' THEN
        line83Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_83_process;


  lsreg_84_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line84Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line84StartsEn = '1' THEN
        line84Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_84_process;


  lsreg_85_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line85Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line85StartsEn = '1' THEN
        line85Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_85_process;


  lsreg_86_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line86Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line86StartsEn = '1' THEN
        line86Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_86_process;


  lsreg_87_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line87Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line87StartsEn = '1' THEN
        line87Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_87_process;


  lsreg_88_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line88Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line88StartsEn = '1' THEN
        line88Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_88_process;


  lsreg_89_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line89Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line89StartsEn = '1' THEN
        line89Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_89_process;


  lsreg_90_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line90Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line90StartsEn = '1' THEN
        line90Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_90_process;


  lsreg_91_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line91Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line91StartsEn = '1' THEN
        line91Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_91_process;


  lsreg_92_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line92Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line92StartsEn = '1' THEN
        line92Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_92_process;


  lsreg_93_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line93Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line93StartsEn = '1' THEN
        line93Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_93_process;


  lsreg_94_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line94Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line94StartsEn = '1' THEN
        line94Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_94_process;


  lsreg_95_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line95Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line95StartsEn = '1' THEN
        line95Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_95_process;


  lsreg_96_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line96Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line96StartsEn = '1' THEN
        line96Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_96_process;


  lsreg_97_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line97Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line97StartsEn = '1' THEN
        line97Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_97_process;


  lsreg_98_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line98Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line98StartsEn = '1' THEN
        line98Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_98_process;


  lsreg_99_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line99Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line99StartsEn = '1' THEN
        line99Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_99_process;


  lsreg_100_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line100Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line100StartsEn = '1' THEN
        line100Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_100_process;


  lsreg_101_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line101Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line101StartsEn = '1' THEN
        line101Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_101_process;


  lsreg_102_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line102Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line102StartsEn = '1' THEN
        line102Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_102_process;


  lsreg_103_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line103Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line103StartsEn = '1' THEN
        line103Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_103_process;


  lsreg_104_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line104Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line104StartsEn = '1' THEN
        line104Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_104_process;


  lsreg_105_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line105Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line105StartsEn = '1' THEN
        line105Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_105_process;


  lsreg_106_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line106Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line106StartsEn = '1' THEN
        line106Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_106_process;


  lsreg_107_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line107Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line107StartsEn = '1' THEN
        line107Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_107_process;


  lsreg_108_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line108Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line108StartsEn = '1' THEN
        line108Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_108_process;


  lsreg_109_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line109Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line109StartsEn = '1' THEN
        line109Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_109_process;


  lsreg_110_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line110Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line110StartsEn = '1' THEN
        line110Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_110_process;


  lsreg_111_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line111Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line111StartsEn = '1' THEN
        line111Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_111_process;


  lsreg_112_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line112Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line112StartsEn = '1' THEN
        line112Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_112_process;


  lsreg_113_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line113Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line113StartsEn = '1' THEN
        line113Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_113_process;


  lsreg_114_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line114Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line114StartsEn = '1' THEN
        line114Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_114_process;


  lsreg_115_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line115Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line115StartsEn = '1' THEN
        line115Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_115_process;


  lsreg_116_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line116Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line116StartsEn = '1' THEN
        line116Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_116_process;


  lsreg_117_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line117Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line117StartsEn = '1' THEN
        line117Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_117_process;


  lsreg_118_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line118Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line118StartsEn = '1' THEN
        line118Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_118_process;


  lsreg_119_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line119Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line119StartsEn = '1' THEN
        line119Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_119_process;


  lsreg_120_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line120Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line120StartsEn = '1' THEN
        line120Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_120_process;


  lsreg_121_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line121Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line121StartsEn = '1' THEN
        line121Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_121_process;


  lsreg_122_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line122Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line122StartsEn = '1' THEN
        line122Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_122_process;


  lsreg_123_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line123Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line123StartsEn = '1' THEN
        line123Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_123_process;


  lsreg_124_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line124Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line124StartsEn = '1' THEN
        line124Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_124_process;


  lsreg_125_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line125Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line125StartsEn = '1' THEN
        line125Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_125_process;


  lsreg_126_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line126Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line126StartsEn = '1' THEN
        line126Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_126_process;


  lsreg_127_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      line127Starts <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND line127StartsEn = '1' THEN
        line127Starts <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS lsreg_127_process;


  
  linerddata <= line0Starts WHEN linerdaddr = to_unsigned(16#00#, 7) ELSE
      line1Starts WHEN linerdaddr = to_unsigned(16#01#, 7) ELSE
      line2Starts WHEN linerdaddr = to_unsigned(16#02#, 7) ELSE
      line3Starts WHEN linerdaddr = to_unsigned(16#03#, 7) ELSE
      line4Starts WHEN linerdaddr = to_unsigned(16#04#, 7) ELSE
      line5Starts WHEN linerdaddr = to_unsigned(16#05#, 7) ELSE
      line6Starts WHEN linerdaddr = to_unsigned(16#06#, 7) ELSE
      line7Starts WHEN linerdaddr = to_unsigned(16#07#, 7) ELSE
      line8Starts WHEN linerdaddr = to_unsigned(16#08#, 7) ELSE
      line9Starts WHEN linerdaddr = to_unsigned(16#09#, 7) ELSE
      line10Starts WHEN linerdaddr = to_unsigned(16#0A#, 7) ELSE
      line11Starts WHEN linerdaddr = to_unsigned(16#0B#, 7) ELSE
      line12Starts WHEN linerdaddr = to_unsigned(16#0C#, 7) ELSE
      line13Starts WHEN linerdaddr = to_unsigned(16#0D#, 7) ELSE
      line14Starts WHEN linerdaddr = to_unsigned(16#0E#, 7) ELSE
      line15Starts WHEN linerdaddr = to_unsigned(16#0F#, 7) ELSE
      line16Starts WHEN linerdaddr = to_unsigned(16#10#, 7) ELSE
      line17Starts WHEN linerdaddr = to_unsigned(16#11#, 7) ELSE
      line18Starts WHEN linerdaddr = to_unsigned(16#12#, 7) ELSE
      line19Starts WHEN linerdaddr = to_unsigned(16#13#, 7) ELSE
      line20Starts WHEN linerdaddr = to_unsigned(16#14#, 7) ELSE
      line21Starts WHEN linerdaddr = to_unsigned(16#15#, 7) ELSE
      line22Starts WHEN linerdaddr = to_unsigned(16#16#, 7) ELSE
      line23Starts WHEN linerdaddr = to_unsigned(16#17#, 7) ELSE
      line24Starts WHEN linerdaddr = to_unsigned(16#18#, 7) ELSE
      line25Starts WHEN linerdaddr = to_unsigned(16#19#, 7) ELSE
      line26Starts WHEN linerdaddr = to_unsigned(16#1A#, 7) ELSE
      line27Starts WHEN linerdaddr = to_unsigned(16#1B#, 7) ELSE
      line28Starts WHEN linerdaddr = to_unsigned(16#1C#, 7) ELSE
      line29Starts WHEN linerdaddr = to_unsigned(16#1D#, 7) ELSE
      line30Starts WHEN linerdaddr = to_unsigned(16#1E#, 7) ELSE
      line31Starts WHEN linerdaddr = to_unsigned(16#1F#, 7) ELSE
      line32Starts WHEN linerdaddr = to_unsigned(16#20#, 7) ELSE
      line33Starts WHEN linerdaddr = to_unsigned(16#21#, 7) ELSE
      line34Starts WHEN linerdaddr = to_unsigned(16#22#, 7) ELSE
      line35Starts WHEN linerdaddr = to_unsigned(16#23#, 7) ELSE
      line36Starts WHEN linerdaddr = to_unsigned(16#24#, 7) ELSE
      line37Starts WHEN linerdaddr = to_unsigned(16#25#, 7) ELSE
      line38Starts WHEN linerdaddr = to_unsigned(16#26#, 7) ELSE
      line39Starts WHEN linerdaddr = to_unsigned(16#27#, 7) ELSE
      line40Starts WHEN linerdaddr = to_unsigned(16#28#, 7) ELSE
      line41Starts WHEN linerdaddr = to_unsigned(16#29#, 7) ELSE
      line42Starts WHEN linerdaddr = to_unsigned(16#2A#, 7) ELSE
      line43Starts WHEN linerdaddr = to_unsigned(16#2B#, 7) ELSE
      line44Starts WHEN linerdaddr = to_unsigned(16#2C#, 7) ELSE
      line45Starts WHEN linerdaddr = to_unsigned(16#2D#, 7) ELSE
      line46Starts WHEN linerdaddr = to_unsigned(16#2E#, 7) ELSE
      line47Starts WHEN linerdaddr = to_unsigned(16#2F#, 7) ELSE
      line48Starts WHEN linerdaddr = to_unsigned(16#30#, 7) ELSE
      line49Starts WHEN linerdaddr = to_unsigned(16#31#, 7) ELSE
      line50Starts WHEN linerdaddr = to_unsigned(16#32#, 7) ELSE
      line51Starts WHEN linerdaddr = to_unsigned(16#33#, 7) ELSE
      line52Starts WHEN linerdaddr = to_unsigned(16#34#, 7) ELSE
      line53Starts WHEN linerdaddr = to_unsigned(16#35#, 7) ELSE
      line54Starts WHEN linerdaddr = to_unsigned(16#36#, 7) ELSE
      line55Starts WHEN linerdaddr = to_unsigned(16#37#, 7) ELSE
      line56Starts WHEN linerdaddr = to_unsigned(16#38#, 7) ELSE
      line57Starts WHEN linerdaddr = to_unsigned(16#39#, 7) ELSE
      line58Starts WHEN linerdaddr = to_unsigned(16#3A#, 7) ELSE
      line59Starts WHEN linerdaddr = to_unsigned(16#3B#, 7) ELSE
      line60Starts WHEN linerdaddr = to_unsigned(16#3C#, 7) ELSE
      line61Starts WHEN linerdaddr = to_unsigned(16#3D#, 7) ELSE
      line62Starts WHEN linerdaddr = to_unsigned(16#3E#, 7) ELSE
      line63Starts WHEN linerdaddr = to_unsigned(16#3F#, 7) ELSE
      line64Starts WHEN linerdaddr = to_unsigned(16#40#, 7) ELSE
      line65Starts WHEN linerdaddr = to_unsigned(16#41#, 7) ELSE
      line66Starts WHEN linerdaddr = to_unsigned(16#42#, 7) ELSE
      line67Starts WHEN linerdaddr = to_unsigned(16#43#, 7) ELSE
      line68Starts WHEN linerdaddr = to_unsigned(16#44#, 7) ELSE
      line69Starts WHEN linerdaddr = to_unsigned(16#45#, 7) ELSE
      line70Starts WHEN linerdaddr = to_unsigned(16#46#, 7) ELSE
      line71Starts WHEN linerdaddr = to_unsigned(16#47#, 7) ELSE
      line72Starts WHEN linerdaddr = to_unsigned(16#48#, 7) ELSE
      line73Starts WHEN linerdaddr = to_unsigned(16#49#, 7) ELSE
      line74Starts WHEN linerdaddr = to_unsigned(16#4A#, 7) ELSE
      line75Starts WHEN linerdaddr = to_unsigned(16#4B#, 7) ELSE
      line76Starts WHEN linerdaddr = to_unsigned(16#4C#, 7) ELSE
      line77Starts WHEN linerdaddr = to_unsigned(16#4D#, 7) ELSE
      line78Starts WHEN linerdaddr = to_unsigned(16#4E#, 7) ELSE
      line79Starts WHEN linerdaddr = to_unsigned(16#4F#, 7) ELSE
      line80Starts WHEN linerdaddr = to_unsigned(16#50#, 7) ELSE
      line81Starts WHEN linerdaddr = to_unsigned(16#51#, 7) ELSE
      line82Starts WHEN linerdaddr = to_unsigned(16#52#, 7) ELSE
      line83Starts WHEN linerdaddr = to_unsigned(16#53#, 7) ELSE
      line84Starts WHEN linerdaddr = to_unsigned(16#54#, 7) ELSE
      line85Starts WHEN linerdaddr = to_unsigned(16#55#, 7) ELSE
      line86Starts WHEN linerdaddr = to_unsigned(16#56#, 7) ELSE
      line87Starts WHEN linerdaddr = to_unsigned(16#57#, 7) ELSE
      line88Starts WHEN linerdaddr = to_unsigned(16#58#, 7) ELSE
      line89Starts WHEN linerdaddr = to_unsigned(16#59#, 7) ELSE
      line90Starts WHEN linerdaddr = to_unsigned(16#5A#, 7) ELSE
      line91Starts WHEN linerdaddr = to_unsigned(16#5B#, 7) ELSE
      line92Starts WHEN linerdaddr = to_unsigned(16#5C#, 7) ELSE
      line93Starts WHEN linerdaddr = to_unsigned(16#5D#, 7) ELSE
      line94Starts WHEN linerdaddr = to_unsigned(16#5E#, 7) ELSE
      line95Starts WHEN linerdaddr = to_unsigned(16#5F#, 7) ELSE
      line96Starts WHEN linerdaddr = to_unsigned(16#60#, 7) ELSE
      line97Starts WHEN linerdaddr = to_unsigned(16#61#, 7) ELSE
      line98Starts WHEN linerdaddr = to_unsigned(16#62#, 7) ELSE
      line99Starts WHEN linerdaddr = to_unsigned(16#63#, 7) ELSE
      line100Starts WHEN linerdaddr = to_unsigned(16#64#, 7) ELSE
      line101Starts WHEN linerdaddr = to_unsigned(16#65#, 7) ELSE
      line102Starts WHEN linerdaddr = to_unsigned(16#66#, 7) ELSE
      line103Starts WHEN linerdaddr = to_unsigned(16#67#, 7) ELSE
      line104Starts WHEN linerdaddr = to_unsigned(16#68#, 7) ELSE
      line105Starts WHEN linerdaddr = to_unsigned(16#69#, 7) ELSE
      line106Starts WHEN linerdaddr = to_unsigned(16#6A#, 7) ELSE
      line107Starts WHEN linerdaddr = to_unsigned(16#6B#, 7) ELSE
      line108Starts WHEN linerdaddr = to_unsigned(16#6C#, 7) ELSE
      line109Starts WHEN linerdaddr = to_unsigned(16#6D#, 7) ELSE
      line110Starts WHEN linerdaddr = to_unsigned(16#6E#, 7) ELSE
      line111Starts WHEN linerdaddr = to_unsigned(16#6F#, 7) ELSE
      line112Starts WHEN linerdaddr = to_unsigned(16#70#, 7) ELSE
      line113Starts WHEN linerdaddr = to_unsigned(16#71#, 7) ELSE
      line114Starts WHEN linerdaddr = to_unsigned(16#72#, 7) ELSE
      line115Starts WHEN linerdaddr = to_unsigned(16#73#, 7) ELSE
      line116Starts WHEN linerdaddr = to_unsigned(16#74#, 7) ELSE
      line117Starts WHEN linerdaddr = to_unsigned(16#75#, 7) ELSE
      line118Starts WHEN linerdaddr = to_unsigned(16#76#, 7) ELSE
      line119Starts WHEN linerdaddr = to_unsigned(16#77#, 7) ELSE
      line120Starts WHEN linerdaddr = to_unsigned(16#78#, 7) ELSE
      line121Starts WHEN linerdaddr = to_unsigned(16#79#, 7) ELSE
      line122Starts WHEN linerdaddr = to_unsigned(16#7A#, 7) ELSE
      line123Starts WHEN linerdaddr = to_unsigned(16#7B#, 7) ELSE
      line124Starts WHEN linerdaddr = to_unsigned(16#7C#, 7) ELSE
      line125Starts WHEN linerdaddr = to_unsigned(16#7D#, 7) ELSE
      line126Starts WHEN linerdaddr = to_unsigned(16#7E#, 7) ELSE
      line127Starts;

  fsreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      frameStart <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND pixelnewFrame = '1' THEN
        frameStart <= RAMwraddr;
      END IF;
    END IF;
  END PROCESS fsreg_process;


  
  RAMrdloadval <= linerddata WHEN refnewFrame = '0' ELSE
      frameStart;

  refEarlyInFrame <= refinFrame OR refnewFrame;

  refEarlyInLine <= refinLine OR refnewLine;

  constone <= to_unsigned(16#0001#, 15);

  RAMrdnextaddr <= RAMrdaddr + constone;

  
  addrmatch <= '1' WHEN RAMrdnextaddr = linerddata ELSE
      '0';

  notholdaddr <=  NOT (addrmatch AND linerdvalid);

  RAMrden <= notholdaddr AND (refEarlyInLine AND (refEarlyInFrame AND (pixelValidPreReg AND (frameStartValid AND refFrameValid))));

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 32767
  rdaddrcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      RAMrdaddr <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF RAMrdload = '1' THEN 
          RAMrdaddr <= RAMrdloadval;
        ELSIF RAMrden = '1' THEN 
          RAMrdaddr <= RAMrdaddr + to_unsigned(16#0001#, 15);
        END IF;
      END IF;
    END IF;
  END PROCESS rdaddrcounter_process;


  pixzeroconst <= to_signed(16#000000#, 24);

  RAMrddata_signed <= signed(RAMrddata);

  
  pixelOutReg <= pixzeroconst WHEN pixelOutValid = '0' ELSE
      RAMrddata_signed;

  pixelOReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pixelOut <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        pixelOut <= pixelOutReg;
      END IF;
    END IF;
  END PROCESS pixelOReg_process;


  out0 <= std_logic_vector(pixelOut);

  refzeroconst_2 <= to_signed(16#000000#, 24);

  in2_signed <= signed(in2);

  refpixelIReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refpixelInReg <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refpixelInReg <= in2_signed;
      END IF;
    END IF;
  END PROCESS refpixelIReg_process;


  refpixdlyline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refpixdlyline_reg <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refpixdlyline_reg(0) <= refpixelInReg;
        refpixdlyline_reg(1 TO 7) <= refpixdlyline_reg(0 TO 6);
      END IF;
    END IF;
  END PROCESS refpixdlyline_process;

  refpixeldly <= refpixdlyline_reg(7);

  
  refpixelOutReg <= refzeroconst_2 WHEN pixelValidOutReg = '0' ELSE
      refpixeldly;

  refpixelOReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      refPixelOut <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        refPixelOut <= refpixelOutReg;
      END IF;
    END IF;
  END PROCESS refpixelOReg_process;


  out1 <= std_logic_vector(refPixelOut);

  refvalOReg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validOut <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validOut <= pixelValidOutReg;
      END IF;
    END IF;
  END PROCESS refvalOReg_process;


  out2_valid <= validOut;

END rtl;

