-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\ObjectTrackerHDL\Overlay.vhd
-- Created: 2024-12-03 00:37:45
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Overlay
-- Source Path: ObjectTrackerHDL/ObjectTrackerHDL/Overlay
-- Hierarchy Level: 1
-- Model version: 3.7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ObjectTrackerHDL_pkg.ALL;

ENTITY Overlay IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        pixelIn                           :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        ctrlIn_hStart                     :   IN    std_logic;
        ctrlIn_hEnd                       :   IN    std_logic;
        ctrlIn_vStart                     :   IN    std_logic;
        ctrlIn_vEnd                       :   IN    std_logic;
        ctrlIn_valid                      :   IN    std_logic;
        ROIIn                             :   IN    vector_of_std_logic_vector16(0 TO 3);  -- uint16 [4]
        pixelOut                          :   OUT   vector_of_std_logic_vector8(0 TO 2);  -- uint8 [3]
        ctrlOut_hStart                    :   OUT   std_logic;
        ctrlOut_hEnd                      :   OUT   std_logic;
        ctrlOut_vStart                    :   OUT   std_logic;
        ctrlOut_vEnd                      :   OUT   std_logic;
        ctrlOut_valid                     :   OUT   std_logic
        );
END Overlay;


ARCHITECTURE rtl OF Overlay IS

  -- Component Declarations
  COMPONENT VideoOverlay
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          pixelIn                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          ctrlIn_hStart                   :   IN    std_logic;
          ctrlIn_hEnd                     :   IN    std_logic;
          ctrlIn_vStart                   :   IN    std_logic;
          ctrlIn_vEnd                     :   IN    std_logic;
          ctrlIn_valid                    :   IN    std_logic;
          Position                        :   IN    vector_of_std_logic_vector16(0 TO 3);  -- uint16 [4]
          pixelOut                        :   OUT   vector_of_std_logic_vector8(0 TO 2);  -- uint8 [3]
          ctrlOut_hStart                  :   OUT   std_logic;
          ctrlOut_hEnd                    :   OUT   std_logic;
          ctrlOut_vStart                  :   OUT   std_logic;
          ctrlOut_vEnd                    :   OUT   std_logic;
          ctrlOut_valid                   :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : VideoOverlay
    USE ENTITY work.VideoOverlay(rtl);

  -- Signals
  SIGNAL ROIIn_2                          : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Constant_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Subtract_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Vector_Concatenate_out1          : vector_of_unsigned16(0 TO 3);  -- uint16 [4]
  SIGNAL Vector_Concatenate_out1_1        : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL VideoOverlay_out1                : vector_of_std_logic_vector8(0 TO 2);  -- ufix8 [3]
  SIGNAL VideoOverlay_out2_hStart         : std_logic;
  SIGNAL VideoOverlay_out2_hEnd           : std_logic;
  SIGNAL VideoOverlay_out2_vStart         : std_logic;
  SIGNAL VideoOverlay_out2_vEnd           : std_logic;
  SIGNAL VideoOverlay_out2_valid          : std_logic;

BEGIN
  -- Overlay Subsystem overlays the template bounding box onto the image frame

  u_VideoOverlay : VideoOverlay
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              pixelIn => pixelIn,  -- uint8
              ctrlIn_hStart => ctrlIn_hStart,
              ctrlIn_hEnd => ctrlIn_hEnd,
              ctrlIn_vStart => ctrlIn_vStart,
              ctrlIn_vEnd => ctrlIn_vEnd,
              ctrlIn_valid => ctrlIn_valid,
              Position => Vector_Concatenate_out1_1,  -- uint16 [4]
              pixelOut => VideoOverlay_out1,  -- uint8 [3]
              ctrlOut_hStart => VideoOverlay_out2_hStart,
              ctrlOut_hEnd => VideoOverlay_out2_hEnd,
              ctrlOut_vStart => VideoOverlay_out2_vStart,
              ctrlOut_vEnd => VideoOverlay_out2_vEnd,
              ctrlOut_valid => VideoOverlay_out2_valid
              );

  ROIIn_2 <= unsigned(ROIIn(2));

  Constant_out1 <= to_unsigned(16#0001#, 16);

  Subtract_out1 <= ROIIn_2 - Constant_out1;

  Vector_Concatenate_out1(0) <= unsigned(ROIIn(1));
  Vector_Concatenate_out1(1) <= unsigned(ROIIn(0));
  Vector_Concatenate_out1(2) <= Subtract_out1;
  Vector_Concatenate_out1(3) <= Subtract_out1;

  outputgen: FOR k IN 0 TO 3 GENERATE
    Vector_Concatenate_out1_1(k) <= std_logic_vector(Vector_Concatenate_out1(k));
  END GENERATE;

  pixelOut <= VideoOverlay_out1;

  ctrlOut_hStart <= VideoOverlay_out2_hStart;

  ctrlOut_hEnd <= VideoOverlay_out2_hEnd;

  ctrlOut_vStart <= VideoOverlay_out2_vStart;

  ctrlOut_vEnd <= VideoOverlay_out2_vEnd;

  ctrlOut_valid <= VideoOverlay_out2_valid;

END rtl;

